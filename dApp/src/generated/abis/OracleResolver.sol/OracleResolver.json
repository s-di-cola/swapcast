{"abi":[{"type":"constructor","inputs":[{"name":"_predictionManagerAddress","type":"address","internalType":"address"},{"name":"_feedRegistryAddress","type":"address","internalType":"address"},{"name":"initialOwner","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"feedRegistry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IFeedRegistry"}],"stateMutability":"view"},{"type":"function","name":"marketOracles","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"baseToken","type":"address","internalType":"address"},{"name":"quoteToken","type":"address","internalType":"address"},{"name":"priceThreshold","type":"uint256","internalType":"uint256"},{"name":"isRegistered","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"maxPriceStalenessSeconds","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"predictionManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPredictionManagerForResolver"}],"stateMutability":"view"},{"type":"function","name":"registerOracle","inputs":[{"name":"_marketId","type":"uint256","internalType":"uint256"},{"name":"_baseToken","type":"address","internalType":"address"},{"name":"_quoteToken","type":"address","internalType":"address"},{"name":"_priceThreshold","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resolveMarket","inputs":[{"name":"_marketId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMaxPriceStaleness","inputs":[{"name":"_newStalenessSeconds","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"MarketResolved","inputs":[{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"price","type":"int256","indexed":false,"internalType":"int256"},{"name":"winningOutcome","type":"uint8","indexed":false,"internalType":"enum PredictionTypes.Outcome"}],"anonymous":false},{"type":"event","name":"MaxPriceStalenessSet","inputs":[{"name":"oldStaleness","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newStaleness","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OracleRegistered","inputs":[{"name":"marketId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"baseToken","type":"address","indexed":false,"internalType":"address"},{"name":"quoteToken","type":"address","indexed":false,"internalType":"address"},{"name":"priceThreshold","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"FeedRegistryNotSet","inputs":[]},{"type":"error","name":"InvalidPrice","inputs":[]},{"type":"error","name":"InvalidPriceThreshold","inputs":[]},{"type":"error","name":"InvalidRound","inputs":[]},{"type":"error","name":"InvalidTokenAddress","inputs":[]},{"type":"error","name":"OracleAlreadyRegistered","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"OracleNotRegistered","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"PredictionManagerZeroAddress","inputs":[]},{"type":"error","name":"PriceIsStale","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"lastUpdatedAt","type":"uint256","internalType":"uint256"},{"name":"currentBlockTimestamp","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ResolutionFailedInManager","inputs":[{"name":"marketId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"StaleRound","inputs":[]}],"bytecode":{"object":"0x60c03461014957601f610a4838819003918201601f19168301916001600160401b0383118484101761014d578084926060946040528339810103126101495761004781610161565b9061005460208201610161565b906001600160a01b039061006a90604001610161565b16918215610136575f80546001600160a01b031981168517825560405194916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001600160a01b0316908115610127576001600160a01b03169081156101185760805260a052610e106002556108d29081610176823960805181818161013201526105f6015260a0518181816102240152818161040201526105780152f35b630f58058360e11b5f5260045ffd5b63f9e10fb560e01b5f5260045ffd5b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036101495756fe6080806040526004361015610012575f80fd5b5f905f3560e01c9081634c8d1eda146107ab575080636399d03d1461050857806365b2d327146104b2578063715018a6146104585780638da5cb5b1461043157806390238c39146103ec578063d5258c7a1461017f578063d9c1408b14610161578063ee687a981461011c5763f2fde38b1461008c575f80fd5b34610119576020366003190112610119576004356001600160a01b03811690819003610115576100ba610876565b80156101015781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b80fd5b50346101195780600319360112610119576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101195780600319360112610119576020600254604051908152f35b5034610119576080366003190112610119576004356024356001600160a01b038116908181036103e8576044356001600160a01b0381169081810361039757606435926101ca610876565b858752600160205260ff6003604089200154166103d457841580156103cc575b6103bd5783156103ae5760405163d2edb6dd60e01b81526001600160a01b03918216600482015291166024820152602081806044810103817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156103a357869161035d575b506001600160a01b03161561034e576040516080810181811067ffffffffffffffff82111761033a5760409081528482526020808301848152838301868152600160608087018281528b8d52828652868d20975188546001600160a01b039182166001600160a01b0319918216178a559551938901805494909116939095169290921790935590516002860155516003909401805460ff191694151560ff16949094179093558151958652850192909252908301919091527f5189ceacc48007b03b28db0059c86af83c70ae1ba26577367984ef86c596c2d991a280f35b634e487b7160e01b87526041600452602487fd5b631a40131f60e11b8552600485fd5b90506020813d60201161039b575b8161037860209383610808565b8101031261039757516001600160a01b0381168103610397575f61025c565b8580fd5b3d915061036b565b6040513d88823e3d90fd5b6309524aff60e41b8752600487fd5b630f58058360e11b8752600487fd5b5082156101ea565b63917a7deb60e01b87526004869052602487fd5b8380fd5b50346101195780600319360112610119576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610119578060031936011261011957546040516001600160a01b039091168152602090f35b5034610119578060031936011261011957610471610876565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610119576020366003190112610119577fe21c7294aea4443442e8d93c674d8430a17f35e245338666aece1e90b77af00c60406004356104f2610876565b600254908060025582519182526020820152a180f35b50346106c65760203660031901126106c657600435805f52600160205260405f2060ff600382015416156107985780546001820154600292830154925460405163bcfd032d60e01b81526001600160a01b0393841660048201529183166024830152929160a090829060449082907f0000000000000000000000000000000000000000000000000000000000000000165afa92831561078d575f935f945f935f9261072a575b5069ffffffffffffffffffff1690811561071b5769ffffffffffffffffffff161061070c575f8413156106fe578142034281116106ea57116106d0575081106106ca5760015b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156106c6575f80916064604051809481936314139b4d60e01b835289600484015261064e6024840189610855565b8860448401525af190816106b1575b50610676576307d933f360e51b84526004839052602484fd5b7fa686fce7727b7dee0d2d24872642450c17ba558c72d62214c173a223ef75c2b8916106ad60409283519283526020830190610855565ba280f35b6106be9195505f90610808565b5f935f61065d565b5f80fd5b5f6105f4565b8363a46ac88160e01b5f526004526024524260445260645ffd5b634e487b7160e01b5f52601160045260245ffd5b62bfc92160e01b5f5260045ffd5b6304d2887160e01b5f5260045ffd5b6328ad4a9560e21b5f5260045ffd5b95505050905060a0833d60a011610785575b8161074960a09383610808565b810103126106c65761075a8361083e565b90602084015169ffffffffffffffffffff61077c60806060880151970161083e565b919593906105ae565b3d915061073c565b6040513d5f823e3d90fd5b50631788ec2b60e21b5f5260045260245ffd5b346106c65760203660031901126106c6576080906004355f52600160205260405f2060018060a01b038154169060018060a01b0360018201541660ff60036002840154930154169284526020840152604083015215156060820152f35b90601f8019910116810190811067ffffffffffffffff82111761082a57604052565b634e487b7160e01b5f52604160045260245ffd5b519069ffffffffffffffffffff821682036106c657565b9060038210156108625752565b634e487b7160e01b5f52602160045260245ffd5b5f546001600160a01b0316330361088957565b63118cdaa760e01b5f523360045260245ffdfea26469706673582212209bbcfddbbadbf93bd39655c16b07ecf8b6f52294c4bc9372b279b4ce5ab142fe64736f6c634300081a0033","sourceMap":"1264:13519:134:-:0;;;;;;;;;;;;;-1:-1:-1;;1264:13519:134;;;;-1:-1:-1;;;;;1264:13519:134;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1264:13519:134;;;;;;:::i;:::-;;1273:26:24;;;1269:95;;-1:-1:-1;1264:13519:134;;-1:-1:-1;;;;;;1264:13519:134;;;;;;;;;;-1:-1:-1;;;;;1264:13519:134;;;;3052:40:24;;-1:-1:-1;3052:40:24;-1:-1:-1;;;;;1264:13519:134;;7680:39;;7676:82;;-1:-1:-1;;;;;1264:13519:134;;7772:34;;7768:68;;7847:76;;7933:50;;8020:4;7993:31;1264:13519;;;;;;;7847:76;1264:13519;;;;;;;;;;7933:50;1264:13519;;;;;;;;;;;;;;;;7768:68;7815:21;;;-1:-1:-1;7815:21:134;;-1:-1:-1;7815:21:134;7676:82;7728:30;;;-1:-1:-1;7728:30:134;;-1:-1:-1;7728:30:134;1269:95:24;1322:31;;;-1:-1:-1;1322:31:24;-1:-1:-1;1322:31:24;1264:13519:134;;-1:-1:-1;1322:31:24;1264:13519:134;-1:-1:-1;1264:13519:134;;;;;;-1:-1:-1;1264:13519:134;;;;;-1:-1:-1;1264:13519:134;;;;-1:-1:-1;;;;;1264:13519:134;;;;;;:::o","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f905f3560e01c9081634c8d1eda146107ab575080636399d03d1461050857806365b2d327146104b2578063715018a6146104585780638da5cb5b1461043157806390238c39146103ec578063d5258c7a1461017f578063d9c1408b14610161578063ee687a981461011c5763f2fde38b1461008c575f80fd5b34610119576020366003190112610119576004356001600160a01b03811690819003610115576100ba610876565b80156101015781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b80fd5b50346101195780600319360112610119576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346101195780600319360112610119576020600254604051908152f35b5034610119576080366003190112610119576004356024356001600160a01b038116908181036103e8576044356001600160a01b0381169081810361039757606435926101ca610876565b858752600160205260ff6003604089200154166103d457841580156103cc575b6103bd5783156103ae5760405163d2edb6dd60e01b81526001600160a01b03918216600482015291166024820152602081806044810103817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156103a357869161035d575b506001600160a01b03161561034e576040516080810181811067ffffffffffffffff82111761033a5760409081528482526020808301848152838301868152600160608087018281528b8d52828652868d20975188546001600160a01b039182166001600160a01b0319918216178a559551938901805494909116939095169290921790935590516002860155516003909401805460ff191694151560ff16949094179093558151958652850192909252908301919091527f5189ceacc48007b03b28db0059c86af83c70ae1ba26577367984ef86c596c2d991a280f35b634e487b7160e01b87526041600452602487fd5b631a40131f60e11b8552600485fd5b90506020813d60201161039b575b8161037860209383610808565b8101031261039757516001600160a01b0381168103610397575f61025c565b8580fd5b3d915061036b565b6040513d88823e3d90fd5b6309524aff60e41b8752600487fd5b630f58058360e11b8752600487fd5b5082156101ea565b63917a7deb60e01b87526004869052602487fd5b8380fd5b50346101195780600319360112610119576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610119578060031936011261011957546040516001600160a01b039091168152602090f35b5034610119578060031936011261011957610471610876565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610119576020366003190112610119577fe21c7294aea4443442e8d93c674d8430a17f35e245338666aece1e90b77af00c60406004356104f2610876565b600254908060025582519182526020820152a180f35b50346106c65760203660031901126106c657600435805f52600160205260405f2060ff600382015416156107985780546001820154600292830154925460405163bcfd032d60e01b81526001600160a01b0393841660048201529183166024830152929160a090829060449082907f0000000000000000000000000000000000000000000000000000000000000000165afa92831561078d575f935f945f935f9261072a575b5069ffffffffffffffffffff1690811561071b5769ffffffffffffffffffff161061070c575f8413156106fe578142034281116106ea57116106d0575081106106ca5760015b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156106c6575f80916064604051809481936314139b4d60e01b835289600484015261064e6024840189610855565b8860448401525af190816106b1575b50610676576307d933f360e51b84526004839052602484fd5b7fa686fce7727b7dee0d2d24872642450c17ba558c72d62214c173a223ef75c2b8916106ad60409283519283526020830190610855565ba280f35b6106be9195505f90610808565b5f935f61065d565b5f80fd5b5f6105f4565b8363a46ac88160e01b5f526004526024524260445260645ffd5b634e487b7160e01b5f52601160045260245ffd5b62bfc92160e01b5f5260045ffd5b6304d2887160e01b5f5260045ffd5b6328ad4a9560e21b5f5260045ffd5b95505050905060a0833d60a011610785575b8161074960a09383610808565b810103126106c65761075a8361083e565b90602084015169ffffffffffffffffffff61077c60806060880151970161083e565b919593906105ae565b3d915061073c565b6040513d5f823e3d90fd5b50631788ec2b60e21b5f5260045260245ffd5b346106c65760203660031901126106c6576080906004355f52600160205260405f2060018060a01b038154169060018060a01b0360018201541660ff60036002840154930154169284526020840152604083015215156060820152f35b90601f8019910116810190811067ffffffffffffffff82111761082a57604052565b634e487b7160e01b5f52604160045260245ffd5b519069ffffffffffffffffffff821682036106c657565b9060038210156108625752565b634e487b7160e01b5f52602160045260245ffd5b5f546001600160a01b0316330361088957565b63118cdaa760e01b5f523360045260245ffdfea26469706673582212209bbcfddbbadbf93bd39655c16b07ecf8b6f52294c4bc9372b279b4ce5ab142fe64736f6c634300081a0033","sourceMap":"1264:13519:134:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1264:13519:134;;;;;;-1:-1:-1;;;;;1264:13519:134;;;;;;;;1500:62:24;;:::i;:::-;2627:22;;2623:91;;1264:13519:134;;-1:-1:-1;;;;;;1264:13519:134;;;;;;-1:-1:-1;;;;;1264:13519:134;3052:40:24;1264:13519:134;;3052:40:24;1264:13519:134;;2623:91:24;-1:-1:-1;;;2672:31:24;;1264:13519:134;;;;;2672:31:24;;1264:13519:134;;;;;;;;;;;;;;;;;;;;;;1578:64;-1:-1:-1;;;;;1264:13519:134;;;;;;;;;;;;;;;;;;;;3207:39;1264:13519;;;;;;;;;;;;;;-1:-1:-1;;1264:13519:134;;;;;;;;-1:-1:-1;;;;;1264:13519:134;;;;;;;;;;-1:-1:-1;;;;;1264:13519:134;;;;;;;;;;1500:62:24;;;:::i;:::-;1264:13519:134;;;;;;;9257:37;1264:13519;;;9257:37;1264:13519;;9253:84;;9389:24;;:53;;;;1264:13519;9385:87;;9486:20;;9482:56;;1264:13519;;-1:-1:-1;;;9643:45:134;;-1:-1:-1;;;;;1264:13519:134;;;;9643:45;;1264:13519;;;;;;;;;;;;;9643:45;1264:13519;9643:12;-1:-1:-1;;;;;1264:13519:134;9643:45;;;;;;;;;;;1264:13519;-1:-1:-1;;;;;;1264:13519:134;9702:25;9698:58;;1264:13519;;;;;;;;;;;;;;;;;;;;;;9859:173;;;1264:13519;;;9859:173;;;1264:13519;;;;;9859:173;;;1264:13519;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1264:13519:134;;;-1:-1:-1;;;;;;1264:13519:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9257:37;1264:13519;;;;;-1:-1:-1;;1264:13519:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10048:69;;;1264:13519;;;-1:-1:-1;;;1264:13519:134;;;;;;;;9698:58;-1:-1:-1;;;9736:20:134;;1264:13519;9736:20;;9643:45;;;1264:13519;9643:45;;1264:13519;9643:45;;;;;;1264:13519;9643:45;;;:::i;:::-;;;1264:13519;;;;;-1:-1:-1;;;;;1264:13519:134;;;;;;9643:45;;;1264:13519;;;;9643:45;;;-1:-1:-1;9643:45:134;;;1264:13519;;;;;;;;;9482:56;-1:-1:-1;;;9515:23:134;;1264:13519;9515:23;;9385:87;-1:-1:-1;;;9451:21:134;;1264:13519;9451:21;;9389:53;9417:25;;;9389:53;;9253:84;-1:-1:-1;;;9303:34:134;;1264:13519;;;;;9303:34;;1264:13519;;;;;;;;;;;;;;;;;;;1795:43;-1:-1:-1;;;;;1264:13519:134;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1264:13519:134;;;;;;;;;;;;;;;;;;;;;1500:62:24;;:::i;:::-;1264:13519:134;;-1:-1:-1;;;;;;1264:13519:134;;;;;;-1:-1:-1;;;;;1264:13519:134;3052:40:24;1264:13519:134;;3052:40:24;1264:13519:134;;;;;;;;;-1:-1:-1;;1264:13519:134;;;;11067:56;1264:13519;;;1500:62:24;;:::i;:::-;10884:24:134;1264:13519;;;10884:24;1264:13519;;;;;;;;;;11067:56;1264:13519;;;;;;;;;-1:-1:-1;;1264:13519:134;;;;;;;;;;;;;;;;12955:15;;;1264:13519;;12954:16;12950:59;;1264:13519;;;13138:13;;1264:13519;13186:17;;;;1264:13519;;;;;-1:-1:-1;;;13448:51:134;;-1:-1:-1;;;;;1264:13519:134;;;;13448:51;;1264:13519;;;;;;;;;;;;;;;;;;13448:12;1264:13519;13448:51;;;;;;;1264:13519;;;;;;;13448:51;;;1264:13519;;;;13579:12;;;13575:39;;1264:13519;;13628:25;13624:50;;1264:13519;13688:10;;;13684:37;;13836:15;;1264:13519;13836:15;1264:13519;;;;13865:38;13861:123;;-1:-1:-1;14261:32:134;;;;1264:13519;14261:158;14556:17;-1:-1:-1;;;;;1264:13519:134;14556:65;;;;;1264:13519;;;14556:65;1264:13519;;;;;;;;;14556:65;;;1264:13519;14556:65;;1264:13519;;;;;;;:::i;:::-;;;;;;14556:65;;;;;;14261:158;-1:-1:-1;14552:223:134;;-1:-1:-1;;;14728:36:134;;1264:13519;;;;;14728:36;;14552:223;14641:48;1264:13519;;;;;;;;;;;;;;:::i;:::-;14641:48;1264:13519;;14556:65;;;;;1264:13519;14556:65;;:::i;:::-;1264:13519;14556:65;;;;;1264:13519;;;14261:158;1264:13519;14261:158;;13861:123;13926:47;;;;1264:13519;13926:47;1264:13519;;;;13836:15;1264:13519;;;;13926:47;1264:13519;;;;;;;;;;;;13684:37;13707:14;;;1264:13519;13707:14;1264:13519;;13707:14;13624:50;13662:12;;;1264:13519;13662:12;1264:13519;;13662:12;13575:39;13600:14;;;1264:13519;13600:14;1264:13519;;13600:14;13448:51;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1264:13519;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;13448:51;;;;;;;;;-1:-1:-1;13448:51:134;;;1264:13519;;;;;;;;;12950:59;12979:30;;;;1264:13519;12979:30;1264:13519;;;;12979:30;1264:13519;;;;;;-1:-1:-1;;1264:13519:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:53;;1264:13519;;;2791:53;;;;1264:13519;2791:53;;1264:13519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1264:13519:134;;;;;-1:-1:-1;1264:13519:134;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1264:13519:134;;;;;-1:-1:-1;1264:13519:134;1796:162:24;1710:6;1264:13519:134;-1:-1:-1;;;;;1264:13519:134;735:10:33;1855:23:24;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:33;1901:40:24;1264:13519:134;;1710:6:24;1901:40","linkReferences":{},"immutableReferences":{"66596":[{"start":306,"length":32},{"start":1526,"length":32}],"66600":[{"start":548,"length":32},{"start":1026,"length":32},{"start":1400,"length":32}]}},"methodIdentifiers":{"feedRegistry()":"90238c39","marketOracles(uint256)":"4c8d1eda","maxPriceStalenessSeconds()":"d9c1408b","owner()":"8da5cb5b","predictionManager()":"ee687a98","registerOracle(uint256,address,address,uint256)":"d5258c7a","renounceOwnership()":"715018a6","resolveMarket(uint256)":"6399d03d","setMaxPriceStaleness(uint256)":"65b2d327","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_predictionManagerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feedRegistryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FeedRegistryNotSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPriceThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"OracleAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"OracleNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PredictionManagerZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentBlockTimestamp\",\"type\":\"uint256\"}],\"name\":\"PriceIsStale\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"ResolutionFailedInManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StaleRound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"winningOutcome\",\"type\":\"uint8\"}],\"name\":\"MarketResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldStaleness\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStaleness\",\"type\":\"uint256\"}],\"name\":\"MaxPriceStalenessSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"priceThreshold\",\"type\":\"uint256\"}],\"name\":\"OracleRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"feedRegistry\",\"outputs\":[{\"internalType\":\"contract IFeedRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marketOracles\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"priceThreshold\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxPriceStalenessSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predictionManager\",\"outputs\":[{\"internalType\":\"contract IPredictionManagerForResolver\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_priceThreshold\",\"type\":\"uint256\"}],\"name\":\"registerOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"}],\"name\":\"resolveMarket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newStalenessSeconds\",\"type\":\"uint256\"}],\"name\":\"setMaxPriceStaleness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Simone Di Cola\",\"custom:security-contact\":\"security@swapcast.xyz\",\"details\":\"It allows the owner to register Chainlink price feed aggregators for specific market IDs and price thresholds.      Anyone can then trigger the resolution of a registered market. Upon resolution, it calls the PredictionManager      to update the market's state with the winning outcome. The PredictionManager address is set immutably at deployment.Price feeds are expected to return values with 8 decimal places, which is the standard for most Chainlink feeds.      The contract validates the integrity of the price feed data before using it for market resolution.\",\"errors\":{\"FeedRegistryNotSet()\":[{\"details\":\"This occurs when the requested token pair does not have a registered price feed in the Chainlink Feed Registry.\"}],\"InvalidPrice()\":[{\"details\":\"Chainlink prices should always be positive for asset prices. A zero or negative value indicates an error.\"}],\"InvalidPriceThreshold()\":[{\"details\":\"A price threshold of zero is invalid as it cannot be used to determine a winning outcome.\"}],\"InvalidRound()\":[{\"details\":\"This occurs when the roundId returned by the Chainlink oracle is 0, which indicates an invalid round.\"}],\"OracleAlreadyRegistered(uint256)\":[{\"params\":{\"marketId\":\"The ID of the market for which registration was attempted.\"}}],\"OracleNotRegistered(uint256)\":[{\"params\":{\"marketId\":\"The ID of the market for which resolution was attempted.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"PriceIsStale(uint256,uint256,uint256)\":[{\"params\":{\"currentBlockTimestamp\":\"The current block timestamp.\",\"lastUpdatedAt\":\"The timestamp when the price feed was last updated.\",\"marketId\":\"The ID of the market being resolved.\"}}],\"ResolutionFailedInManager(uint256)\":[{\"params\":{\"marketId\":\"The ID of the market for which resolution failed.\"}}],\"StaleRound()\":[{\"details\":\"This occurs when the answeredInRound value is less than the roundId, indicating the round data is stale.\"}]},\"events\":{\"MarketResolved(uint256,int256,uint8)\":{\"params\":{\"marketId\":\"The ID of the market that was resolved.\",\"price\":\"The price reported by the oracle at the time of resolution.\",\"winningOutcome\":\"The determined winning outcome (0 or 1).\"}},\"OracleRegistered(uint256,address,address,uint256)\":{\"params\":{\"baseToken\":\"The base token address.\",\"marketId\":\"The ID of the market for which the oracle is registered.\",\"priceThreshold\":\"The price threshold set for this market's resolution.\",\"quoteToken\":\"The quote token address.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:reverts\":\"PredictionManagerZeroAddress If the prediction manager address is zero.InvalidTokenAddress If the feed registry address is zero.\",\"params\":{\"_feedRegistryAddress\":\"The address of the Chainlink Feed Registry contract.\",\"_predictionManagerAddress\":\"The address of the PredictionManager contract this resolver will interact with.\",\"initialOwner\":\"The address that will be set as the initial owner of this contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerOracle(uint256,address,address,uint256)\":{\"custom:reverts\":\"InvalidTokenAddress If either token address is zeroOracleAlreadyRegistered If an oracle is already registered for this marketFeedRegistryNotSet If the feed registry returns a zero address for the feedInvalidPriceThreshold If the price threshold is set to zero\",\"details\":\"Only callable by the contract owner. Emits {OracleRegistered}.\",\"params\":{\"_baseToken\":\"The base token address (e.g., ETH).\",\"_marketId\":\"The ID of the market to register the oracle for.\",\"_priceThreshold\":\"The price threshold for determining the winning outcome.        Must be greater than zero and is assumed to be in the feed's native decimals (typically 8).\",\"_quoteToken\":\"The quote token address (e.g., USD).\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolveMarket(uint256)\":{\"custom:reverts\":\"OracleNotRegistered If no oracle is set for the marketInvalidRound If the round ID is invalid (zero)StaleRound If the round is not the latest (answeredInRound < roundId)InvalidPrice If the price is zero or negativePriceIsStale If the price data is too old (beyond maxPriceStalenessSeconds)ResolutionFailedInManager If the call to PredictionManager fails\",\"details\":\"This function can be called by anyone. It fetches the latest price from the specified Chainlink aggregator.      The market outcome is determined as follows:      - Bullish (Outcome 0) wins if `oracle_price >= priceThreshold`.      - Bearish (Outcome 1) wins if `oracle_price < priceThreshold`.      The function performs extensive validation of the price feed data to ensure reliability:      1. Verifies the oracle is registered for the market      2. Checks that the round ID is valid (not zero)      3. Ensures the round is not stale (answeredInRound >= roundId)      4. Validates the price is positive (> 0)      5. Confirms the price data is not too old (within maxPriceStalenessSeconds)      After validation, it calls `PredictionManager.resolveMarket()` to finalize the resolution      and emits a {MarketResolved} event on success.\",\"params\":{\"_marketId\":\"The ID of the market to resolve.\"}},\"setMaxPriceStaleness(uint256)\":{\"details\":\"Only callable by the contract owner. Emits {MaxPriceStalenessSet}.      This value determines how old a price feed update can be before it's considered stale.      A lower value provides more up-to-date prices but may cause more failures during high network congestion.      A higher value allows for more tolerance during network congestion but may use outdated prices.\",\"params\":{\"_newStalenessSeconds\":\"The new staleness period in seconds (e.g., 3600 for 1 hour).\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"feedRegistry\":{\"details\":\"This is set immutably during contract deployment.\"},\"marketOracles\":{\"details\":\"Public visibility allows anyone to query the oracle configuration for a given market.\"},\"maxPriceStalenessSeconds\":{\"details\":\"If a price feed's `updatedAt` timestamp is older than `block.timestamp - maxPriceStalenessSeconds`,      the price is considered stale, and market resolution will be prevented.      Defaulted to 1 hour, settable by the owner.\"},\"predictionManager\":{\"details\":\"This address is set immutably during contract deployment to prevent changes.      It must implement the {IPredictionManagerForResolver} interface.\"}},\"title\":\"OracleResolver\",\"version\":1},\"userdoc\":{\"errors\":{\"FeedRegistryNotSet()\":[{\"notice\":\"Reverts if the feed registry returns a zero address for the feed.\"}],\"InvalidPrice()\":[{\"notice\":\"Reverts if the price feed returns an invalid price (zero or negative).\"}],\"InvalidPriceThreshold()\":[{\"notice\":\"Reverts if the price threshold is set to zero.\"}],\"InvalidRound()\":[{\"notice\":\"Reverts if the price feed returns an invalid round ID.\"}],\"InvalidTokenAddress()\":[{\"notice\":\"Reverts if an attempt is made to register an oracle with a zero address for the token.\"}],\"OracleAlreadyRegistered(uint256)\":[{\"notice\":\"Reverts if an attempt is made to register an oracle for a market that already has one registered.\"}],\"OracleNotRegistered(uint256)\":[{\"notice\":\"Reverts if an attempt is made to resolve a market that doesn't have a registered oracle.\"}],\"PredictionManagerZeroAddress()\":[{\"notice\":\"Reverts if the PredictionManager address provided during construction is the zero address.\"}],\"PriceIsStale(uint256,uint256,uint256)\":[{\"notice\":\"Reverts if the Chainlink price feed data is older than `maxPriceStalenessSeconds`.\"}],\"ResolutionFailedInManager(uint256)\":[{\"notice\":\"Reverts if the call to `PredictionManager.resolveMarket()` fails during market resolution.\"}],\"StaleRound()\":[{\"notice\":\"Reverts if the price feed returns a stale round.\"}]},\"events\":{\"MarketResolved(uint256,int256,uint8)\":{\"notice\":\"Emitted when a market is successfully resolved by this contract.\"},\"MaxPriceStalenessSet(uint256,uint256)\":{\"notice\":\"Emitted when the `maxPriceStalenessSeconds` value is updated by the owner.\"},\"OracleRegistered(uint256,address,address,uint256)\":{\"notice\":\"Emitted when a new oracle is registered for a market.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs a new OracleResolver instance.\"},\"feedRegistry()\":{\"notice\":\"The address of the Chainlink Feed Registry contract.\"},\"marketOracles(uint256)\":{\"notice\":\"Maps market IDs to their respective oracle configurations.\"},\"maxPriceStalenessSeconds()\":{\"notice\":\"Maximum acceptable delay (in seconds) for a Chainlink price feed update.\"},\"predictionManager()\":{\"notice\":\"The address of the PredictionManager contract this resolver interacts with.\"},\"registerOracle(uint256,address,address,uint256)\":{\"notice\":\"Registers an oracle for a market using token pair from the Feed Registry.\"},\"resolveMarket(uint256)\":{\"notice\":\"Resolves a prediction market using its registered Chainlink oracle.\"},\"setMaxPriceStaleness(uint256)\":{\"notice\":\"Sets the maximum allowed staleness period for oracle price feeds.\"}},\"notice\":\"This contract is responsible for resolving prediction markets by fetching prices from Chainlink oracles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/OracleResolver.sol\":\"OracleResolver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/OracleResolver.sol\":{\"keccak256\":\"0x2319bb8d271a534d4bc4b3b28f49984b4ad5c57da5985eefa6886b809987fb9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff82d1856b17d72e7b2469889c953a569512842a3ddf114ae241c65127fac9f9\",\"dweb:/ipfs/Qmac1HTXeDWGBer8yGAf7o9n1x11vYZzyvvd76SDUHcPir\"]},\"src/interfaces/IFeedRegistry.sol\":{\"keccak256\":\"0x7cad2b70dacaabbc8b6d3dfa1bb8f53794a70082c6b2be716caac5ac42ec64bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://528b2b4ba38bdd13fc5182875cc8a6030d957f46d77a65962f970de189b00a81\",\"dweb:/ipfs/QmfGDqV5wsAV2gNkyHmTWnh8jCXJ7EDwphkmnbdXfUdYWN\"]},\"src/interfaces/IPredictionManagerForResolver.sol\":{\"keccak256\":\"0x75ff32fdd9ea56dc8b3e92c9b7e1b5d8e4d04c2acbe893a69bf802a7449c01c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baf75c695b04792dbd457951ad3d927851cf6de4ec2395fc84b24ebdbf81ad16\",\"dweb:/ipfs/QmXEdqPUPjvvcfq9bZKbTgVGRAguX65vHCU9M47Us4VNgG\"]},\"src/types/PredictionTypes.sol\":{\"keccak256\":\"0xa158d4fd16826cd55c7beac796e00d570bc7e779ba54134f88eafaf3adcad869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70699e677b83dbd0c34ab544feedd13a7f79630f3d1a496a0c57ae537af6e43\",\"dweb:/ipfs/QmYDFn5au9Htjb289VBnJ34QWkEEvoz2fXj57kUsTcVGWt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_predictionManagerAddress","type":"address"},{"internalType":"address","name":"_feedRegistryAddress","type":"address"},{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"FeedRegistryNotSet"},{"inputs":[],"type":"error","name":"InvalidPrice"},{"inputs":[],"type":"error","name":"InvalidPriceThreshold"},{"inputs":[],"type":"error","name":"InvalidRound"},{"inputs":[],"type":"error","name":"InvalidTokenAddress"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"type":"error","name":"OracleAlreadyRegistered"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"type":"error","name":"OracleNotRegistered"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[],"type":"error","name":"PredictionManagerZeroAddress"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"uint256","name":"lastUpdatedAt","type":"uint256"},{"internalType":"uint256","name":"currentBlockTimestamp","type":"uint256"}],"type":"error","name":"PriceIsStale"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256"}],"type":"error","name":"ResolutionFailedInManager"},{"inputs":[],"type":"error","name":"StaleRound"},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256","indexed":true},{"internalType":"int256","name":"price","type":"int256","indexed":false},{"internalType":"enum PredictionTypes.Outcome","name":"winningOutcome","type":"uint8","indexed":false}],"type":"event","name":"MarketResolved","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldStaleness","type":"uint256","indexed":false},{"internalType":"uint256","name":"newStaleness","type":"uint256","indexed":false}],"type":"event","name":"MaxPriceStalenessSet","anonymous":false},{"inputs":[{"internalType":"uint256","name":"marketId","type":"uint256","indexed":true},{"internalType":"address","name":"baseToken","type":"address","indexed":false},{"internalType":"address","name":"quoteToken","type":"address","indexed":false},{"internalType":"uint256","name":"priceThreshold","type":"uint256","indexed":false}],"type":"event","name":"OracleRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"feedRegistry","outputs":[{"internalType":"contract IFeedRegistry","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"marketOracles","outputs":[{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"uint256","name":"priceThreshold","type":"uint256"},{"internalType":"bool","name":"isRegistered","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxPriceStalenessSeconds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"predictionManager","outputs":[{"internalType":"contract IPredictionManagerForResolver","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"_marketId","type":"uint256"},{"internalType":"address","name":"_baseToken","type":"address"},{"internalType":"address","name":"_quoteToken","type":"address"},{"internalType":"uint256","name":"_priceThreshold","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"registerOracle"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"uint256","name":"_marketId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"resolveMarket"},{"inputs":[{"internalType":"uint256","name":"_newStalenessSeconds","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMaxPriceStaleness"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"constructor":{"custom:reverts":"PredictionManagerZeroAddress If the prediction manager address is zero.InvalidTokenAddress If the feed registry address is zero.","params":{"_feedRegistryAddress":"The address of the Chainlink Feed Registry contract.","_predictionManagerAddress":"The address of the PredictionManager contract this resolver will interact with.","initialOwner":"The address that will be set as the initial owner of this contract."}},"owner()":{"details":"Returns the address of the current owner."},"registerOracle(uint256,address,address,uint256)":{"custom:reverts":"InvalidTokenAddress If either token address is zeroOracleAlreadyRegistered If an oracle is already registered for this marketFeedRegistryNotSet If the feed registry returns a zero address for the feedInvalidPriceThreshold If the price threshold is set to zero","details":"Only callable by the contract owner. Emits {OracleRegistered}.","params":{"_baseToken":"The base token address (e.g., ETH).","_marketId":"The ID of the market to register the oracle for.","_priceThreshold":"The price threshold for determining the winning outcome.        Must be greater than zero and is assumed to be in the feed's native decimals (typically 8).","_quoteToken":"The quote token address (e.g., USD)."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"resolveMarket(uint256)":{"custom:reverts":"OracleNotRegistered If no oracle is set for the marketInvalidRound If the round ID is invalid (zero)StaleRound If the round is not the latest (answeredInRound < roundId)InvalidPrice If the price is zero or negativePriceIsStale If the price data is too old (beyond maxPriceStalenessSeconds)ResolutionFailedInManager If the call to PredictionManager fails","details":"This function can be called by anyone. It fetches the latest price from the specified Chainlink aggregator.      The market outcome is determined as follows:      - Bullish (Outcome 0) wins if `oracle_price >= priceThreshold`.      - Bearish (Outcome 1) wins if `oracle_price < priceThreshold`.      The function performs extensive validation of the price feed data to ensure reliability:      1. Verifies the oracle is registered for the market      2. Checks that the round ID is valid (not zero)      3. Ensures the round is not stale (answeredInRound >= roundId)      4. Validates the price is positive (> 0)      5. Confirms the price data is not too old (within maxPriceStalenessSeconds)      After validation, it calls `PredictionManager.resolveMarket()` to finalize the resolution      and emits a {MarketResolved} event on success.","params":{"_marketId":"The ID of the market to resolve."}},"setMaxPriceStaleness(uint256)":{"details":"Only callable by the contract owner. Emits {MaxPriceStalenessSet}.      This value determines how old a price feed update can be before it's considered stale.      A lower value provides more up-to-date prices but may cause more failures during high network congestion.      A higher value allows for more tolerance during network congestion but may use outdated prices.","params":{"_newStalenessSeconds":"The new staleness period in seconds (e.g., 3600 for 1 hour)."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructs a new OracleResolver instance."},"feedRegistry()":{"notice":"The address of the Chainlink Feed Registry contract."},"marketOracles(uint256)":{"notice":"Maps market IDs to their respective oracle configurations."},"maxPriceStalenessSeconds()":{"notice":"Maximum acceptable delay (in seconds) for a Chainlink price feed update."},"predictionManager()":{"notice":"The address of the PredictionManager contract this resolver interacts with."},"registerOracle(uint256,address,address,uint256)":{"notice":"Registers an oracle for a market using token pair from the Feed Registry."},"resolveMarket(uint256)":{"notice":"Resolves a prediction market using its registered Chainlink oracle."},"setMaxPriceStaleness(uint256)":{"notice":"Sets the maximum allowed staleness period for oracle price feeds."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/openzeppelin-contracts/","@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/OracleResolver.sol":"OracleResolver"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"keccak256":"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd","urls":["bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7","dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"src/OracleResolver.sol":{"keccak256":"0x2319bb8d271a534d4bc4b3b28f49984b4ad5c57da5985eefa6886b809987fb9c","urls":["bzz-raw://ff82d1856b17d72e7b2469889c953a569512842a3ddf114ae241c65127fac9f9","dweb:/ipfs/Qmac1HTXeDWGBer8yGAf7o9n1x11vYZzyvvd76SDUHcPir"],"license":"MIT"},"src/interfaces/IFeedRegistry.sol":{"keccak256":"0x7cad2b70dacaabbc8b6d3dfa1bb8f53794a70082c6b2be716caac5ac42ec64bc","urls":["bzz-raw://528b2b4ba38bdd13fc5182875cc8a6030d957f46d77a65962f970de189b00a81","dweb:/ipfs/QmfGDqV5wsAV2gNkyHmTWnh8jCXJ7EDwphkmnbdXfUdYWN"],"license":"MIT"},"src/interfaces/IPredictionManagerForResolver.sol":{"keccak256":"0x75ff32fdd9ea56dc8b3e92c9b7e1b5d8e4d04c2acbe893a69bf802a7449c01c9","urls":["bzz-raw://baf75c695b04792dbd457951ad3d927851cf6de4ec2395fc84b24ebdbf81ad16","dweb:/ipfs/QmXEdqPUPjvvcfq9bZKbTgVGRAguX65vHCU9M47Us4VNgG"],"license":"MIT"},"src/types/PredictionTypes.sol":{"keccak256":"0xa158d4fd16826cd55c7beac796e00d570bc7e779ba54134f88eafaf3adcad869","urls":["bzz-raw://b70699e677b83dbd0c34ab544feedd13a7f79630f3d1a496a0c57ae537af6e43","dweb:/ipfs/QmYDFn5au9Htjb289VBnJ34QWkEEvoz2fXj57kUsTcVGWt"],"license":"MIT"}},"version":1},"id":134}