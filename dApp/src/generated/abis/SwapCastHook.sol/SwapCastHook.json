{"abi":[{"type":"constructor","inputs":[{"name":"_poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"_predictionManagerAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"afterAddLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterDonate","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterInitialize","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"tick","type":"int24","internalType":"int24"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterRemoveLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int128","internalType":"int128"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeAddLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeDonate","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeInitialize","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeRemoveLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BeforeSwapDelta"},{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"nonpayable"},{"type":"function","name":"getHookPermissions","inputs":[],"outputs":[{"name":"permissions","type":"tuple","internalType":"struct Hooks.Permissions","components":[{"name":"beforeInitialize","type":"bool","internalType":"bool"},{"name":"afterInitialize","type":"bool","internalType":"bool"},{"name":"beforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"afterAddLiquidity","type":"bool","internalType":"bool"},{"name":"beforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"afterRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"beforeSwap","type":"bool","internalType":"bool"},{"name":"afterSwap","type":"bool","internalType":"bool"},{"name":"beforeDonate","type":"bool","internalType":"bool"},{"name":"afterDonate","type":"bool","internalType":"bool"},{"name":"beforeSwapReturnDelta","type":"bool","internalType":"bool"},{"name":"afterSwapReturnDelta","type":"bool","internalType":"bool"},{"name":"afterAddLiquidityReturnDelta","type":"bool","internalType":"bool"},{"name":"afterRemoveLiquidityReturnDelta","type":"bool","internalType":"bool"}]}],"stateMutability":"pure"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"poolManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPoolManager"}],"stateMutability":"view"},{"type":"function","name":"predictionManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPredictionManager"}],"stateMutability":"view"},{"type":"function","name":"recoverETH","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"HookDataDebug","inputs":[{"name":"receivedLength","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"expectedLength","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"isUniversalRouter","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PredictionAttempted","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"poolId","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"marketId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"outcome","type":"uint8","indexed":false,"internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"swapAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PredictionFailed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"poolId","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"marketId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"outcome","type":"uint8","indexed":false,"internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"swapAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"errorSelector","type":"bytes4","indexed":false,"internalType":"bytes4"}],"anonymous":false},{"type":"event","name":"PredictionRecorded","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"poolId","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"marketId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"outcome","type":"uint8","indexed":false,"internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"swapAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ETHTransferFailed","inputs":[]},{"type":"error","name":"HookNotImplemented","inputs":[]},{"type":"error","name":"InsufficientBalance","inputs":[{"name":"requested","type":"uint256","internalType":"uint256"},{"name":"available","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InsufficientSwapAmountForStake","inputs":[]},{"type":"error","name":"InvalidHookDataLength","inputs":[{"name":"actualLength","type":"uint256","internalType":"uint256"},{"name":"expectedLength","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotPoolManager","inputs":[]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"PredictionPoolZeroAddress","inputs":[]},{"type":"error","name":"PredictionRecordingFailed","inputs":[{"name":"reason","type":"string","internalType":"string"}]},{"type":"error","name":"SafeCastOverflowedUintDowncast","inputs":[{"name":"bits","type":"uint8","internalType":"uint8"},{"name":"value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ZeroAddress","inputs":[]}],"bytecode":{"object":"0x60c06040523461031357604051601f6116d338819003918201601f19168301916001600160401b03831184841017610317578084926040948552833981010312610313578051906001600160a01b038216820361031357602001516001600160a01b0381169190829003610313576080525f6101a061007c61032b565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152826101608201528261018082015201525f6101a06100da61032b565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152600160e082015282610100820152826101208201528261014082015282610160820152826101808201520152612000301615801590610306575b80156102f9575b80156102ec575b80156102df575b80156102d2575b80156102c6575b80156102b6575b80156102aa575b801561029e575b8015610292575b8015610286575b801561027a575b801561026e575b61025b573315610248575f8054336001600160a01b0319821681178355604051939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a380156102395760a052611387908161034c82396080518181816101b90152818161023b0152818161028d01528181610478015281816104e301528181610634015261070d015260a0518181816101770152610bc00152f35b630fc73f1f60e01b5f5260045ffd5b631e4fbdf760e01b5f525f60045260245ffd5b630732d7b560e51b5f523060045260245ffd5b5060013016151561018f565b50600230161515610188565b50600430161515610181565b5060083016151561017a565b50601030161515610173565b5060203016151561016c565b5060403016151560011415610165565b5060803016151561015e565b5061010030161515610157565b5061020030161515610150565b5061040030161515610149565b5061080030161515610142565b506110003016151561013b565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051906101c082016001600160401b038111838210176103175760405256fe6080604052600436101561001a575b3615610018575f80fd5b005b5f3560e01c806321d0ee70146106fa578063259982e5146106fa5780633e0c062914610671578063575e24b4146105dc5780636c2bbe7e146104d05780636fe7e6eb146105a4578063715018a61461054d5780638da5cb5b146105265780639f063efc146104d0578063b47b2fb114610421578063b6a8b0fa146101a6578063c4e833ce146102bc578063dc4c90d314610278578063dc98354e1461020a578063e1b4af69146101a6578063ee687a98146101625763f2fde38b0361000e573461015e57602036600319011261015e576100f261074e565b6100fa610984565b6001600160a01b0316801561014b575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461015e575f36600319011261015e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015e576101b43661089a565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330392506101fb91505057630a85dc2960e01b5f5260045ffd5b63570c108560e11b5f5260045ffd5b3461015e5760e036600319011261015e5761022361074e565b5060a036602319011261015e57610238610874565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101fb57630a85dc2960e01b5f5260045ffd5b3461015e575f36600319011261015e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015e575f36600319011261015e575f6101a06040516102dc816108f2565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152826101608201528261018082015201526101c0602060405161033f816108f2565b5f8152818101905f8252604081015f8152606082015f8152608083015f815260a084015f815260c085015f815260e0860190600182526101008701925f84526101208801945f86526101408901965f88526101608a01985f8a526101a06101808c019b5f8d52019b5f8d526040519d8e915f835251151591015251151560408d015251151560608c015251151560808b015251151560a08a015251151560c089015251151560e08801525115156101008701525115156101208601525115156101408501525115156101608401525115156101808301525115156101a0820152f35b3461015e5761016036600319011261015e5761043b61074e565b5060a036602319011261015e5760603660c319011261015e576101443567ffffffffffffffff811161015e57610475903690600401610778565b907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101fb576040916104b69161012435610af6565b82516001600160e01b03199092168252600f0b6020820152f35b3461015e576104de3661080a565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330393506101fb9250505057630a85dc2960e01b5f5260045ffd5b3461015e575f36600319011261015e575f546040516001600160a01b039091168152602090f35b3461015e575f36600319011261015e57610565610984565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461015e5761010036600319011261015e576105be61074e565b5060a036602319011261015e576105d3610874565b5061023861088a565b3461015e5761014036600319011261015e576105f661074e565b5060a036602319011261015e5760603660c319011261015e576101243567ffffffffffffffff811161015e57610630903690600401610778565b50507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101fb57630a85dc2960e01b5f5260045ffd5b3461015e57604036600319011261015e5761068a61074e565b60243590610696610984565b6001600160a01b038116156106eb574782116106d3575f80809381935af16106bc610945565b50156106c457005b63b12d13eb60e01b5f5260045ffd5b50479063cf47918160e01b5f5260045260245260445ffd5b63d92e233d60e01b5f5260045ffd5b3461015e57610708366107a6565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330391506101fb905057630a85dc2960e01b5f5260045ffd5b600435906001600160a01b038216820361015e57565b35906001600160a01b038216820361015e57565b9181601f8401121561015e5782359167ffffffffffffffff831161015e576020838186019501011161015e57565b9061016060031983011261015e576004356001600160a01b038116810361015e579160a060231982011261015e57602491608060c31983011261015e5760c491610144359067ffffffffffffffff821161015e5761080691600401610778565b9091565b906101a060031983011261015e576004356001600160a01b038116810361015e579160a060231982011261015e57602491608060c31983011261015e5760c49161014435916101643591610184359067ffffffffffffffff821161015e5761080691600401610778565b60c435906001600160a01b038216820361015e57565b60e435908160020b820361015e57565b61012060031982011261015e576004356001600160a01b038116810361015e579160a060231983011261015e5760249160c4359160e43591610104359067ffffffffffffffff821161015e5761080691600401610778565b6101c0810190811067ffffffffffffffff82111761090f57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761090f57604052565b3d1561097f573d9067ffffffffffffffff821161090f5760405191610974601f8201601f191660200184610923565b82523d5f602084013e565b606090565b5f546001600160a01b0316330361099757565b63118cdaa760e01b5f523360045260245ffd5b9060038210156109b75752565b634e487b7160e01b5f52602160045260245ffd5b91908260a091031261015e5760405160a0810181811067ffffffffffffffff82111761090f5760405280926109ff81610764565b8252610a0d60208201610764565b6020830152604081013562ffffff8116810361015e5760408301526060810135908160020b820361015e57606083019190915260800135906001600160a01b038216820361015e5760800152565b5f60443d10610ac1576040513d600319016004823e8051913d602484011167ffffffffffffffff841117610acc578282019283519167ffffffffffffffff8311610ac4573d84016003190185840160200111610ac45750610ac192910160200190610923565b90565b949350505050565b92915050565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b92915f93811561113257603582141580611127575b6110dd57610b198284611144565b1561109257823560601c90603460148501359401355f1a9284158015611088575b61103a57508060801d81600f0b5f82600f0b1390818092611030575b15610fe15750506001600160801b03169290506024356001600160a01b038116810361015e57505b606483048015610fd25766038d7ea4c680008110610fc357925b6001600160801b038411610fab5760405163b2b85d9360e01b81526001600160801b038516967f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169590916020816004818a5afa908115610fa0575f91610f6e575b50808202908282041482151715610f5a5761271090048101809111610f5a57600384101595866109b757803b1561015e575f906084604051809481936338299f1560e21b83528a60048401528c6024840152610c61604484018b6109aa565b8d60648401525af19081610f45575b50610ee157508660033d11610ed1575b6308c379a014610dc3575b610c93610945565b9587926040968751610ca58982610923565b600d81526c2ab735b737bbb71032b93937b960991b602082015298805160048110918215610d74575b50505060a0610cde3660246109cb565b2096610d605791610d21610d5c9a94927fb6353c1f27d792ad81b64319fe9b1acc3b8b98aa1dc937c0c7a5486e63ea685696948a519650865260208601906109aa565b8388015260608301526001600160e01b031916608082015260a090a351639b964ca960e01b8152602060048201529182916024830190610ad2565b0390fd5b634e487b7160e01b8a52602160045260248afd5b60200151929a506001600160e01b0319831696509190610da3575b5050610d9a84611174565b975f8080610cce565b6001600160e01b031960049290920360031b82901b161693505f80610d8f565b610dcb610a5b565b80610dd65750610c8b565b95610e2c9592610e3a899860405198899160406020840152601960608401527f50726564696374696f6e4d616e61676572204572726f723a200000000000000060808401526080604084015260a0830190610ad2565b03601f198101895288610923565b60a0610e473660246109cb565b2095610ebd5791610d5c9791610e897fb6353c1f27d792ad81b64319fe9b1acc3b8b98aa1dc937c0c7a5486e63ea6856959460405195865260208601906109aa565b60408401526060830152608082015260a090a3604051639b964ca960e01b8152602060048201529182916024830190610ad2565b634e487b7160e01b88526021600452602488fd5b50600487803e865160e01c610c80565b957f1744b7f0182aa81ae93a512012667f889496ec3e6dc0d315737437ec1f4e74c9939450906080929591610f2e60a0610f1c3660246109cb565b209760405194855260208501906109aa565b60408301526060820152a363b47b2fb160e01b9190565b610f529199505f90610923565b5f975f610c70565b634e487b7160e01b5f52601160045260245ffd5b90506020813d602011610f98575b81610f8960209383610923565b8101031261015e57515f610c02565b3d9150610f7c565b6040513d5f823e3d90fd5b836306dfcc6560e41b5f52608060045260245260445ffd5b50662386f26fc1000092610b98565b630eae3abb60e41b5f5260045ffd5b5f12915081611027575b5015611014576001600160801b0316916044356001600160a01b038116810361015e5750610b7e565b5063b47b2fb160e01b94505f9392505050565b9050155f610feb565b505f811315610b56565b925050507ff339247892f6e54236492fd0aabc6d247443779ab3ef98b0f306f888566431ea929350606091506040519081526035602082015260016040820152a163b47b2fb160e01b905f90565b5060018411610b3a565b507ff339247892f6e54236492fd0aabc6d247443779ab3ef98b0f306f888566431ea929350606091506040519081526035602082015260016040820152a163b47b2fb160e01b905f90565b507ff339247892f6e54236492fd0aabc6d247443779ab3ef98b0f306f888566431ea92935060609150604051908152603560208201525f6040820152a163b47b2fb160e01b905f90565b506034821415610b0b565b5063b47b2fb160e01b93505f92915050565b919060351161116f57600191600160348201355f1a1190601481013515903560601c15171761116f57565b5f9150565b6060906001600160e01b031916630fff01a760e31b81036111e357505060405161119f606082610923565b602e81527f50726564696374696f6e4d616e61676572204572726f723a204d61726b65742060208201526d191bd95cc81b9bdd08195e1a5cdd60921b604082015290565b63ed5d23e160e01b8103611247575050604051611201606082610923565b603081527f50726564696374696f6e4d616e61676572204572726f723a204d61726b65742060208201526f185b1c9958591e481c995cdbdb1d995960821b604082015290565b63609e606560e11b81036112a6575050604051611265606082610923565b602b81527f50726564696374696f6e4d616e61676572204572726f723a204d61726b65742060208201526a1a185cc8195e1c1a5c995960aa1b604082015290565b63eaf0162f60e01b0361130957506040516112c2606082610923565b603181527f50726564696374696f6e4d616e61676572204572726f723a20496e76616c696460208201527020636f6e76696374696f6e207374616b6560781b604082015290565b6113166040519182610923565b602581527f50726564696374696f6e4d616e61676572204572726f723a20437573746f6d2060208201526432b93937b960d91b60408201529056fea2646970667358221220283fdac323930992899e1bf626d3395a95b42c71142876127a56fefc13b2265c64736f6c634300081a0033","sourceMap":"1881:23461:115:-:0;;;;;;;;;;;;;;;;;-1:-1:-1;;1881:23461:115;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;;;;782:26:109;;-1:-1:-1;1881:23461:115;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;782:26:109;1881:23461:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1881:23461:115;;;:::i;:::-;;;;12578:597;1881:23461;12578:597;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;12578:597;782:26:109;12578:597:115;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;;;12578:597;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;12578:597;1881:23461;12578:597;;1881:23461;12578:597;1881:23461;;899:4:112;16467:29:70;:34;;;3729:166;;;-1:-1:-1;3729:265:70;;;;-1:-1:-1;3729:362:70;;;;-1:-1:-1;3729:467:70;;;;-1:-1:-1;3729:570:70;;;;-1:-1:-1;3729:652:70;;;;-1:-1:-1;3729:732:70;;;;-1:-1:-1;3729:818:70;;;;-1:-1:-1;3729:902:70;;;;-1:-1:-1;3729:1009:70;;;;-1:-1:-1;3729:1114:70;;;;-1:-1:-1;3729:1236:70;;;;-1:-1:-1;3729:1384:70;;;;-1:-1:-1;3712:1491:70;;10111:10:115;1273:26:24;1269:95;;-1:-1:-1;1881:23461:115;;10111:10;-1:-1:-1;;;;;;1881:23461:115;;;;;;;;;;10111:10;;-1:-1:-1;;;;;1881:23461:115;;3052:40:24;;-1:-1:-1;3052:40:24;10202:39:115;;10198:104;;1881:23461;10311:65;1881:23461;;;;;;782:26:109;1881:23461:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10198:104;10264:27;;;-1:-1:-1;10264:27:115;;-1:-1:-1;10264:27:115;1269:95:24;1322:31;;;-1:-1:-1;1322:31:24;-1:-1:-1;1322:31:24;1881:23461:115;;-1:-1:-1;1322:31:24;3712:1491:70;5138:28;;;-1:-1:-1;1084:176:66;899:4:112;1084:176:66;;;-1:-1:-1;1084:176:66;3729:1384:70;5052:61;1881:23461:115;899:4:112;16467:29:70;:34;;3729:1384;;:1236;4907:58;1881:23461:115;899:4:112;16467:29:70;:34;;3729:1236;;:1114;4794:49;1881:23461:115;899:4:112;16467:29:70;:34;;3729:1114;;:1009;4688:50;1881:23461:115;899:4:112;16467:29:70;:34;;3729:1009;;:902;4594:37;1881:23461:115;899:4:112;16467:29:70;:34;;3729:902;;:818;4509:38;1881:23461:115;899:4:112;16467:29:70;:34;;3729:818;;:732;4426:35;1881:23461:115;899:4:112;16467:29:70;:34;;1881:23461:115;4401:60:70;;3729:732;;:652;4345:36;782:26:109;899:4:112;16467:29:70;:34;;3729:652;;:570;4252:47;1881:23461:115;899:4:112;16467:29:70;:34;;3729:570;;:467;4148:48;1881:23461:115;899:4:112;16467:29:70;:34;;3729:467;;:362;4047:44;1881:23461:115;899:4:112;16467:29:70;:34;;3729:362;;:265;3949:45;1881:23461:115;899:4:112;16467:29:70;:34;;3729:265;;:166;3854:41;1881:23461:115;899:4:112;16467:29:70;:34;;3729:166;;1881:23461:115;-1:-1:-1;1881:23461:115;;;;;;-1:-1:-1;1881:23461:115;;;;;-1:-1:-1;1881:23461:115;;;;;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;;;;;:::o","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001a575b3615610018575f80fd5b005b5f3560e01c806321d0ee70146106fa578063259982e5146106fa5780633e0c062914610671578063575e24b4146105dc5780636c2bbe7e146104d05780636fe7e6eb146105a4578063715018a61461054d5780638da5cb5b146105265780639f063efc146104d0578063b47b2fb114610421578063b6a8b0fa146101a6578063c4e833ce146102bc578063dc4c90d314610278578063dc98354e1461020a578063e1b4af69146101a6578063ee687a98146101625763f2fde38b0361000e573461015e57602036600319011261015e576100f261074e565b6100fa610984565b6001600160a01b0316801561014b575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461015e575f36600319011261015e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015e576101b43661089a565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330392506101fb91505057630a85dc2960e01b5f5260045ffd5b63570c108560e11b5f5260045ffd5b3461015e5760e036600319011261015e5761022361074e565b5060a036602319011261015e57610238610874565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101fb57630a85dc2960e01b5f5260045ffd5b3461015e575f36600319011261015e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461015e575f36600319011261015e575f6101a06040516102dc816108f2565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152826101608201528261018082015201526101c0602060405161033f816108f2565b5f8152818101905f8252604081015f8152606082015f8152608083015f815260a084015f815260c085015f815260e0860190600182526101008701925f84526101208801945f86526101408901965f88526101608a01985f8a526101a06101808c019b5f8d52019b5f8d526040519d8e915f835251151591015251151560408d015251151560608c015251151560808b015251151560a08a015251151560c089015251151560e08801525115156101008701525115156101208601525115156101408501525115156101608401525115156101808301525115156101a0820152f35b3461015e5761016036600319011261015e5761043b61074e565b5060a036602319011261015e5760603660c319011261015e576101443567ffffffffffffffff811161015e57610475903690600401610778565b907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101fb576040916104b69161012435610af6565b82516001600160e01b03199092168252600f0b6020820152f35b3461015e576104de3661080a565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330393506101fb9250505057630a85dc2960e01b5f5260045ffd5b3461015e575f36600319011261015e575f546040516001600160a01b039091168152602090f35b3461015e575f36600319011261015e57610565610984565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461015e5761010036600319011261015e576105be61074e565b5060a036602319011261015e576105d3610874565b5061023861088a565b3461015e5761014036600319011261015e576105f661074e565b5060a036602319011261015e5760603660c319011261015e576101243567ffffffffffffffff811161015e57610630903690600401610778565b50507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101fb57630a85dc2960e01b5f5260045ffd5b3461015e57604036600319011261015e5761068a61074e565b60243590610696610984565b6001600160a01b038116156106eb574782116106d3575f80809381935af16106bc610945565b50156106c457005b63b12d13eb60e01b5f5260045ffd5b50479063cf47918160e01b5f5260045260245260445ffd5b63d92e233d60e01b5f5260045ffd5b3461015e57610708366107a6565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330391506101fb905057630a85dc2960e01b5f5260045ffd5b600435906001600160a01b038216820361015e57565b35906001600160a01b038216820361015e57565b9181601f8401121561015e5782359167ffffffffffffffff831161015e576020838186019501011161015e57565b9061016060031983011261015e576004356001600160a01b038116810361015e579160a060231982011261015e57602491608060c31983011261015e5760c491610144359067ffffffffffffffff821161015e5761080691600401610778565b9091565b906101a060031983011261015e576004356001600160a01b038116810361015e579160a060231982011261015e57602491608060c31983011261015e5760c49161014435916101643591610184359067ffffffffffffffff821161015e5761080691600401610778565b60c435906001600160a01b038216820361015e57565b60e435908160020b820361015e57565b61012060031982011261015e576004356001600160a01b038116810361015e579160a060231983011261015e5760249160c4359160e43591610104359067ffffffffffffffff821161015e5761080691600401610778565b6101c0810190811067ffffffffffffffff82111761090f57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761090f57604052565b3d1561097f573d9067ffffffffffffffff821161090f5760405191610974601f8201601f191660200184610923565b82523d5f602084013e565b606090565b5f546001600160a01b0316330361099757565b63118cdaa760e01b5f523360045260245ffd5b9060038210156109b75752565b634e487b7160e01b5f52602160045260245ffd5b91908260a091031261015e5760405160a0810181811067ffffffffffffffff82111761090f5760405280926109ff81610764565b8252610a0d60208201610764565b6020830152604081013562ffffff8116810361015e5760408301526060810135908160020b820361015e57606083019190915260800135906001600160a01b038216820361015e5760800152565b5f60443d10610ac1576040513d600319016004823e8051913d602484011167ffffffffffffffff841117610acc578282019283519167ffffffffffffffff8311610ac4573d84016003190185840160200111610ac45750610ac192910160200190610923565b90565b949350505050565b92915050565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b92915f93811561113257603582141580611127575b6110dd57610b198284611144565b1561109257823560601c90603460148501359401355f1a9284158015611088575b61103a57508060801d81600f0b5f82600f0b1390818092611030575b15610fe15750506001600160801b03169290506024356001600160a01b038116810361015e57505b606483048015610fd25766038d7ea4c680008110610fc357925b6001600160801b038411610fab5760405163b2b85d9360e01b81526001600160801b038516967f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169590916020816004818a5afa908115610fa0575f91610f6e575b50808202908282041482151715610f5a5761271090048101809111610f5a57600384101595866109b757803b1561015e575f906084604051809481936338299f1560e21b83528a60048401528c6024840152610c61604484018b6109aa565b8d60648401525af19081610f45575b50610ee157508660033d11610ed1575b6308c379a014610dc3575b610c93610945565b9587926040968751610ca58982610923565b600d81526c2ab735b737bbb71032b93937b960991b602082015298805160048110918215610d74575b50505060a0610cde3660246109cb565b2096610d605791610d21610d5c9a94927fb6353c1f27d792ad81b64319fe9b1acc3b8b98aa1dc937c0c7a5486e63ea685696948a519650865260208601906109aa565b8388015260608301526001600160e01b031916608082015260a090a351639b964ca960e01b8152602060048201529182916024830190610ad2565b0390fd5b634e487b7160e01b8a52602160045260248afd5b60200151929a506001600160e01b0319831696509190610da3575b5050610d9a84611174565b975f8080610cce565b6001600160e01b031960049290920360031b82901b161693505f80610d8f565b610dcb610a5b565b80610dd65750610c8b565b95610e2c9592610e3a899860405198899160406020840152601960608401527f50726564696374696f6e4d616e61676572204572726f723a200000000000000060808401526080604084015260a0830190610ad2565b03601f198101895288610923565b60a0610e473660246109cb565b2095610ebd5791610d5c9791610e897fb6353c1f27d792ad81b64319fe9b1acc3b8b98aa1dc937c0c7a5486e63ea6856959460405195865260208601906109aa565b60408401526060830152608082015260a090a3604051639b964ca960e01b8152602060048201529182916024830190610ad2565b634e487b7160e01b88526021600452602488fd5b50600487803e865160e01c610c80565b957f1744b7f0182aa81ae93a512012667f889496ec3e6dc0d315737437ec1f4e74c9939450906080929591610f2e60a0610f1c3660246109cb565b209760405194855260208501906109aa565b60408301526060820152a363b47b2fb160e01b9190565b610f529199505f90610923565b5f975f610c70565b634e487b7160e01b5f52601160045260245ffd5b90506020813d602011610f98575b81610f8960209383610923565b8101031261015e57515f610c02565b3d9150610f7c565b6040513d5f823e3d90fd5b836306dfcc6560e41b5f52608060045260245260445ffd5b50662386f26fc1000092610b98565b630eae3abb60e41b5f5260045ffd5b5f12915081611027575b5015611014576001600160801b0316916044356001600160a01b038116810361015e5750610b7e565b5063b47b2fb160e01b94505f9392505050565b9050155f610feb565b505f811315610b56565b925050507ff339247892f6e54236492fd0aabc6d247443779ab3ef98b0f306f888566431ea929350606091506040519081526035602082015260016040820152a163b47b2fb160e01b905f90565b5060018411610b3a565b507ff339247892f6e54236492fd0aabc6d247443779ab3ef98b0f306f888566431ea929350606091506040519081526035602082015260016040820152a163b47b2fb160e01b905f90565b507ff339247892f6e54236492fd0aabc6d247443779ab3ef98b0f306f888566431ea92935060609150604051908152603560208201525f6040820152a163b47b2fb160e01b905f90565b506034821415610b0b565b5063b47b2fb160e01b93505f92915050565b919060351161116f57600191600160348201355f1a1190601481013515903560601c15171761116f57565b5f9150565b6060906001600160e01b031916630fff01a760e31b81036111e357505060405161119f606082610923565b602e81527f50726564696374696f6e4d616e61676572204572726f723a204d61726b65742060208201526d191bd95cc81b9bdd08195e1a5cdd60921b604082015290565b63ed5d23e160e01b8103611247575050604051611201606082610923565b603081527f50726564696374696f6e4d616e61676572204572726f723a204d61726b65742060208201526f185b1c9958591e481c995cdbdb1d995960821b604082015290565b63609e606560e11b81036112a6575050604051611265606082610923565b602b81527f50726564696374696f6e4d616e61676572204572726f723a204d61726b65742060208201526a1a185cc8195e1c1a5c995960aa1b604082015290565b63eaf0162f60e01b0361130957506040516112c2606082610923565b603181527f50726564696374696f6e4d616e61676572204572726f723a20496e76616c696460208201527020636f6e76696374696f6e207374616b6560781b604082015290565b6113166040519182610923565b602581527f50726564696374696f6e4d616e61676572204572726f723a20437573746f6d2060208201526432b93937b960d91b60408201529056fea2646970667358221220283fdac323930992899e1bf626d3395a95b42c71142876127a56fefc13b2265c64736f6c634300081a0033","sourceMap":"1881:23461:115:-:0;;;;;;;;;-1:-1:-1;1881:23461:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;:::i;:::-;1500:62:24;;:::i;:::-;-1:-1:-1;;;;;1881:23461:115;2627:22:24;;2623:91;;1881:23461:115;;;-1:-1:-1;;;;;;1881:23461:115;;;;;;-1:-1:-1;;;;;1881:23461:115;;3052:40:24;;1881:23461:115;3052:40:24;1881:23461:115;2623:91:24;2672:31;;;1881:23461:115;2672:31:24;1881:23461:115;;;;;2672:31:24;1881:23461:115;;;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;2188:53;-1:-1:-1;;;;;1881:23461:115;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;672:11:109;-1:-1:-1;;;;;1881:23461:115;650:10:109;:34;;-1:-1:-1;646:63:109;;-1:-1:-1;;646:63:109;3575:20:112;;;1881:23461:115;3575:20:112;1881:23461:115;;3575:20:112;646:63:109;693:16;;;1881:23461:115;693:16:109;1881:23461:115;;693:16:109;1881:23461:115;;;;;;-1:-1:-1;;1881:23461:115;;;;;;:::i;:::-;-1:-1:-1;1881:23461:115;;-1:-1:-1;;1881:23461:115;;;;;;:::i;:::-;-1:-1:-1;672:11:109;-1:-1:-1;;;;;1881:23461:115;650:10:109;:34;646:63;;3575:20:112;;;1881:23461:115;3575:20:112;1881:23461:115;;3575:20:112;1881:23461:115;;;;;;-1:-1:-1;;1881:23461:115;;;;;;411:41:109;-1:-1:-1;;;;;1881:23461:115;;;;;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;12578:597;;;1881:23461;;;;;12578:597;;1881:23461;;;;12578:597;;1881:23461;;;;12578:597;;1881:23461;;;;12578:597;;1881:23461;;;;12578:597;;1881:23461;;;;12578:597;;1881:23461;;;;;12578:597;;1881:23461;;;;;12578:597;;1881:23461;;;;;12578:597;;1881:23461;;;;;12578:597;;1881:23461;;;;;;12578:597;;1881:23461;;;;12578:597;1881:23461;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;:::i;:::-;-1:-1:-1;1881:23461:115;;-1:-1:-1;;1881:23461:115;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;;;;;;;;;;;:::i;:::-;;672:11:109;-1:-1:-1;;;;;1881:23461:115;650:10:109;:34;646:63;;1881:23461:115;;16192:6647;1881:23461;;;16192:6647;:::i;:::-;1881:23461;;-1:-1:-1;;;;;;1881:23461:115;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;672:11:109;-1:-1:-1;;;;;1881:23461:115;650:10:109;:34;;-1:-1:-1;646:63:109;;-1:-1:-1;;;646:63:109;3575:20:112;;;1881:23461:115;3575:20:112;1881:23461:115;;3575:20:112;1881:23461:115;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;;;;;;;;;-1:-1:-1;;1881:23461:115;;;;1500:62:24;;:::i;:::-;1881:23461:115;;;-1:-1:-1;;;;;;1881:23461:115;;;;-1:-1:-1;;;;;1881:23461:115;3052:40:24;1881:23461:115;;3052:40:24;1881:23461:115;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;:::i;:::-;-1:-1:-1;1881:23461:115;;-1:-1:-1;;1881:23461:115;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;1881:23461:115;;;;;;:::i;:::-;-1:-1:-1;1881:23461:115;;-1:-1:-1;;1881:23461:115;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;672:11:109;-1:-1:-1;;;;;1881:23461:115;650:10:109;:34;646:63;;3575:20:112;;;1881:23461:115;3575:20:112;1881:23461:115;;3575:20:112;1881:23461:115;;;;;;-1:-1:-1;;1881:23461:115;;;;;;:::i;:::-;;;1500:62:24;;;:::i;:::-;-1:-1:-1;;;;;1881:23461:115;;11688:17;11684:43;;11751:21;11741:31;;11737:120;;1881:23461;11885:28;;;;;;;;;:::i;:::-;;11927:8;11923:40;;1881:23461;11923:40;11944:19;;;1881:23461;11944:19;1881:23461;;11944:19;11737:120;11824:21;;11795:51;;;;1881:23461;11795:51;1881:23461;;;;;;11795:51;11684:43;11714:13;;;1881:23461;11714:13;1881:23461;;11714:13;1881:23461;;;;;;;:::i;:::-;-1:-1:-1;;;672:11:109;-1:-1:-1;;;;;1881:23461:115;650:10:109;:34;;-1:-1:-1;646:63:109;;-1:-1:-1;646:63:109;3575:20:112;;;1881:23461:115;3575:20:112;1881:23461:115;;3575:20:112;1881:23461:115;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1881:23461:115;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1881:23461:115;;;;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;-1:-1:-1;;1881:23461:115;;;;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1881:23461:115;;;;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1881:23461:115;;;;;-1:-1:-1;1881:23461:115;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1881:23461:115;;;;;:::i;:::-;;;;-1:-1:-1;1881:23461:115;;;;:::o;:::-;;;:::o;1796:162:24:-;1710:6;1881:23461:115;-1:-1:-1;;;;;1881:23461:115;735:10:37;1855:23:24;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:37;1901:40:24;1881:23461:115;;1710:6:24;1901:40;2708:2:115;;;;;;;;;:::o;:::-;1881:23461;;;-1:-1:-1;2708:2:115;;;;;-1:-1:-1;2708:2:115;;;;;;;;;;;1881:23461;;2708:2;1881:23461;;;;;;;;;;;;;2708:2;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;1881:23461;2708:2;;;1881:23461;;;2708:2;;;;1881:23461;2708:2;;;;;;1881:23461;;;;;;;;;2708:2;;;;;;;;;;;-1:-1:-1;;;;;1881:23461:115;;;;;;2708:2;;;:::o;:::-;;;;;;;1881:23461;;2708:2;-1:-1:-1;;2708:2:115;;1881:23461;2708:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2708:2:115;;;;;;;;;-1:-1:-1;2708:2:115;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2708:2:115;;;;;;1881:23461;;-1:-1:-1;;1881:23461:115;2708:2;;;:::o;16192:6647::-;;;1881:23461;16515:20;;;16511:90;;2708:2;16690:46;;;:71;;;16192:6647;16686:307;;17251:34;;;;:::i;:::-;17299:19;17295:263;;17729:190;;;;17981:83;18120:142;17981:83;;;;18120:142;;;1881:23461;18120:142;18408:13;;;:28;;;;16192:6647;18404:182;;2052:83:97;;;;2241:89;;;1881:23461:115;;2241:89:97;1881:23461:115;19126:11;;;;:27;;;16192:6647;19122:563;;;-1:-1:-1;;;;;;;2708:2:115;;19312:13;-1:-1:-1;1881:23461:115;2708:2;-1:-1:-1;;;;;1881:23461:115;;;;;;19122:563;;19785:3;2708:2;;19868:14;;19864:84;;20135:11;20122:24;;20135:11;;20118:421;;-1:-1:-1;;;;;9344:25:43;;9340:105;;1881:23461:115;;-1:-1:-1;;;20780:42:115;;-1:-1:-1;;;;;2708:2:115;;;20780:17;-1:-1:-1;;;;;1881:23461:115;;;;20780:42;1881:23461;20780:42;1881:23461;;20780:42;;;;;;;1881:23461;20780:42;;;20118:421;2708:2;;;;;;;;;;;;;;;20887:5;2708:2;;;;;;;;;;;;;;;;;21043:188;;;;;1881:23461;;21043:188;1881:23461;;2708:2;;;;;;;21043:188;;;20780:42;21043:188;;1881:23461;2708:2;1881:23461;2708:2;;1881:23461;2708:2;;;;;;:::i;:::-;;19785:3;2708:2;;;21043:188;;;;;;20118:421;-1:-1:-1;21039:1609:115;;;;2708:2;;;;;21039:1609;;;;;;21973:675;;:::i;:::-;22018:20;;1881:23461;;;;;;;;;:::i;:::-;2708:2;1881:23461;;-1:-1:-1;;;20780:42:115;2708:2;;;;;;20780:42;22127:21;;;;;22123:163;;21039:1609;2708:2;;;357:173:100;2708:2:115;;1881:23461;2708:2;:::i;:::-;357:173:100;2708:2:115;;;1881:23461;2708:2;;1881:23461;;;22317:260;1881:23461;;;;22317:260;2708:2;1881:23461;;20780:42;2708:2;;;;:::i;:::-;;;;;17729:190;2708:2;;1881:23461;-1:-1:-1;;;;;;1881:23461:115;2052:83:97;2708:2:115;;1881:23461;357:173:100;;22317:260:115;1881:23461;-1:-1:-1;;;22598:39:115;;20780:42;;22598:39;;2708:2;1881:23461;;;;2708:2;;;;:::i;:::-;22598:39;;;2708:2;-1:-1:-1;;;2708:2:115;;;20780:42;2708:2;1881:23461;;2708:2;22123:163;20780:42;2708:2;;22184:17;;-1:-1:-1;;;;;;;1881:23461:115;;;-1:-1:-1;22184:17:115;2708:2;;;22123:163;22168:33;;22234:37;22168:33;22234:37;:::i;:::-;22123:163;;;;;;2708:2;-1:-1:-1;;;;;;20780:42:115;2708:2;;;;;;;;;;;;-1:-1:-1;2708:2:115;;;;21039:1609;21494:478;;:::i;:::-;;;;21039:1609;;;21494:478;1881:23461;2708:2;1881:23461;;21578:47;1881:23461;;;;21578:47;;;1881:23461;20780:42;21578:47;;2708:2;;17729:190;2708:2;;;;2052:83:97;2708:2:115;;;2052:83:97;1881:23461:115;2708:2;;;;;;;;:::i;:::-;21578:47;1881:23461;;21578:47;;;;;;:::i;:::-;2708:2;;;1881:23461;2708:2;:::i;:::-;357:173:100;2708:2:115;;;1881:23461;2708:2;1881:23461;;2708:2;21645:256;1881:23461;;;;21645:256;1881:23461;;20780:42;2708:2;;;;:::i;:::-;1881:23461;2708:2;;;17729:190;2708:2;;1881:23461;2052:83:97;2708:2:115;;1881:23461;2708:2;;21645:256;1881:23461;;-1:-1:-1;;;21922:39:115;;20780:42;;21922:39;;2708:2;1881:23461;;;;2708:2;;;;:::i;:::-;-1:-1:-1;;;2708:2:115;;;20780:42;2708:2;1881:23461;;2708:2;;;20780:42;2708:2;;;;;;1881:23461;2708:2;;21039:1609;2708:2;21251:231;2708:2;;;;2052:83:97;2708:2:115;;;;357:173:100;2708:2:115;;1881:23461;2708:2;:::i;:::-;357:173:100;2708:2:115;1881:23461;;;;;20780:42;2708:2;;;;:::i;:::-;1881:23461;2708:2;;;17729:190;2708:2;;1881:23461;21251:231;-1:-1:-1;;;16559:27:115;22793:39;16192:6647::o;21043:188::-;;;;;1881:23461;21043:188;;:::i;:::-;1881:23461;21043:188;;;;2708:2;1881:23461;;;;2708:2;;20780:42;2708:2;1881:23461;;2708:2;20780:42;;;;;;;;;;;;;;;;;:::i;:::-;;;2708:2;;;;;20780:42;;;;;;-1:-1:-1;20780:42:115;;;1881:23461;;2708:2;1881:23461;2708:2;;;;;9340:105:43;9392:42;;;;1881:23461:115;9392:42:43;2052:83:97;9392:42:43;1881:23461:115;;;;;9392:42:43;20118:421:115;20376:24;20390:10;20118:421;;;19864:84;19905:32;;;1881:23461;19905:32;;1881:23461;19905:32;19122:563;1881:23461;-1:-1:-1;19346:11:115;-1:-1:-1;19346:11:115;:27;;19122:563;-1:-1:-1;19342:343:115;;;-1:-1:-1;;;;;2708:2:115;;19534:13;2708:2;-1:-1:-1;;;;;1881:23461:115;;;;;;19342:343;19122:563;;19342:343;-1:-1:-1;;;;16559:27:115;-1:-1:-1;1881:23461:115;;16559:27;-1:-1:-1;;;19635:39:115:o;19346:27::-;19361:12;;;19346:27;;;19126;19141:12;1881:23461;19141:12;;;19126:27;;18404:182;1881:23461;;;;18457:65;1881:23461;;;17729:190;1881:23461;;;;;;;2708:2;;;;1881:23461;18517:4;1881:23461;2708:2;;1881:23461;18457:65;-1:-1:-1;;;16559:27:115;1881:23461;;18536:39::o;18408:28::-;18425:11;18435:1;18425:11;;18408:28;;17295:263;1881:23461;17429:65;1881:23461;;;2708:2;1881:23461;;;;;;;2708:2;;;;1881:23461;17489:4;1881:23461;2708:2;;1881:23461;17429:65;-1:-1:-1;;;16559:27:115;1881:23461;;17508:39::o;16686:307::-;1881:23461;16782:66;1881:23461;;;2708:2;1881:23461;;;;;;;2708:2;;;;1881:23461;;;2708:2;;1881:23461;16782:66;-1:-1:-1;;;16559:27:115;1881:23461;;16943:39::o;16690:71::-;16740:21;16759:2;16740:21;;;16690:71;;16511:90;-1:-1:-1;;;;16559:27:115;-1:-1:-1;1881:23461:115;;16559:27;-1:-1:-1;;16551:39:115:o;23065:1063::-;;;23252:2;-1:-1:-1;23230:63:115;;23457:665;;;;;;;1881:23461;23457:665;;;;;;;;;;;;;;;;;23065:1063::o;23457:665::-;;;-1:-1:-1;23065:1063:115:o;24346:994::-;1881:23461;;-1:-1:-1;;;;;;1881:23461:115;-1:-1:-1;;;24585:65:115;;1881:23461;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1881:23461:115;;;;24666:55;:::o;24581:753::-;-1:-1:-1;;;24742:68:115;;1881:23461;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1881:23461:115;;;;24826:57;:::o;24738:596::-;-1:-1:-1;;;24904:60:115;;1881:23461;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1881:23461:115;;;;24980:52;:::o;24900:434::-;-1:-1:-1;;;25053:62:115;1881:23461;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1881:23461:115;;;;25131:58;:::o;25049:285::-;1881:23461;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1881:23461:115;;;;25277:46;:::o","linkReferences":{},"immutableReferences":{"62851":[{"start":441,"length":32},{"start":571,"length":32},{"start":653,"length":32},{"start":1144,"length":32},{"start":1251,"length":32},{"start":1588,"length":32},{"start":1805,"length":32}],"66576":[{"start":375,"length":32},{"start":3008,"length":32}]}},"methodIdentifiers":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":"9f063efc","afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":"e1b4af69","afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":"6fe7e6eb","afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":"6c2bbe7e","afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":"b47b2fb1","beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"259982e5","beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":"b6a8b0fa","beforeInitialize(address,(address,address,uint24,int24,address),uint160)":"dc98354e","beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"21d0ee70","beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":"575e24b4","getHookPermissions()":"c4e833ce","owner()":"8da5cb5b","poolManager()":"dc4c90d3","predictionManager()":"ee687a98","recoverETH(address,uint256)":"3e0c0629","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_predictionManagerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSwapAmountForStake\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedLength\",\"type\":\"uint256\"}],\"name\":\"InvalidHookDataLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PredictionPoolZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PredictionRecordingFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expectedLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isUniversalRouter\",\"type\":\"bool\"}],\"name\":\"HookDataDebug\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"convictionStake\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapAmount\",\"type\":\"uint256\"}],\"name\":\"PredictionAttempted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"convictionStake\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"errorSelector\",\"type\":\"bytes4\"}],\"name\":\"PredictionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"convictionStake\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"swapAmount\",\"type\":\"uint256\"}],\"name\":\"PredictionRecorded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"permissions\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predictionManager\",\"outputs\":[{\"internalType\":\"contract IPredictionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Simone Di Cola\",\"details\":\"This hook integrates with the SwapCast `PredictionManager`. When a user performs a swap via the `PoolManager`      and includes specific `hookData` (market ID and predicted outcome), this hook's `_afterSwap` logic is triggered.      The user's conviction (stake) is passed as `msg.value` with the swap call, which the `PoolManager` forwards to this hook.      The hook then attempts to record this prediction in the `PredictionManager`.      It inherits from `BaseHook` and primarily utilizes the `afterSwap` permission.\",\"errors\":{\"ETHTransferFailed()\":[{\"details\":\"This error is thrown by the recoverETH function if the ETH transfer to the specified address fails.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"This error is thrown by the recoverETH function if the requested amount exceeds the contract's balance.\",\"params\":{\"available\":\"The actual balance available in the contract.\",\"requested\":\"The amount of ETH requested to recover.\"}}],\"InsufficientSwapAmountForStake()\":[{\"details\":\"This error is thrown in the _afterSwap function when the 1% fee calculation results in zero stake.      A non-zero conviction stake is required to ensure users have skin in the game when making predictions.\"}],\"InvalidHookDataLength(uint256,uint256)\":[{\"details\":\"Currently, this error is defined but not explicitly used to validate against `PREDICTION_HOOK_DATA_LENGTH`.      It could be used if stricter `hookData` length validation is implemented.\",\"params\":{\"actualLength\":\"The actual length of the `hookData` received.\",\"expectedLength\":\"The expected length for valid prediction `hookData`.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"PredictionRecordingFailed(string)\":[{\"details\":\"This error is thrown when the try/catch block in _afterSwap catches an exception from the PredictionManager.      The error includes the reason for the failure to help with debugging and user feedback.\",\"params\":{\"reason\":\"A string describing the reason for the failure, forwarded from the `PredictionPool` or a general message.\"}}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"ZeroAddress()\":[{\"details\":\"This error is used in functions that require valid addresses, such as recoverETH.\"}]},\"events\":{\"HookDataDebug(uint256,uint256,bool)\":{\"params\":{\"expectedLength\":\"The expected length for valid prediction `hookData`.\",\"isUniversalRouter\":\"A boolean indicating whether the hookData was received from a Universal Router.\",\"receivedLength\":\"The actual length of the `hookData` received.\"}},\"PredictionAttempted(address,bytes32,uint256,uint8,uint128,uint256)\":{\"params\":{\"convictionStake\":\"The amount of conviction (stake) automatically calculated from swap.\",\"marketId\":\"The ID of the prediction market.\",\"outcome\":\"The predicted outcome (Bearish or Bullish).\",\"poolId\":\"The ID of the pool where the swap occurred.\",\"swapAmount\":\"The original swap amount before taking the 1% fee.\",\"user\":\"The address of the user making the prediction.\"}},\"PredictionFailed(address,bytes32,uint256,uint8,uint128,uint256,bytes4)\":{\"params\":{\"convictionStake\":\"The amount of conviction (stake) automatically calculated from swap.\",\"errorSelector\":\"The error selector from the PredictionPool's revert, if available.\",\"marketId\":\"The ID of the prediction market.\",\"outcome\":\"The predicted outcome (Bearish or Bullish).\",\"poolId\":\"The ID of the pool where the swap occurred.\",\"swapAmount\":\"The original swap amount before taking the 1% fee.\",\"user\":\"The address of the user making the prediction.\"}},\"PredictionRecorded(address,bytes32,uint256,uint8,uint128,uint256)\":{\"params\":{\"convictionStake\":\"The amount of conviction (stake) automatically calculated from swap.\",\"marketId\":\"The ID of the prediction market.\",\"outcome\":\"The predicted outcome (Bearish or Bullish).\",\"poolId\":\"The ID of the pool where the swap occurred.\",\"swapAmount\":\"The original swap amount before taking the 1% fee.\",\"user\":\"The address of the user making the prediction.\"}}},\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"constructor\":{\"details\":\"Initializes the contract with the PoolManager and PredictionManager addresses.      Also initializes the Ownable contract with the deployer as the initial owner.      This owner will have the ability to recover ETH in emergency situations.\",\"params\":{\"_poolManager\":\"The address of the Uniswap V4 PoolManager this hook will be registered with.                     Passed to the `BaseHook` constructor.\",\"_predictionManagerAddress\":\"The address of the `PredictionManager` contract where predictions will be recorded.                               Cannot be the zero address.\"}},\"getHookPermissions()\":{\"details\":\"Overrides `BaseHook.getHookPermissions`.      This implementation enables only the `afterSwap` hook point, meaning the hook logic      in `_afterSwap` will be executed by the `PoolManager` after a swap transaction is processed.\",\"returns\":{\"permissions\":\"A `Hooks.Permissions` struct with `afterSwap` set to true and all others false.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverETH(address,uint256)\":{\"details\":\"This function provides a safety mechanism to recover ETH that might get stuck in the contract      due to failed prediction attempts or other unexpected scenarios. It includes the following      security controls:      1. Only the contract owner can call this function (via the onlyOwner modifier)      2. The recipient address cannot be the zero address      3. The function reverts if the ETH transfer fails      This function should only be used in emergency situations when ETH is genuinely stuck      and cannot be processed through normal means.\",\"params\":{\"_amount\":\"The amount of ETH to recover.\",\"_to\":\"The address to send the recovered ETH to.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"PREDICTION_HOOK_DATA_LENGTH\":{\"details\":\"This constant represents 20 bytes for `actualUser` (address) + 32 bytes for `marketId` (uint256) +      1 byte for `outcome` (uint8). No convictionStake needed as it's auto-calculated from swap amount.      The `_afterSwap` function enforces this length for non-empty hookData.\"},\"WETH\":{\"details\":\"This is used to identify when a transaction intends to use ETH rather than an ERC20 token\"},\"predictionManager\":{\"details\":\"This address is set immutably during deployment via the constructor.      It must conform to the {IPredictionManager} interface.\"}},\"title\":\"SwapCastHook\",\"version\":1},\"userdoc\":{\"errors\":{\"ETHTransferFailed()\":[{\"notice\":\"Reverts if an ETH transfer fails during recovery.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"notice\":\"Reverts if an attempt is made to recover more ETH than is available in the contract.\"}],\"InsufficientSwapAmountForStake()\":[{\"notice\":\"Reverts if the calculated conviction stake from the swap amount is zero or too small.\"}],\"InvalidHookDataLength(uint256,uint256)\":[{\"notice\":\"Reverts if the provided `hookData` has an unexpected length.\"}],\"NotPoolManager()\":[{\"notice\":\"Thrown when the caller is not PoolManager\"}],\"PredictionPoolZeroAddress()\":[{\"notice\":\"Reverts during construction if the provided `_predictionManagerAddress` is the zero address.\"}],\"PredictionRecordingFailed(string)\":[{\"notice\":\"Reverts if the call to `predictionManager.recordPrediction` fails for any reason.\"}],\"ZeroAddress()\":[{\"notice\":\"Reverts if a zero address is provided where a non-zero address is required.\"}]},\"events\":{\"HookDataDebug(uint256,uint256,bool)\":{\"notice\":\"Emitted when debug information about hookData is received.\"},\"PredictionAttempted(address,bytes32,uint256,uint8,uint128,uint256)\":{\"notice\":\"Emitted when a user attempts to make a prediction during a swap.\"},\"PredictionFailed(address,bytes32,uint256,uint8,uint128,uint256,bytes4)\":{\"notice\":\"Emitted when a prediction attempt fails to be recorded in the PredictionPool.\"},\"PredictionRecorded(address,bytes32,uint256,uint8,uint128,uint256)\":{\"notice\":\"Emitted when a prediction is successfully recorded in the PredictionPool.\"}},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"},\"constructor\":{\"notice\":\"Contract constructor.\"},\"getHookPermissions()\":{\"notice\":\"Defines the permissions for this hook, indicating which hook points it will implement.\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"predictionManager()\":{\"notice\":\"The instance of the PredictionManager contract where predictions are recorded.\"},\"recoverETH(address,uint256)\":{\"notice\":\"Allows the owner to recover ETH stuck in the contract in case of emergency.\"}},\"notice\":\"A Uniswap V4 hook designed to enable users to make predictions on market outcomes         concurrently with their swap transactions on a Uniswap V4 pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapCastHook.sol\":\"SwapCastHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb\",\"dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"lib/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"lib/v4-periphery/src/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0xe88abf12501ac275619aec0687240a07d26968aecbbcdfea88ba8bbd5d6e5e14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7097065d4492b4eccb1a73f99af1e5bec45404c6b973b8f5965c4c91403f5f92\",\"dweb:/ipfs/QmZK8oEqmjmTqhBoh3D3fBpyKGkUEFnptY8xwH9xpNjDm2\"]},\"lib/v4-periphery/src/utils/BaseHook.sol\":{\"keccak256\":\"0x6268607345149d912996d1c2bac693b2102304cc97c19ec4fef184d6fa390e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6c0dddffa6c5eb3c10bc45d56d58bc3f4773778322fa10a4acf46e2292b61b3\",\"dweb:/ipfs/Qmc1Srhh6ne5Lsi2Y5BBz8pgPLmJdg8uN1UCeJzKnr6Kra\"]},\"src/SwapCastHook.sol\":{\"keccak256\":\"0x1ddefe02e83dd57b1f4e6b7fb4ffe027b28f2ec9a7786eb957683c3a8bec996c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49d802e6a81c4b88b20885f9d2b4adb1d7e89dd9124258a2c429d79fc6d17bd7\",\"dweb:/ipfs/QmSTa8rxLuLJw7FCLfXUc82kiUwDQBFFad1M77nLDpPJus\"]},\"src/interfaces/IPredictionManager.sol\":{\"keccak256\":\"0x36a4ac522d5bc74e77fb722dce4abd3cdda535deb53515a2804be929a59d0a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2489991775343a6424d97aa77de7c92d10c02eebc5b7a2ca0428b1a4d40e2f\",\"dweb:/ipfs/QmXc1VpV2GL6mQiXEg2z5kd1B8YybHgmnU7DboxhGRECay\"]},\"src/interfaces/IUniversalRouter.sol\":{\"keccak256\":\"0x2525b52d1edf5df89bfd093c5b933b9e8f65236f44f58096763a6c87a5cafb63\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5cc0fcfedd6b32586099ee0f6781bb81da99175c65013c06bb6f61a125babb18\",\"dweb:/ipfs/QmcEkSzkjkPpp3YyJZaY232TjuNU4Pw6CSiTWz7sk2Sq5D\"]},\"src/types/PredictionTypes.sol\":{\"keccak256\":\"0xa158d4fd16826cd55c7beac796e00d570bc7e779ba54134f88eafaf3adcad869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70699e677b83dbd0c34ab544feedd13a7f79630f3d1a496a0c57ae537af6e43\",\"dweb:/ipfs/QmYDFn5au9Htjb289VBnJ34QWkEEvoz2fXj57kUsTcVGWt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IPoolManager","name":"_poolManager","type":"address"},{"internalType":"address","name":"_predictionManagerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"ETHTransferFailed"},{"inputs":[],"type":"error","name":"HookNotImplemented"},{"inputs":[{"internalType":"uint256","name":"requested","type":"uint256"},{"internalType":"uint256","name":"available","type":"uint256"}],"type":"error","name":"InsufficientBalance"},{"inputs":[],"type":"error","name":"InsufficientSwapAmountForStake"},{"inputs":[{"internalType":"uint256","name":"actualLength","type":"uint256"},{"internalType":"uint256","name":"expectedLength","type":"uint256"}],"type":"error","name":"InvalidHookDataLength"},{"inputs":[],"type":"error","name":"NotPoolManager"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[],"type":"error","name":"PredictionPoolZeroAddress"},{"inputs":[{"internalType":"string","name":"reason","type":"string"}],"type":"error","name":"PredictionRecordingFailed"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"type":"error","name":"SafeCastOverflowedUintDowncast"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[{"internalType":"uint256","name":"receivedLength","type":"uint256","indexed":false},{"internalType":"uint256","name":"expectedLength","type":"uint256","indexed":false},{"internalType":"bool","name":"isUniversalRouter","type":"bool","indexed":false}],"type":"event","name":"HookDataDebug","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"PoolId","name":"poolId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"marketId","type":"uint256","indexed":false},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8","indexed":false},{"internalType":"uint128","name":"convictionStake","type":"uint128","indexed":false},{"internalType":"uint256","name":"swapAmount","type":"uint256","indexed":false}],"type":"event","name":"PredictionAttempted","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"PoolId","name":"poolId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"marketId","type":"uint256","indexed":false},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8","indexed":false},{"internalType":"uint128","name":"convictionStake","type":"uint128","indexed":false},{"internalType":"uint256","name":"swapAmount","type":"uint256","indexed":false},{"internalType":"bytes4","name":"errorSelector","type":"bytes4","indexed":false}],"type":"event","name":"PredictionFailed","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"PoolId","name":"poolId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"marketId","type":"uint256","indexed":false},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8","indexed":false},{"internalType":"uint128","name":"convictionStake","type":"uint128","indexed":false},{"internalType":"uint256","name":"swapAmount","type":"uint256","indexed":false}],"type":"event","name":"PredictionRecorded","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterAddLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterDonate","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"}],"stateMutability":"nonpayable","type":"function","name":"afterInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterRemoveLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"int128","name":"","type":"int128"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeAddLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeDonate","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"stateMutability":"nonpayable","type":"function","name":"beforeInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeRemoveLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BeforeSwapDelta","name":"","type":"int256"},{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"getHookPermissions","outputs":[{"internalType":"struct Hooks.Permissions","name":"permissions","type":"tuple","components":[{"internalType":"bool","name":"beforeInitialize","type":"bool"},{"internalType":"bool","name":"afterInitialize","type":"bool"},{"internalType":"bool","name":"beforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"afterAddLiquidity","type":"bool"},{"internalType":"bool","name":"beforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"afterRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"beforeSwap","type":"bool"},{"internalType":"bool","name":"afterSwap","type":"bool"},{"internalType":"bool","name":"beforeDonate","type":"bool"},{"internalType":"bool","name":"afterDonate","type":"bool"},{"internalType":"bool","name":"beforeSwapReturnDelta","type":"bool"},{"internalType":"bool","name":"afterSwapReturnDelta","type":"bool"},{"internalType":"bool","name":"afterAddLiquidityReturnDelta","type":"bool"},{"internalType":"bool","name":"afterRemoveLiquidityReturnDelta","type":"bool"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolManager","outputs":[{"internalType":"contract IPoolManager","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"predictionManager","outputs":[{"internalType":"contract IPredictionManager","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"recoverETH"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"params":{"delta":"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta","feesAccrued":"The fees accrued since the last time fees were collected from this position","hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook","key":"The key for the pool","params":"The parameters for adding liquidity","sender":"The initial msg.sender for the add liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being donated","amount1":"The amount of token1 being donated","hookData":"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook","key":"The key for the pool","sender":"The initial msg.sender for the donate call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":{"params":{"key":"The key for the pool being initialized","sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96","tick":"The current tick after the state of a pool is initialized"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"params":{"delta":"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta","feesAccrued":"The fees accrued since the last time fees were collected from this position","hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook","key":"The key for the pool","params":"The parameters for removing liquidity","sender":"The initial msg.sender for the remove liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":{"params":{"delta":"The amount owed to the caller (positive) or owed to the pool (negative)","hookData":"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook","key":"The key for the pool","params":"The parameters for the swap","sender":"The initial msg.sender for the swap call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook","key":"The key for the pool","params":"The parameters for adding liquidity","sender":"The initial msg.sender for the add liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being donated","amount1":"The amount of token1 being donated","hookData":"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook","key":"The key for the pool","sender":"The initial msg.sender for the donate call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeInitialize(address,(address,address,uint24,int24,address),uint160)":{"params":{"key":"The key for the pool being initialized","sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook","key":"The key for the pool","params":"The parameters for removing liquidity","sender":"The initial msg.sender for the remove liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook","key":"The key for the pool","params":"The parameters for the swap","sender":"The initial msg.sender for the swap call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency","_2":"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"}},"constructor":{"details":"Initializes the contract with the PoolManager and PredictionManager addresses.      Also initializes the Ownable contract with the deployer as the initial owner.      This owner will have the ability to recover ETH in emergency situations.","params":{"_poolManager":"The address of the Uniswap V4 PoolManager this hook will be registered with.                     Passed to the `BaseHook` constructor.","_predictionManagerAddress":"The address of the `PredictionManager` contract where predictions will be recorded.                               Cannot be the zero address."}},"getHookPermissions()":{"details":"Overrides `BaseHook.getHookPermissions`.      This implementation enables only the `afterSwap` hook point, meaning the hook logic      in `_afterSwap` will be executed by the `PoolManager` after a swap transaction is processed.","returns":{"permissions":"A `Hooks.Permissions` struct with `afterSwap` set to true and all others false."}},"owner()":{"details":"Returns the address of the current owner."},"recoverETH(address,uint256)":{"details":"This function provides a safety mechanism to recover ETH that might get stuck in the contract      due to failed prediction attempts or other unexpected scenarios. It includes the following      security controls:      1. Only the contract owner can call this function (via the onlyOwner modifier)      2. The recipient address cannot be the zero address      3. The function reverts if the ETH transfer fails      This function should only be used in emergency situations when ETH is genuinely stuck      and cannot be processed through normal means.","params":{"_amount":"The amount of ETH to recover.","_to":"The address to send the recovered ETH to."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"notice":"The hook called after liquidity is added"},"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"The hook called after donate"},"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":{"notice":"The hook called after the state of a pool is initialized"},"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"notice":"The hook called after liquidity is removed"},"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":{"notice":"The hook called after a swap"},"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"The hook called before liquidity is added"},"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"The hook called before donate"},"beforeInitialize(address,(address,address,uint24,int24,address),uint160)":{"notice":"The hook called before the state of a pool is initialized"},"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"The hook called before liquidity is removed"},"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"notice":"The hook called before a swap"},"constructor":{"notice":"Contract constructor."},"getHookPermissions()":{"notice":"Defines the permissions for this hook, indicating which hook points it will implement."},"poolManager()":{"notice":"The Uniswap v4 PoolManager contract"},"predictionManager()":{"notice":"The instance of the PredictionManager contract where predictions are recorded."},"recoverETH(address,uint256)":{"notice":"Allows the owner to recover ETH stuck in the contract in case of emergency."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/openzeppelin-contracts/","@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/SwapCastHook.sol":"SwapCastHook"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol":{"keccak256":"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7","urls":["bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b","dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol":{"keccak256":"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c","urls":["bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba","dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7","urls":["bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db","dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5","urls":["bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508","dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol":{"keccak256":"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43","urls":["bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1","dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol":{"keccak256":"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937","urls":["bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8","dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol":{"keccak256":"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d","urls":["bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec","dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol":{"keccak256":"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e","urls":["bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4","dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol":{"keccak256":"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848","urls":["bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d","dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol":{"keccak256":"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f","urls":["bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de","dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol":{"keccak256":"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48","urls":["bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f","dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol":{"keccak256":"0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa","urls":["bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb","dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b","urls":["bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475","dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol":{"keccak256":"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15","urls":["bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17","dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol":{"keccak256":"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86","urls":["bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59","dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol":{"keccak256":"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f","urls":["bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9","dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol":{"keccak256":"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78","urls":["bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782","dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/Currency.sol":{"keccak256":"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93","urls":["bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01","dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol":{"keccak256":"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af","urls":["bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918","dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol":{"keccak256":"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786","urls":["bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639","dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/PoolOperation.sol":{"keccak256":"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162","urls":["bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07","dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c"],"license":"MIT"},"lib/v4-periphery/src/base/ImmutableState.sol":{"keccak256":"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a","urls":["bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337","dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU"],"license":"MIT"},"lib/v4-periphery/src/interfaces/IImmutableState.sol":{"keccak256":"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b","urls":["bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341","dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq"],"license":"MIT"},"lib/v4-periphery/src/interfaces/external/IWETH9.sol":{"keccak256":"0xe88abf12501ac275619aec0687240a07d26968aecbbcdfea88ba8bbd5d6e5e14","urls":["bzz-raw://7097065d4492b4eccb1a73f99af1e5bec45404c6b973b8f5965c4c91403f5f92","dweb:/ipfs/QmZK8oEqmjmTqhBoh3D3fBpyKGkUEFnptY8xwH9xpNjDm2"],"license":"MIT"},"lib/v4-periphery/src/utils/BaseHook.sol":{"keccak256":"0x6268607345149d912996d1c2bac693b2102304cc97c19ec4fef184d6fa390e89","urls":["bzz-raw://d6c0dddffa6c5eb3c10bc45d56d58bc3f4773778322fa10a4acf46e2292b61b3","dweb:/ipfs/Qmc1Srhh6ne5Lsi2Y5BBz8pgPLmJdg8uN1UCeJzKnr6Kra"],"license":"MIT"},"src/SwapCastHook.sol":{"keccak256":"0x1ddefe02e83dd57b1f4e6b7fb4ffe027b28f2ec9a7786eb957683c3a8bec996c","urls":["bzz-raw://49d802e6a81c4b88b20885f9d2b4adb1d7e89dd9124258a2c429d79fc6d17bd7","dweb:/ipfs/QmSTa8rxLuLJw7FCLfXUc82kiUwDQBFFad1M77nLDpPJus"],"license":"MIT"},"src/interfaces/IPredictionManager.sol":{"keccak256":"0x36a4ac522d5bc74e77fb722dce4abd3cdda535deb53515a2804be929a59d0a43","urls":["bzz-raw://fc2489991775343a6424d97aa77de7c92d10c02eebc5b7a2ca0428b1a4d40e2f","dweb:/ipfs/QmXc1VpV2GL6mQiXEg2z5kd1B8YybHgmnU7DboxhGRECay"],"license":"MIT"},"src/interfaces/IUniversalRouter.sol":{"keccak256":"0x2525b52d1edf5df89bfd093c5b933b9e8f65236f44f58096763a6c87a5cafb63","urls":["bzz-raw://5cc0fcfedd6b32586099ee0f6781bb81da99175c65013c06bb6f61a125babb18","dweb:/ipfs/QmcEkSzkjkPpp3YyJZaY232TjuNU4Pw6CSiTWz7sk2Sq5D"],"license":"GPL-3.0-or-later"},"src/types/PredictionTypes.sol":{"keccak256":"0xa158d4fd16826cd55c7beac796e00d570bc7e779ba54134f88eafaf3adcad869","urls":["bzz-raw://b70699e677b83dbd0c34ab544feedd13a7f79630f3d1a496a0c57ae537af6e43","dweb:/ipfs/QmYDFn5au9Htjb289VBnJ34QWkEEvoz2fXj57kUsTcVGWt"],"license":"MIT"}},"version":1},"id":115}