{"abi":[{"type":"constructor","inputs":[{"name":"_initialOwner","type":"address","internalType":"address"},{"name":"_name","type":"string","internalType":"string"},{"name":"_symbol","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"approve","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"_tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getApproved","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPredictionDetails","inputs":[{"name":"_tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcome","type":"uint8","internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint256","internalType":"uint256"},{"name":"owner_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_marketId","type":"uint256","internalType":"uint256"},{"name":"_outcome","type":"uint8","internalType":"enum PredictionTypes.Outcome"},{"name":"_convictionStake","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"predictionManagerAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPredictionManagerAddress","inputs":[{"name":"_newPredictionManagerAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"tokenPredictionMetadata","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"marketId","type":"uint128","internalType":"uint128"},{"name":"mintedAt","type":"uint64","internalType":"uint64"},{"name":"convictionStake","type":"uint128","internalType":"uint128"},{"name":"outcome","type":"uint8","internalType":"enum PredictionTypes.Outcome"}],"stateMutability":"view"},{"type":"function","name":"tokenURI","inputs":[{"name":"_tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ApprovalForAll","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"operator","type":"address","indexed":true,"internalType":"address"},{"name":"approved","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PositionNFTBurned","inputs":[{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PositionNFTMinted","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"marketId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"outcome","type":"uint8","indexed":false,"internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PredictionManagerAddressSet","inputs":[{"name":"oldAddress","type":"address","indexed":true,"internalType":"address"},{"name":"newAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"tokenId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"ERC721IncorrectOwner","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InsufficientApproval","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"ERC721InvalidApprover","inputs":[{"name":"approver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidOperator","inputs":[{"name":"operator","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidReceiver","inputs":[{"name":"receiver","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721InvalidSender","inputs":[{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"ERC721NonexistentToken","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidConvictionStake","inputs":[]},{"type":"error","name":"NonExistentToken","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotPredictionManager","inputs":[]},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]},{"type":"error","name":"ZeroAddress","inputs":[]}],"bytecode":{"object":"0x60806040523461038557611e478038038061001981610389565b9283398101906060818303126103855780516001600160a01b03811691908290036103855760208101516001600160401b038111610385578361005d9183016103ae565b60408201519093906001600160401b0381116103855761007d92016103ae565b82519091906001600160401b038111610299575f54600181811c9116801561037b575b602082101461027b57601f8111610319575b506020601f82116001146102b857819293945f926102ad575b50508160011b915f199060031b1c1916175f555b81516001600160401b03811161029957600154600181811c9116801561028f575b602082101461027b57601f8111610218575b50602092601f82116001146101b757928192935f926101ac575b50508160011b915f199060031b1c1916176001555b801561019957600680546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3611a4790816104008239f35b631e4fbdf760e01b5f525f60045260245ffd5b015190505f8061012c565b601f1982169360015f52805f20915f5b86811061020057508360019596106101e8575b505050811b01600155610141565b01515f1960f88460031b161c191690555f80806101da565b919260206001819286850151815501940192016101c7565b60015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c81019160208410610271575b601f0160051c01905b8181106102665750610112565b5f8155600101610259565b9091508190610250565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610100565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100cb565b601f198216905f8052805f20915f5b818110610301575095836001959697106102e9575b505050811b015f556100df565b01515f1960f88460031b161c191690555f80806102dc565b9192602060018192868b0151815501940192016102c7565b5f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c81019160208410610371575b601f0160051c01905b81811061036657506100b2565b5f8155600101610359565b9091508190610350565b90607f16906100a0565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761029957604052565b81601f82011215610385578051906001600160401b038211610299576103dd601f8301601f1916602001610389565b928284526020838301011161038557815f9260208093018386015e830101529056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146112705750806306fdde03146111b8578063081812fc1461117c578063095ea7b31461109257806318160ddd1461107557806323b872dd1461105e57806342842e0e1461103557806342966c6814610f0a5780636352211e14610eda5780637019230214610e6757806370a0823114610e16578063715018a614610dbb578063854ec60814610d4f5780638da5cb5b14610d275780638f88833814610c9e57806395d89b4114610b96578063a22cb46514610afb578063a7a6be961461088f578063b88d4fde14610805578063c87b56dd14610222578063e985e9c5146101cb578063ef9e745f146101a35763f2fde38b14610119575f80fd5b3461019f57602036600319011261019f576101326112ff565b61013a6116ee565b6001600160a01b0316801561018c57600680546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461019f575f36600319011261019f576007546040516001600160a01b039091168152602090f35b3461019f57604036600319011261019f576101e46112ff565b6101ec611315565b9060018060a01b03165f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b3461019f57602036600319011261019f576004355f818152600260205260409020546001600160a01b0316156107f357805f52600860205260405f2060405161026a81611372565b60018254926001600160801b038416835267ffffffffffffffff602084019460801c168452015460408201906001600160801b03811682526102b660ff606085019260801c1682611580565b805160038110156107df5761077657506102f16040516102d76040826113a2565b6007815266084cac2e4d2e6d60cb1b602082015294611747565b92604051928360208101957f226e616d65223a2022537761704361737420506f736974696f6e204e46542023875280516020819201604084015e8101601160f91b604082015203604001601e198101855260010161034f90856113a2565b60405161035d60a0826113a2565b6072815260208101917f226465736372697074696f6e223a2022412053776170436173742070726564698352604082017f6374696f6e20706f736974696f6e204e465420726570726573656e74696e67209052606082017f612075736572277320636f6e76696374696f6e206f6e20612073706563696669905271319036b0b935b2ba1037baba31b7b6b2971160711b6080830152516001600160801b03169660409788519061040d8a836113a2565b600982526813585c9ad95d08125160ba1b602083015261042c90611747565b6104359161188f565b938851956104438a886113a2565b601187526020870170507265646963746564204f7574636f6d6560781b81528a5193849160208301996f3d913a3930b4ba2fba3cb832911d101160811b8b52518091603085015e82016c111610113b30b63ab2911d101160991b603082015281516020819301603d83015e0160300161227d60f01b600d82015203600d01601d19810184526002016104d590846113a2565b516001600160801b03168951906104ec8b836113a2565b6016825275436f6e76696374696f6e205374616b6520285765692960501b602083015261051890611747565b6105219161188f565b905167ffffffffffffffff1689519061053a8b836113a2565b601382527204d696e7465642041742054696d657374616d7606c1b602083015261056390611747565b61056c9161188f565b9089519687936020850197805160208192018a5e85019060208201600b60fa1b9052518092602183015e0160200160018101600b60fa1b905281516020819301600283015e0160010160018101600b60fa1b905281516020819301600283015e01600101600181015f905203600101601f19810185526105ec90856113a2565b8651809360208201956e2261747472696275746573223a205b60881b8752518091602f84015e8101602f8101605d60f81b905203602f01601e198101845260010161063790846113a2565b865195869560208701607b60f81b9052518091602188015e85019060218201600b60fa1b9052518092602283015e016021019060018201600b60fa1b9052518092600283015e0160010160018101607d60f81b905203600101601e19810182526001016106a490826113a2565b81516106b16060826113a2565b8281527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f8184015261070891611905565b9080518092602082017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000905280516020819201603d84015e8101603d81015f905203603d01601f198101835261075e90836113a2565b5180916020825260208201610772916112db565b0390f35b5160038110156107df576001036107b2576102f16040516107986040826113a2565b6007815266084ead8d8d2e6d60cb1b602082015294611747565b6102f16040516107c36040826113a2565b6009815268155b9919599a5b995960ba1b602082015294611747565b634e487b7160e01b5f52602160045260245ffd5b6338077a2b60e01b5f5260045260245ffd5b3461019f57608036600319011261019f5761081e6112ff565b610826611315565b6064359167ffffffffffffffff831161019f573660238401121561019f57826004013591610853836113c4565b9261086160405194856113a2565b808452366024828701011161019f576020815f92602461088d980183880137850101526044359161158c565b005b3461019f57608036600319011261019f576108a86112ff565b604435602435600382101561019f5760075460643593906001600160a01b03163303610aec576001600160a01b03168015610add578315610ace576009549260018401600955835f52600260205260018060a01b0360405f2054168015159081610a9b575b83610a83575b855f52600260205260405f20846bffffffffffffffffffffffff60a01b8254161790558584827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a450610a705760405161096e81611372565b6001600160801b03841681526020810167ffffffffffffffff421681526001600160801b038060016040850194828b16865260608101946109af8887611580565b8a5f526008602052838060405f209351161684198354161782555181549067ffffffffffffffff60801b9060801b169067ffffffffffffffff60801b191617815501935116166001600160801b0319835416178255519360038510156107df57602096610a627e18ea8bf2dcc7c597d58637b6ee0862fe5a2918dd89c2294da47277d40dffef94606094899881549060ff60801b9060801b169060ff60801b191617905560405193845289840190611365565b6040820152a3604051908152f35b6339e3563760e11b5f525f60045260245ffd5b835f52600360205260405f2060018154019055610913565b5f86815260046020526040902080546001600160a01b0319169055805f52600360205260405f205f19815401905561090d565b63eaf0162f60e01b5f5260045ffd5b63d92e233d60e01b5f5260045ffd5b63d5eceddd60e01b5f5260045ffd5b3461019f57604036600319011261019f57610b146112ff565b6024359081151580920361019f576001600160a01b0316908115610b8357335f52600560205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b50630b61174360e31b5f5260045260245ffd5b3461019f575f36600319011261019f576040515f6001548060011c90600181168015610c94575b602083108114610c8057828552908115610c5c5750600114610bfe575b61077283610bea818503826113a2565b6040519182916020835260208301906112db565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b808210610c4257509091508101602001610bea610bda565b919260018160209254838588010152019101909291610c2a565b60ff191660208086019190915291151560051b84019091019150610bea9050610bda565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610bbd565b3461019f57602036600319011261019f576004355f818152600260205260409020546001600160a01b03168015610d14576080915f52600860205260405f20906001600160801b03600181845416930154604051938452610d076020850160ff83881c16611365565b1660408301526060820152f35b506338077a2b60e01b5f5260045260245ffd5b3461019f575f36600319011261019f576006546040516001600160a01b039091168152602090f35b3461019f57602036600319011261019f576004355f526008602052608060405f20610db96001825492015467ffffffffffffffff604051936001600160801b0381168552851c1660208401526001600160801b038116604084015260ff6060840191851c16611365565bf35b3461019f575f36600319011261019f57610dd36116ee565b600680546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461019f57602036600319011261019f576001600160a01b03610e376112ff565b168015610e54575f526003602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b3461019f57602036600319011261019f57610e806112ff565b610e886116ee565b6001600160a01b03168015610add57600780546001600160a01b0319811683179091556001600160a01b03167f67a10b89439c7dbac12e9df3769629552e5badab0be5390a49fd050be14d10e05f80a3005b3461019f57602036600319011261019f576020610ef86004356116cc565b6040516001600160a01b039091168152f35b3461019f57602036600319011261019f57600754600435906001600160a01b03163303610aec575f818152600260205260409020546001600160a01b0316156107f357805f5260086020525f6001604082208281550155807ff5f05b2b75d7eefbad047c6a5f5965c53a8a469bc4181e434d4fd60019ea1f175f80a25f818152600260205260409020546001600160a01b03168015908115611002575b5f83815260026020526040812080546001600160a01b03191690558390827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a450610ff057005b637e27328960e01b5f5260045260245ffd5b5f83815260046020526040902080546001600160a01b0319169055805f52600360205260405f205f198154019055610fa7565b3461019f5761088d6110463661132b565b90604051926110566020856113a2565b5f845261158c565b3461019f5761088d61106f3661132b565b916113e0565b3461019f575f36600319011261019f576020600954604051908152f35b3461019f57604036600319011261019f576110ab6112ff565b6024356110b7816116cc565b33151580611169575b8061113c575b6111295781906001600160a01b0384811691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f90815260046020526040902080546001600160a01b0319166001600160a01b03909216919091179055005b63a9fbf51f60e01b5f523360045260245ffd5b506001600160a01b0381165f90815260056020908152604080832033845290915290205460ff16156110c6565b506001600160a01b0381163314156110c0565b3461019f57602036600319011261019f57600435611199816116cc565b505f526004602052602060018060a01b0360405f205416604051908152f35b3461019f575f36600319011261019f576040515f80548060011c90600181168015611266575b602083108114610c8057828552908115610c5c575060011461120a5761077283610bea818503826113a2565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b80821061124c57509091508101602001610bea610bda565b919260018160209254838588010152019101909291611234565b91607f16916111de565b3461019f57602036600319011261019f576004359063ffffffff60e01b821680920361019f576020916380ac58cd60e01b81149081156112ca575b81156112b9575b5015158152f35b6301ffc9a760e01b149050836112b2565b635b5e139f60e01b811491506112ab565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361019f57565b602435906001600160a01b038216820361019f57565b606090600319011261019f576004356001600160a01b038116810361019f57906024356001600160a01b038116810361019f579060443590565b9060038210156107df5752565b6080810190811067ffffffffffffffff82111761138e57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761138e57604052565b67ffffffffffffffff811161138e57601f01601f191660200190565b6001600160a01b039091169190821561156d575f828152600260205260409020546001600160a01b0316928290331515806114d8575b50846114a5575b805f52600360205260405f2060018154019055815f52600260205260405f20816bffffffffffffffffffffffff60a01b825416179055847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a46001600160a01b031680830361148d57505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b5f82815260046020526040902080546001600160a01b0319169055845f52600360205260405f205f19815401905561141d565b9091508061151c575b156114ee5782905f611416565b828461150657637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f523360045260245260445ffd5b50338414801561154b575b806114e157505f838152600460205260409020546001600160a01b031633146114e1565b505f84815260056020908152604080832033845290915290205460ff16611527565b633250574960e11b5f525f60045260245ffd5b60038210156107df5752565b92916115998183866113e0565b813b6115a6575b50505050565b604051630a85bd0160e11b81523360048201526001600160a01b03948516602482015260448101919091526080606482015292169190602090829081906115f19060848301906112db565b03815f865af15f9181611687575b5061165457503d1561164d573d611615816113c4565b9061162360405192836113a2565b81523d5f602083013e5b805190816116485782633250574960e11b5f5260045260245ffd5b602001fd5b606061162d565b6001600160e01b03191663757a42ff60e11b0161167557505f8080806115a0565b633250574960e11b5f5260045260245ffd5b9091506020813d6020116116c4575b816116a3602093836113a2565b8101031261019f57516001600160e01b03198116810361019f57905f6115ff565b3d9150611696565b5f818152600260205260409020546001600160a01b0316908115610ff0575090565b6006546001600160a01b0316330361170257565b63118cdaa760e01b5f523360045260245ffd5b9061171f826113c4565b61172c60405191826113a2565b828152809261173d601f19916113c4565b0190602036910137565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b82101561186c575b806d04ee2d6d415b85acef8100000000600a921015611851575b662386f26fc1000081101561183d575b6305f5e10081101561182c575b61271081101561181d575b606481101561180f575b1015611804575b600a60216117cc60018501611715565b938401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530480156117ff57600a90916117d1565b505090565b6001909101906117bc565b6064600291049301926117b5565b612710600491049301926117ab565b6305f5e100600891049301926117a0565b662386f26fc1000060109104930192611793565b6d04ee2d6d415b85acef810000000060209104930192611783565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611769565b6001600c61190392603060208097966040519889946f3d913a3930b4ba2fba3cb832911d101160811b828701528051918291018587015e8401906b0111610113b30b63ab2911d160a51b84830152805192839101603c83015e0101607d60f81b838201520301601e198101855201836113a2565b565b9190918051156119fa578051600281018091116119e65760039004600281901b906001600160fe1b038116036119e65761193e90611715565b90602082019080815182019560208701908151925f83525b88811061199857505060039394959650525106806001146119865760021461197c575090565b603d905f19015390565b50603d90815f19820153600119015390565b600360049199969901986001603f8b5182828260121c16870101518453828282600c1c16870101518385015382828260061c1687010151600285015316840101516003820153019497611956565b634e487b7160e01b5f52601160045260245ffd5b509050604051611a0b6020826113a2565b5f81529056fea26469706673582212209e6875f3c3293a667b587265bf2fc338735d93f91783408f56bd07a25b1eec2064736f6c634300081a0033","sourceMap":"1610:25990:139:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;1273:26:24;;1269:95;;3004:6;1610:25990:139;;-1:-1:-1;;;;;;1610:25990:139;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;3052:40:24;-1:-1:-1;;3052:40:24;1610:25990:139;;;;;;;1269:95:24;1322:31;;;-1:-1:-1;1322:31:24;-1:-1:-1;1322:31:24;1610:25990:139;;-1:-1:-1;1322:31:24;1610:25990:139;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;-1:-1:-1;1610:25990:139;;-1:-1:-1;1610:25990:139;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;-1:-1:-1;1610:25990:139;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;-1:-1:-1;1610:25990:139;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;-1:-1:-1;1610:25990:139;;;-1:-1:-1;1610:25990:139;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;-1:-1:-1;;1610:25990:139;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;-1:-1:-1;;1610:25990:139;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;:::o","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146112705750806306fdde03146111b8578063081812fc1461117c578063095ea7b31461109257806318160ddd1461107557806323b872dd1461105e57806342842e0e1461103557806342966c6814610f0a5780636352211e14610eda5780637019230214610e6757806370a0823114610e16578063715018a614610dbb578063854ec60814610d4f5780638da5cb5b14610d275780638f88833814610c9e57806395d89b4114610b96578063a22cb46514610afb578063a7a6be961461088f578063b88d4fde14610805578063c87b56dd14610222578063e985e9c5146101cb578063ef9e745f146101a35763f2fde38b14610119575f80fd5b3461019f57602036600319011261019f576101326112ff565b61013a6116ee565b6001600160a01b0316801561018c57600680546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b631e4fbdf760e01b5f525f60045260245ffd5b5f80fd5b3461019f575f36600319011261019f576007546040516001600160a01b039091168152602090f35b3461019f57604036600319011261019f576101e46112ff565b6101ec611315565b9060018060a01b03165f52600560205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b3461019f57602036600319011261019f576004355f818152600260205260409020546001600160a01b0316156107f357805f52600860205260405f2060405161026a81611372565b60018254926001600160801b038416835267ffffffffffffffff602084019460801c168452015460408201906001600160801b03811682526102b660ff606085019260801c1682611580565b805160038110156107df5761077657506102f16040516102d76040826113a2565b6007815266084cac2e4d2e6d60cb1b602082015294611747565b92604051928360208101957f226e616d65223a2022537761704361737420506f736974696f6e204e46542023875280516020819201604084015e8101601160f91b604082015203604001601e198101855260010161034f90856113a2565b60405161035d60a0826113a2565b6072815260208101917f226465736372697074696f6e223a2022412053776170436173742070726564698352604082017f6374696f6e20706f736974696f6e204e465420726570726573656e74696e67209052606082017f612075736572277320636f6e76696374696f6e206f6e20612073706563696669905271319036b0b935b2ba1037baba31b7b6b2971160711b6080830152516001600160801b03169660409788519061040d8a836113a2565b600982526813585c9ad95d08125160ba1b602083015261042c90611747565b6104359161188f565b938851956104438a886113a2565b601187526020870170507265646963746564204f7574636f6d6560781b81528a5193849160208301996f3d913a3930b4ba2fba3cb832911d101160811b8b52518091603085015e82016c111610113b30b63ab2911d101160991b603082015281516020819301603d83015e0160300161227d60f01b600d82015203600d01601d19810184526002016104d590846113a2565b516001600160801b03168951906104ec8b836113a2565b6016825275436f6e76696374696f6e205374616b6520285765692960501b602083015261051890611747565b6105219161188f565b905167ffffffffffffffff1689519061053a8b836113a2565b601382527204d696e7465642041742054696d657374616d7606c1b602083015261056390611747565b61056c9161188f565b9089519687936020850197805160208192018a5e85019060208201600b60fa1b9052518092602183015e0160200160018101600b60fa1b905281516020819301600283015e0160010160018101600b60fa1b905281516020819301600283015e01600101600181015f905203600101601f19810185526105ec90856113a2565b8651809360208201956e2261747472696275746573223a205b60881b8752518091602f84015e8101602f8101605d60f81b905203602f01601e198101845260010161063790846113a2565b865195869560208701607b60f81b9052518091602188015e85019060218201600b60fa1b9052518092602283015e016021019060018201600b60fa1b9052518092600283015e0160010160018101607d60f81b905203600101601e19810182526001016106a490826113a2565b81516106b16060826113a2565b8281527f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f8184015261070891611905565b9080518092602082017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000905280516020819201603d84015e8101603d81015f905203603d01601f198101835261075e90836113a2565b5180916020825260208201610772916112db565b0390f35b5160038110156107df576001036107b2576102f16040516107986040826113a2565b6007815266084ead8d8d2e6d60cb1b602082015294611747565b6102f16040516107c36040826113a2565b6009815268155b9919599a5b995960ba1b602082015294611747565b634e487b7160e01b5f52602160045260245ffd5b6338077a2b60e01b5f5260045260245ffd5b3461019f57608036600319011261019f5761081e6112ff565b610826611315565b6064359167ffffffffffffffff831161019f573660238401121561019f57826004013591610853836113c4565b9261086160405194856113a2565b808452366024828701011161019f576020815f92602461088d980183880137850101526044359161158c565b005b3461019f57608036600319011261019f576108a86112ff565b604435602435600382101561019f5760075460643593906001600160a01b03163303610aec576001600160a01b03168015610add578315610ace576009549260018401600955835f52600260205260018060a01b0360405f2054168015159081610a9b575b83610a83575b855f52600260205260405f20846bffffffffffffffffffffffff60a01b8254161790558584827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a450610a705760405161096e81611372565b6001600160801b03841681526020810167ffffffffffffffff421681526001600160801b038060016040850194828b16865260608101946109af8887611580565b8a5f526008602052838060405f209351161684198354161782555181549067ffffffffffffffff60801b9060801b169067ffffffffffffffff60801b191617815501935116166001600160801b0319835416178255519360038510156107df57602096610a627e18ea8bf2dcc7c597d58637b6ee0862fe5a2918dd89c2294da47277d40dffef94606094899881549060ff60801b9060801b169060ff60801b191617905560405193845289840190611365565b6040820152a3604051908152f35b6339e3563760e11b5f525f60045260245ffd5b835f52600360205260405f2060018154019055610913565b5f86815260046020526040902080546001600160a01b0319169055805f52600360205260405f205f19815401905561090d565b63eaf0162f60e01b5f5260045ffd5b63d92e233d60e01b5f5260045ffd5b63d5eceddd60e01b5f5260045ffd5b3461019f57604036600319011261019f57610b146112ff565b6024359081151580920361019f576001600160a01b0316908115610b8357335f52600560205260405f20825f5260205260405f2060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b50630b61174360e31b5f5260045260245ffd5b3461019f575f36600319011261019f576040515f6001548060011c90600181168015610c94575b602083108114610c8057828552908115610c5c5750600114610bfe575b61077283610bea818503826113a2565b6040519182916020835260208301906112db565b91905060015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6915f905b808210610c4257509091508101602001610bea610bda565b919260018160209254838588010152019101909291610c2a565b60ff191660208086019190915291151560051b84019091019150610bea9050610bda565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610bbd565b3461019f57602036600319011261019f576004355f818152600260205260409020546001600160a01b03168015610d14576080915f52600860205260405f20906001600160801b03600181845416930154604051938452610d076020850160ff83881c16611365565b1660408301526060820152f35b506338077a2b60e01b5f5260045260245ffd5b3461019f575f36600319011261019f576006546040516001600160a01b039091168152602090f35b3461019f57602036600319011261019f576004355f526008602052608060405f20610db96001825492015467ffffffffffffffff604051936001600160801b0381168552851c1660208401526001600160801b038116604084015260ff6060840191851c16611365565bf35b3461019f575f36600319011261019f57610dd36116ee565b600680546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461019f57602036600319011261019f576001600160a01b03610e376112ff565b168015610e54575f526003602052602060405f2054604051908152f35b6322718ad960e21b5f525f60045260245ffd5b3461019f57602036600319011261019f57610e806112ff565b610e886116ee565b6001600160a01b03168015610add57600780546001600160a01b0319811683179091556001600160a01b03167f67a10b89439c7dbac12e9df3769629552e5badab0be5390a49fd050be14d10e05f80a3005b3461019f57602036600319011261019f576020610ef86004356116cc565b6040516001600160a01b039091168152f35b3461019f57602036600319011261019f57600754600435906001600160a01b03163303610aec575f818152600260205260409020546001600160a01b0316156107f357805f5260086020525f6001604082208281550155807ff5f05b2b75d7eefbad047c6a5f5965c53a8a469bc4181e434d4fd60019ea1f175f80a25f818152600260205260409020546001600160a01b03168015908115611002575b5f83815260026020526040812080546001600160a01b03191690558390827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a450610ff057005b637e27328960e01b5f5260045260245ffd5b5f83815260046020526040902080546001600160a01b0319169055805f52600360205260405f205f198154019055610fa7565b3461019f5761088d6110463661132b565b90604051926110566020856113a2565b5f845261158c565b3461019f5761088d61106f3661132b565b916113e0565b3461019f575f36600319011261019f576020600954604051908152f35b3461019f57604036600319011261019f576110ab6112ff565b6024356110b7816116cc565b33151580611169575b8061113c575b6111295781906001600160a01b0384811691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a45f90815260046020526040902080546001600160a01b0319166001600160a01b03909216919091179055005b63a9fbf51f60e01b5f523360045260245ffd5b506001600160a01b0381165f90815260056020908152604080832033845290915290205460ff16156110c6565b506001600160a01b0381163314156110c0565b3461019f57602036600319011261019f57600435611199816116cc565b505f526004602052602060018060a01b0360405f205416604051908152f35b3461019f575f36600319011261019f576040515f80548060011c90600181168015611266575b602083108114610c8057828552908115610c5c575060011461120a5761077283610bea818503826113a2565b5f8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b80821061124c57509091508101602001610bea610bda565b919260018160209254838588010152019101909291611234565b91607f16916111de565b3461019f57602036600319011261019f576004359063ffffffff60e01b821680920361019f576020916380ac58cd60e01b81149081156112ca575b81156112b9575b5015158152f35b6301ffc9a760e01b149050836112b2565b635b5e139f60e01b811491506112ab565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361019f57565b602435906001600160a01b038216820361019f57565b606090600319011261019f576004356001600160a01b038116810361019f57906024356001600160a01b038116810361019f579060443590565b9060038210156107df5752565b6080810190811067ffffffffffffffff82111761138e57604052565b634e487b7160e01b5f52604160045260245ffd5b90601f8019910116810190811067ffffffffffffffff82111761138e57604052565b67ffffffffffffffff811161138e57601f01601f191660200190565b6001600160a01b039091169190821561156d575f828152600260205260409020546001600160a01b0316928290331515806114d8575b50846114a5575b805f52600360205260405f2060018154019055815f52600260205260405f20816bffffffffffffffffffffffff60a01b825416179055847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a46001600160a01b031680830361148d57505050565b6364283d7b60e01b5f5260045260245260445260645ffd5b5f82815260046020526040902080546001600160a01b0319169055845f52600360205260405f205f19815401905561141d565b9091508061151c575b156114ee5782905f611416565b828461150657637e27328960e01b5f5260045260245ffd5b63177e802f60e01b5f523360045260245260445ffd5b50338414801561154b575b806114e157505f838152600460205260409020546001600160a01b031633146114e1565b505f84815260056020908152604080832033845290915290205460ff16611527565b633250574960e11b5f525f60045260245ffd5b60038210156107df5752565b92916115998183866113e0565b813b6115a6575b50505050565b604051630a85bd0160e11b81523360048201526001600160a01b03948516602482015260448101919091526080606482015292169190602090829081906115f19060848301906112db565b03815f865af15f9181611687575b5061165457503d1561164d573d611615816113c4565b9061162360405192836113a2565b81523d5f602083013e5b805190816116485782633250574960e11b5f5260045260245ffd5b602001fd5b606061162d565b6001600160e01b03191663757a42ff60e11b0161167557505f8080806115a0565b633250574960e11b5f5260045260245ffd5b9091506020813d6020116116c4575b816116a3602093836113a2565b8101031261019f57516001600160e01b03198116810361019f57905f6115ff565b3d9150611696565b5f818152600260205260409020546001600160a01b0316908115610ff0575090565b6006546001600160a01b0316330361170257565b63118cdaa760e01b5f523360045260245ffd5b9061171f826113c4565b61172c60405191826113a2565b828152809261173d601f19916113c4565b0190602036910137565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b82101561186c575b806d04ee2d6d415b85acef8100000000600a921015611851575b662386f26fc1000081101561183d575b6305f5e10081101561182c575b61271081101561181d575b606481101561180f575b1015611804575b600a60216117cc60018501611715565b938401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530480156117ff57600a90916117d1565b505090565b6001909101906117bc565b6064600291049301926117b5565b612710600491049301926117ab565b6305f5e100600891049301926117a0565b662386f26fc1000060109104930192611793565b6d04ee2d6d415b85acef810000000060209104930192611783565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611769565b6001600c61190392603060208097966040519889946f3d913a3930b4ba2fba3cb832911d101160811b828701528051918291018587015e8401906b0111610113b30b63ab2911d160a51b84830152805192839101603c83015e0101607d60f81b838201520301601e198101855201836113a2565b565b9190918051156119fa578051600281018091116119e65760039004600281901b906001600160fe1b038116036119e65761193e90611715565b90602082019080815182019560208701908151925f83525b88811061199857505060039394959650525106806001146119865760021461197c575090565b603d905f19015390565b50603d90815f19820153600119015390565b600360049199969901986001603f8b5182828260121c16870101518453828282600c1c16870101518385015382828260061c1687010151600285015316840101516003820153019497611956565b634e487b7160e01b5f52601160045260245ffd5b509050604051611a0b6020826113a2565b5f81529056fea26469706673582212209e6875f3c3293a667b587265bf2fc338735d93f91783408f56bd07a25b1eec2064736f6c634300081a0033","sourceMap":"1610:25990:139:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;:::i;:::-;1500:62:24;;:::i;:::-;-1:-1:-1;;;;;1610:25990:139;2627:22:24;;2623:91;;3004:6;1610:25990:139;;-1:-1:-1;;;;;;1610:25990:139;;;;;;;-1:-1:-1;;;;;1610:25990:139;3052:40:24;-1:-1:-1;;3052:40:24;1610:25990:139;2623:91:24;2672:31;;;1610:25990:139;2672:31:24;1610:25990:139;;;;;2672:31:24;1610:25990:139;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;2337:39;1610:25990;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;4038:18:27;1610:25990:139;;;;;4038:35:27;1610:25990:139;;;;;;-1:-1:-1;1610:25990:139;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;;;;;5824:7:27;1610:25990:139;;;;;;-1:-1:-1;;;;;1610:25990:139;22585:32;22581:71;;1610:25990;;;22777:23;1610:25990;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;22995:47;;1610:25990;23604:26;1610:25990;;;;;;:::i;:::-;;;;-1:-1:-1;;;1610:25990:139;;;;22991:334;23604:26;:::i;:::-;1610:25990;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1610:25990:139;;;;27540:24;;;:::i;:::-;27384:207;;;:::i;:::-;1610:25990;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5824:7:27;1610:25990:139;;;;;:::i;:::-;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1610:25990:139;;;;27540:24;;;:::i;:::-;27384:207;;;:::i;:::-;1610:25990;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1610:25990:139;;;;27540:24;;;:::i;:::-;27384:207;;;:::i;:::-;1610:25990;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;5824:7:27;1610:25990:139;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;5824:7:27;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;5824:7:27;1610:25990:139;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;753:27:32;;;:::i;:::-;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;22991:334;1610:25990;;;;;;;;23101:47;1610:25990;;23604:26;1610:25990;;;;;;:::i;:::-;;;;-1:-1:-1;;;1610:25990:139;;;;23097:228;23604:26;:::i;23097:228::-;23604:26;1610:25990;;;;;;:::i;:::-;;;;-1:-1:-1;;;1610:25990:139;;;;23097:228;23604:26;:::i;1610:25990::-;;;;;;;;;;;;22581:71;18325:26;;;1610:25990;22626:26;1610:25990;;;;22626:26;1610:25990;;;;;;-1:-1:-1;;1610:25990:139;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;:::i;:::-;;;;;;;;;;;13720:24;1610:25990;;;;;-1:-1:-1;;;;;1610:25990:139;13706:10;:38;13702:98;;-1:-1:-1;;;;;1610:25990:139;15691:17;;15687:43;;15744:21;;15740:58;;16007:14;1610:25990;;;;;16007:14;1610:25990;;;;5824:7:27;1610:25990:139;;;;;;;;;;;;9184:18:27;;;9180:256;;;;1610:25990:139;9450:16:27;9446:107;;1610:25990:139;;;;5824:7:27;1610:25990:139;;;;;;;;;;;;;;;9600:27:27;;;;1610:25990:139;9600:27:27;;10203:96;;;1610:25990:139;;;;;:::i;:::-;-1:-1:-1;;;;;1610:25990:139;;;;;16295:206;;1610:25990;16474:15;1610:25990;;;-1:-1:-1;;;;;16295:206:139;1610:25990;;16295:206;;1610:25990;;;;;;;16295:206;;;;;;;:::i;:::-;1610:25990;;;16260:23;1610:25990;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;;;;;;16579:70;1610:25990;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;16579:70;1610:25990;;;;;;10203:96:27;10257:31;;;1610:25990:139;10257:31:27;1610:25990:139;;;;;10257:31:27;9446:107;1610:25990:139;;;;;;;;;;;;;;;9446:107:27;;9180:256;1610:25990:139;;;;15420:15:27;1610:25990:139;;;;;;;-1:-1:-1;;;;;;1610:25990:139;;;;;;;;;;;;;;;;;;;9180:256:27;;15740:58:139;15774:24;;;1610:25990;15774:24;1610:25990;;15774:24;15687:43;12555:13;;;1610:25990;15717:13;1610:25990;;15717:13;13702:98;13767:22;;;1610:25990;13767:22;1610:25990;;13767:22;1610:25990;;;;;;-1:-1:-1;;1610:25990:139;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;15772:22:27;;15768:91;;735:10:33;1610:25990:139;;15868:18:27;1610:25990:139;;;;;;-1:-1:-1;1610:25990:139;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;15929:41:27;1610:25990:139;735:10:33;15929:41:27;;1610:25990:139;15768:91:27;15817:31;;;;1610:25990:139;15817:31:27;1610:25990:139;;;;15817:31:27;1610:25990:139;;;;;;-1:-1:-1;;1610:25990:139;;;;;;;2596:7:27;1610:25990:139;;2596:7:27;1610:25990:139;;2596:7:27;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;2596:7:27;1610:25990:139;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;-1:-1:-1;1610:25990:139;;;;;;;;;;2596:7:27;1610:25990:139;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;;;;;5824:7:27;1610:25990:139;;;;;;-1:-1:-1;;;;;1610:25990:139;20508:24;;20504:63;;1610:25990;;;;20697:23;1610:25990;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;20951:12;;1610:25990;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;20504:63;18325:26;;;;1610:25990;20541:26;1610:25990;;;;20541:26;1610:25990;;;;;;-1:-1:-1;;1610:25990:139;;;;1710:6:24;1610:25990:139;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;;;4438:69;1610:25990;;;;;;;;;;4438:69;;1610:25990;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;1610:25990:139;;;;1500:62:24;;:::i;:::-;3004:6;1610:25990:139;;-1:-1:-1;;;;;;1610:25990:139;;;;;;;-1:-1:-1;;;;;1610:25990:139;3052:40:24;1610:25990:139;;3052:40:24;1610:25990:139;;;;;;;-1:-1:-1;;1610:25990:139;;;;-1:-1:-1;;;;;1610:25990:139;;:::i;:::-;;2005:19:27;;2001:87;;1610:25990:139;;2104:9:27;1610:25990:139;;;;;;;;;;;;;2001:87:27;2047:30;;;1610:25990:139;2047:30:27;1610:25990:139;;;;;2047:30:27;1610:25990:139;;;;;;-1:-1:-1;;1610:25990:139;;;;;;:::i;:::-;1500:62:24;;:::i;:::-;-1:-1:-1;;;;;1610:25990:139;12504:42;;12500:68;;12647:24;1610:25990;;-1:-1:-1;;;;;;1610:25990:139;;;;;;;-1:-1:-1;;;;;1610:25990:139;12845:69;-1:-1:-1;;12845:69:139;1610:25990;;;;;;;-1:-1:-1;;1610:25990:139;;;;;2273:22:27;1610:25990:139;;2273:22:27;:::i;:::-;1610:25990:139;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;13720:24;1610:25990;;;;-1:-1:-1;;;;;1610:25990:139;13706:10;:38;13702:98;;1610:25990;;;;5824:7:27;1610:25990:139;;;;;;-1:-1:-1;;;;;1610:25990:139;18297:19;18293:58;;1610:25990;;;18439:23;1610:25990;;;;;;;;;;;;18563:27;;1610:25990;18563:27;;1610:25990;;;;5824:7:27;1610:25990:139;;;;;;-1:-1:-1;;;;;1610:25990:139;9184:18:27;;;;;9180:256;;1610:25990:139;;;;;5824:7:27;1610:25990:139;;;;;;;-1:-1:-1;;;;;;1610:25990:139;;;;;9600:27:27;;1610:25990:139;;9600:27:27;11635:96;;;1610:25990:139;11635:96:27;11689:31;;;1610:25990:139;11689:31:27;1610:25990:139;;;;11689:31:27;9180:256;1610:25990:139;;;;15420:15:27;1610:25990:139;;;;;;;-1:-1:-1;;;;;;1610:25990:139;;;;;;9391:9:27;1610:25990:139;;;;;;;;;;;;9180:256:27;;1610:25990:139;;;;4872:39:27;1610:25990:139;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;4872:39:27;:::i;1610:25990:139:-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;1610:25990:139;;;;;19021:12;1610:25990;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;:::i;:::-;;;15017:22:27;;;:::i;:::-;735:10:33;15167:18:27;;:35;;;1610:25990:139;15167:69:27;;;1610:25990:139;15163:142:27;;1610:25990:139;;-1:-1:-1;;;;;1610:25990:139;;;;;15357:28:27;1610:25990:139;;15357:28:27;1610:25990:139;;;;;;;;;;;;-1:-1:-1;;;;;;1610:25990:139;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;15163:142:27;15263:27;;;1610:25990:139;15263:27:27;735:10:33;1610:25990:139;;;;15263:27:27;15167:69;-1:-1:-1;;;;;;1610:25990:139;;;;;;4038:18:27;1610:25990:139;;;;;;;;735:10:33;1610:25990:139;;;;;;;;;;15206:30:27;15167:69;;:35;-1:-1:-1;;;;;;1610:25990:139;;735:10:33;15189:13:27;;15167:35;;1610:25990:139;;;;;;-1:-1:-1;;1610:25990:139;;;;;;3582:22:27;;;:::i;:::-;;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;-1:-1:-1;1610:25990:139;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1610:25990:139;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1697:40:27;;;:104;;;;1610:25990:139;1697:156:27;;;;1610:25990:139;;;;;;;1697:156:27;-1:-1:-1;;;862:40:38;;-1:-1:-1;1697:156:27;;;:104;-1:-1:-1;;;1753:48:27;;;-1:-1:-1;1697:104:27;;1610:25990:139;;;;;;;;;;;;;;;;;-1:-1:-1;1610:25990:139;;;;;;;;-1:-1:-1;;1610:25990:139;;;;:::o;:::-;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1610:25990:139;;;;;-1:-1:-1;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1610:25990:139;;;;:::o;4142:578:27:-;-1:-1:-1;;;;;1610:25990:139;;;;4142:578:27;4236:16;;4232:87;;4250:1;1610:25990:139;;;5824:7:27;1610:25990:139;;;;;;-1:-1:-1;;;;;1610:25990:139;;;;735:10:33;9058:18:27;;;9054:86;;4142:578;9184:18;;9180:256;;4142:578;1610:25990:139;4250:1:27;1610:25990:139;9510:9:27;1610:25990:139;;;4250:1:27;1610:25990:139;9450:16:27;1610:25990:139;;;;;;4250:1:27;1610:25990:139;5824:7:27;1610:25990:139;;;4250:1:27;1610:25990:139;;;;;;;;;;;9600:27:27;;4250:1;9600:27;;-1:-1:-1;;;;;1610:25990:139;4609:21:27;;;4605:109;;4142:578;;;:::o;4605:109::-;4653:50;;;4250:1;4653:50;;1610:25990:139;;;;;;4250:1:27;4653:50;9180:256;1610:25990:139;;;;15420:15:27;1610:25990:139;;;;;;;-1:-1:-1;;;;;;1610:25990:139;;;;4250:1:27;1610:25990:139;9391:9:27;1610:25990:139;;;4250:1:27;1610:25990:139;;;;;;;;9180:256:27;;9054:86;6539:127;;-1:-1:-1;6539:127:27;;;9054:86;7216:39;7212:255;;9054:86;;;;;7212:255;7275:19;;1610:25990:139;;11689:31:27;;;4250:1;7321:31;;1610:25990:139;;4250:1:27;7321:31;7271:186;7398:44;;;4250:1;7398:44;735:10:33;7398:44:27;1610:25990:139;;;;4250:1:27;7398:44;6539:127;735:10:33;;6577:16:27;;:52;;;;6539:127;6577:88;6539:127;6577:88;-1:-1:-1;4250:1:27;1610:25990:139;;;6059:15:27;1610:25990:139;;;;;;-1:-1:-1;;;;;1610:25990:139;735:10:33;6633:32:27;6539:127;;6577:52;-1:-1:-1;4250:1:27;1610:25990:139;;;4038:18:27;1610:25990:139;;;;;;;;735:10:33;1610:25990:139;;;;;;;;;;6577:52:27;;4232:87;4275:33;;;4250:1;4275:33;4250:1;4275:33;1610:25990:139;;4250:1:27;4275:33;1610:25990:139;;;;;;;;:::o;4984:233:27:-;;;5120:7;;;;;:::i;:::-;1173:14:31;;1169:742;;4984:233:27;;;;;:::o;1169:742:31:-;1610:25990:139;;-1:-1:-1;;;1211:67:31;;735:10:33;1211:67:31;;;1610:25990:139;-1:-1:-1;;;;;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:31;;1190:1;1211:67;;;1190:1;;1211:67;;;1169:742;-1:-1:-1;1207:694:31;;-1:-1:-1;1610:25990:139;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1190:1:31;1610:25990:139;;;;;;;;1568:18:31;;;4275:33:27;;;;1190:1:31;1672:39;1211:67;1610:25990:139;;1190:1:31;1672:39;1564:323;1610:25990:139;1758:111:31;;1610:25990:139;;;;1207:694:31;-1:-1:-1;;;;;;1610:25990:139;-1:-1:-1;;;1325:51:31;1321:182;;1207:694;1169:742;;;;;;1321:182;4275:33:27;;;1190:1:31;1445:39;1211:67;1610:25990:139;;1190:1:31;1445:39;1211:67;;;;1610:25990:139;1211:67:31;;1610:25990:139;1211:67:31;;;;;;1610:25990:139;1211:67:31;;;:::i;:::-;;;1610:25990:139;;;;;-1:-1:-1;;;;;;1610:25990:139;;;;;;1211:67:31;;;;;;;-1:-1:-1;1211:67:31;;16212:241:27;-1:-1:-1;1610:25990:139;;;5824:7:27;1610:25990:139;;;;;;-1:-1:-1;;;;;1610:25990:139;;16341:19:27;;16337:88;;16434:12;16212:241;:::o;1796:162:24:-;1710:6;1610:25990:139;-1:-1:-1;;;;;1610:25990:139;735:10:33;1855:23:24;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:24;735:10:33;1901:40:24;1610:25990:139;;-1:-1:-1;1901:40:24;1610:25990:139;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;1308:632:37:-;1430:17;-1:-1:-1;29282:17:40;-1:-1:-1;;;29282:17:40;;;29278:103;;1308:632:37;29398:17:40;29407:8;29978:7;29398:17;;;29394:103;;1308:632:37;29523:8:40;29514:17;;;29510:103;;1308:632:37;29639:7:40;29630:16;;;29626:100;;1308:632:37;29752:7:40;29743:16;;;29739:100;;1308:632:37;29865:7:40;29856:16;;;29852:100;;1308:632:37;29969:16:40;;29965:66;;1308:632:37;29978:7:40;1545:92:37;1488:18;1450:1;1610:25990:139;;1488:18:37;:::i;:::-;1520:11;1545:92;;;1650:247;-1:-1:-1;;1610:25990:139;;-1:-1:-1;;;1704:111:37;;;;1610:25990:139;1704:111:37;1610:25990:139;1865:10:37;;1861:21;;29978:7:40;1650:247:37;;;;1861:21;1877:5;;1308:632;:::o;29965:66:40:-;30015:1;1610:25990:139;;;;29965:66:40;;29852:100;29865:7;29936:1;1610:25990:139;;;;29852:100:40;;;29739;29752:7;29823:1;1610:25990:139;;;;29739:100:40;;;29626;29639:7;29710:1;1610:25990:139;;;;29626:100:40;;;29510:103;29523:8;29596:2;1610:25990:139;;;;29510:103:40;;;29394;29407:8;29480:2;1610:25990:139;;;;29394:103:40;;;29278;-1:-1:-1;29364:2:40;;-1:-1:-1;;;;1610:25990:139;;29278:103:40;;1610:25990:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1610:25990:139;;;;;;;;;;;;;;;:::i;:::-;:::o;1186:4022:32:-;;;;1610:25990:139;;1515:16:32;1511:31;;1610:25990:139;;2537:1:32;1610:25990:139;;;;;;;2542:1:32;1610:25990:139;;2537:1:32;1610:25990:139;;;;-1:-1:-1;;;;;1610:25990:139;;;;;2606:24:32;;;:::i;:::-;2641:2537;;;;;;;;;;;;;;;;;;1530:1;2641:2537;;;;;;;;;;2542:1;2641:2537;;;;;;;;2542:1;2641:2537;2542:1;;;2641:2537;;;;5188:13;1186:4022;:::o;2641:2537::-;;;-1:-1:-1;;2641:2537:32;;1186:4022;:::o;2641:2537::-;-1:-1:-1;2641:2537:32;;;-1:-1:-1;;2641:2537:32;;;-1:-1:-1;;2641:2537:32;;1186:4022;:::o;2641:2537::-;2542:1;2517;2641:2537;;;;;;1610:25990:139;2641:2537:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2537:1;2641:2537;;;;;;;;2542:1;2641:2537;;;;;;;;1610:25990:139;;;;1530:1:32;1610:25990:139;;2517:1:32;1610:25990:139;;1530:1:32;1610:25990:139;1511:31:32;1610:25990:139;;;;;;;;;:::i;:::-;1530:1:32;1610:25990:139;;1533:9:32;:::o","linkReferences":{}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","getApproved(uint256)":"081812fc","getPredictionDetails(uint256)":"8f888338","isApprovedForAll(address,address)":"e985e9c5","mint(address,uint256,uint8,uint256)":"a7a6be96","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","predictionManagerAddress()":"ef9e745f","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setPredictionManagerAddress(address)":"70192302","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenPredictionMetadata(uint256)":"854ec608","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConvictionStake\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NonExistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPredictionManager\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"PositionNFTBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"convictionStake\",\"type\":\"uint256\"}],\"name\":\"PositionNFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PredictionManagerAddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getPredictionDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"convictionStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"_outcome\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_convictionStake\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predictionManagerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPredictionManagerAddress\",\"type\":\"address\"}],\"name\":\"setPredictionManagerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenPredictionMetadata\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"marketId\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"mintedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"convictionStake\",\"type\":\"uint128\"},{\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Simone Di Cola\",\"custom:security-contact\":\"security@swapcast.xyz\",\"details\":\"This contract handles the lifecycle of prediction NFTs: minting, burning, and metadata provision.      Minting and burning operations are restricted to an authorized PredictionManager contract, set by the owner.      Token URIs, containing JSON metadata and attributes, are generated dynamically and on-chain.      The contract has the following key features:      1. ERC721-compliant NFT representation of prediction positions      2. Secure minting and burning restricted to the PredictionManager      3. Compact storage of prediction metadata using optimized data types      4. On-chain generation of JSON metadata with Base64 encoding      5. Comprehensive error handling with descriptive error messages      It inherits from OpenZeppelin's ERC721 and Ownable contracts and implements the ISwapCastNFT interface.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"InvalidConvictionStake()\":[{\"details\":\"This error is used in the mint function to ensure that all predictions have a non-zero stake,      as zero-stake predictions would not make sense in the context of the prediction market.\"}],\"NonExistentToken(uint256)\":[{\"details\":\"This error is used in the tokenURI and burn functions to validate that the requested token exists.      It includes the token ID in the error to help with debugging.\",\"params\":{\"tokenId\":\"The ID of the non-existent token that was requested.\"}}],\"NotPredictionManager()\":[{\"details\":\"This error is used to protect sensitive functions like mint and burn that should only be called by the      designated PredictionManager contract. This ensures that NFTs can only be created or destroyed through      the proper protocol flow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ZeroAddress()\":[{\"details\":\"This error is used in the constructor to validate the initial owner, and in the mint function to      validate the recipient address. Using the zero address in these contexts would result in tokens      that cannot be accessed or transferred.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"PositionNFTBurned(uint256)\":{\"details\":\"This event signals that a prediction position has been permanently removed from circulation.      It is typically emitted when a user claims rewards for a correct prediction or when a      prediction is otherwise resolved and no longer needed.      The event only includes the tokenId as that's sufficient to look up historical details      about the prediction if needed. The tokenId is indexed to make it efficiently searchable.      The event is emitted in the burn function before the actual _burn call, following the      Checks-Effects-Interactions pattern for security.\",\"params\":{\"tokenId\":\"The unique ID of the burned NFT.\"}},\"PositionNFTMinted(address,uint256,uint256,uint8,uint256)\":{\"details\":\"This event captures all essential details about a newly created prediction position.      It provides a complete record of the prediction, including who made it, which market      it's for, the predicted outcome, and the conviction stake amount.      The event is indexed on both owner and tokenId to allow efficient filtering by either      the user who made the prediction or the specific NFT ID. This supports use cases like:      - Finding all predictions made by a specific user      - Looking up the creation details of a specific NFT      The event is emitted at the end of the mint function, after all state changes are complete.\",\"params\":{\"convictionStake\":\"The amount of conviction (stake) declared for this prediction.\",\"marketId\":\"The market ID for which the prediction is made.\",\"outcome\":\"The predicted outcome (Bearish or Bullish).\",\"owner\":\"The address receiving the minted NFT (the predictor).\",\"tokenId\":\"The unique identifier of the minted NFT.\"}},\"PredictionManagerAddressSet(address,address)\":{\"details\":\"This event provides transparency for address changes, allowing off-chain services      to track when permissions for minting and burning NFTs are transferred to a new contract.      It includes both the old and new addresses for complete audit trails.      The event is emitted in the setPredictionManagerAddress function and is indexed      to make it efficiently searchable in event logs.\",\"params\":{\"newAddress\":\"The new, updated address of the PredictionManager.\",\"oldAddress\":\"The previous address of the PredictionManager (address(0) if not previously set).\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"custom:emits\":\"PositionNFTBurned When the NFT is successfully burned.\",\"custom:reverts\":\"NonExistentToken If the token does not exist.NotPredictionManager If called by any address other than the authorized PredictionManager.\",\"details\":\"This function permanently removes an NFT from circulation, following the Checks-Effects-Interactions (CEI) pattern      to prevent reentrancy vulnerabilities. The function performs the following operations in order:      1. Checks: Verifies the token exists by checking its owner      2. Effects: Deletes the associated prediction metadata from storage      3. Events: Emits the PositionNFTBurned event      4. Interactions: Calls the _burn function which modifies state and may trigger external calls      This sequence is critical for security as it ensures all state changes are complete before any external      interactions occur. The function also optimizes gas usage by checking token existence via _ownerOf      rather than using _exists, as this provides the owner address which would be needed anyway.\",\"params\":{\"_tokenId\":\"The ID of the NFT to burn.\"}},\"constructor\":{\"custom:reverts\":\"ZeroAddress If the initialOwner is the zero address.\",\"details\":\"Sets up the ERC721 token with a name and symbol, and establishes the initial owner who will have      administrative privileges (such as setting the PredictionManager address). The owner address is validated      to ensure it's not the zero address, which would lock the contract's administrative functions permanently.      The constructor initializes the following:      1. The ERC721 name and symbol for the NFT collection      2. The Ownable contract with the initial owner address      3. Implicitly sets _nextTokenId to 0 (default value)\",\"params\":{\"_initialOwner\":\"The initial owner of the contract, who can set the PredictionManager address.\",\"_name\":\"The name of the ERC721 token collection (e.g., \\\"SwapCast Prediction NFT\\\").\",\"_symbol\":\"The symbol of the ERC721 token collection (e.g., \\\"SCNFT\\\").\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getPredictionDetails(uint256)\":{\"custom:reverts\":\"NonExistentToken If the token does not exist.\",\"details\":\"This function provides a convenient way to access all relevant prediction data for a specific NFT      in a single call. It performs the following operations:      1. Validates that the token exists      2. Retrieves the prediction metadata from storage      3. Converts compact storage types (uint128) to full-size return types (uint256)      4. Returns both the metadata and the current owner in a single operation      This function is particularly useful for off-chain services that need to display prediction      information, as well as for other contracts that need to verify prediction details.\",\"params\":{\"_tokenId\":\"The ID of the NFT to query.\"},\"returns\":{\"convictionStake\":\"The conviction stake amount.\",\"marketId\":\"The market ID of the prediction.\",\"outcome\":\"The predicted outcome (Bullish or Bearish).\",\"owner_\":\"The current owner of the NFT.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address,uint256,uint8,uint256)\":{\"custom:emits\":\"PositionNFTMinted When the NFT is successfully minted.\",\"custom:reverts\":\"ZeroAddress If the recipient address is the zero address.InvalidConvictionStake If the conviction stake is zero.NotPredictionManager If called by any address other than the authorized PredictionManager.\",\"details\":\"This function creates a new NFT that represents a user's prediction on a specific market outcome.      It includes several key operations:      1. Input validation to ensure valid recipient and stake amount      2. Token ID generation using an incrementing counter      3. ERC721 token minting to the specified owner      4. Storage of prediction metadata with optimized data types      5. Event emission for off-chain tracking      The function uses unchecked arithmetic for the token ID increment since overflow is practically      impossible (would require 2^256 mints). It also performs type conversions to use compact storage      types (uint128, uint64) for gas efficiency while still supporting a wide range of values.\",\"params\":{\"_convictionStake\":\"The conviction stake amount for this prediction.\",\"_marketId\":\"The market ID for which the prediction is made.\",\"_outcome\":\"The predicted outcome (Bullish or Bearish).\",\"_to\":\"The address that will own the newly minted NFT.\"},\"returns\":{\"_0\":\"tokenId The ID of the newly minted NFT.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setPredictionManagerAddress(address)\":{\"custom:emits\":\"PredictionManagerAddressSet With the old and new addresses.\",\"custom:reverts\":\"ZeroAddress If the new address is the zero address.\",\"details\":\"This function is critical for the security of the contract as it determines which address has      permission to create and destroy NFTs. It includes the following security features:      1. Owner-only access control via the onlyOwner modifier      2. Validation to prevent setting the zero address      3. Event emission for transparency and off-chain tracking      The function caches the old address before updating to ensure accurate event emission.      This function would typically be called once after deployment to set the initial PredictionManager,      and potentially again if the PredictionManager contract is upgraded.\",\"params\":{\"_newPredictionManagerAddress\":\"The new address for the PredictionManager contract.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"custom:reverts\":\"NonExistentToken If the token does not exist.\",\"details\":\"This function generates a complete on-chain JSON metadata structure for the NFT, which is then      Base64 encoded and returned as a data URI. The implementation follows these steps:      1. Validates token existence      2. Retrieves prediction metadata from storage      3. Converts the outcome enum to a human-readable string      4. Constructs a structured JSON object with name, description, and attributes      5. Base64 encodes the JSON and returns it as a data URI      The metadata includes important prediction details as attributes:      - Market ID: The identifier of the prediction market      - Predicted Outcome: Human-readable outcome (Bullish/Bearish)      - Conviction Stake: The amount staked on this prediction      - Minted At Timestamp: When the prediction was made      This on-chain metadata approach ensures that NFT data remains accessible even if off-chain      services are unavailable, enhancing the durability and decentralization of the protocol.\",\"params\":{\"_tokenId\":\"The ID of the token to get the URI for.\"},\"returns\":{\"_0\":\"A string URI containing Base64 encoded JSON metadata.\"}},\"totalSupply()\":{\"details\":\"This function returns the current value of the token ID counter.\",\"returns\":{\"_0\":\"The total supply of tokens minted (including burned tokens).\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"_nextTokenId\":{\"details\":\"This counter starts at 0 and is incremented after each mint operation.      It is private to control ID assignment strictly through the `mint()` function.      The counter uses unchecked increment in the mint function for gas efficiency,      which is safe because the counter would need to overflow 2^256 times before      causing any issues (practically impossible).      Token IDs are assigned sequentially, making it easy to track the total number      of NFTs ever minted (even if some have been burned) by checking this value.\"},\"predictionManagerAddress\":{\"details\":\"This address is the only one that can call the restricted functions `mint()` and `burn()`.      It is settable only by the contract owner via the `setPredictionManagerAddress` function.      This security control ensures that NFTs can only be created or destroyed through the      proper protocol flow, preventing unauthorized minting or burning.      The address is initially set to address(0) and must be set to a valid address before      the contract can be used for minting or burning NFTs.\"},\"tokenPredictionMetadata\":{\"details\":\"This mapping stores all the critical information about each prediction NFT.      It is publicly accessible, allowing anyone to query the metadata for a given token ID      using the auto-generated getter `tokenPredictionMetadata(uint256 tokenId)`.      The mapping is updated in the following functions:      - `mint`: Adds a new entry with the prediction details      - `burn`: Deletes the entry to free up storage and get a gas refund      The metadata is used for both on-chain operations (e.g., claim validation) and      for generating the token URI with human-readable attributes.\"}},\"title\":\"SwapCastNFT\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidConvictionStake()\":[{\"notice\":\"Thrown when a mint operation is attempted with a conviction stake of zero.\"}],\"NonExistentToken(uint256)\":[{\"notice\":\"Thrown when a token URI is requested for a token that does not exist.\"}],\"NotPredictionManager()\":[{\"notice\":\"Thrown when a restricted function is called by an address other than the authorized PredictionManager.\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when a function is called with the zero address where a non-zero address is required.\"}]},\"events\":{\"PositionNFTBurned(uint256)\":{\"notice\":\"Emitted when a prediction NFT (position) is burned, typically after a claim or resolution.\"},\"PositionNFTMinted(address,uint256,uint256,uint8,uint256)\":{\"notice\":\"Emitted when a new prediction NFT (position) is minted.\"},\"PredictionManagerAddressSet(address,address)\":{\"notice\":\"Emitted when the PredictionManager address is successfully updated.\"}},\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns (destroys) an existing NFT, typically after its prediction has been resolved and claimed.\"},\"constructor\":{\"notice\":\"Contract constructor that initializes the SwapCastNFT with an owner and token metadata.\"},\"getPredictionDetails(uint256)\":{\"notice\":\"Retrieves the core prediction details associated with a given NFT.\"},\"mint(address,uint256,uint8,uint256)\":{\"notice\":\"Mints a new NFT representing a user's prediction position.\"},\"predictionManagerAddress()\":{\"notice\":\"The address of the PredictionManager contract authorized to mint and burn these NFTs.\"},\"setPredictionManagerAddress(address)\":{\"notice\":\"Sets or updates the address of the PredictionManager contract authorized to mint/burn NFTs.\"},\"tokenPredictionMetadata(uint256)\":{\"notice\":\"Mapping from token ID to its prediction metadata.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the Uniform Resource Identifier (URI) for a given token ID.\"},\"totalSupply()\":{\"notice\":\"Returns the total number of tokens that have been minted.\"}},\"notice\":\"Represents a user's prediction position as an ERC721 Non-Fungible Token.         Each NFT stores metadata about the prediction, such as market ID, outcome, and conviction stake.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapCastNFT.sol\":\"SwapCastNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/SwapCastNFT.sol\":{\"keccak256\":\"0x9cc394297d7d783bc856d46fc00280e3bcc4dbd6644b113c0f215ebe1a6dc288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b02ab296f784d7ccbade20fe28c2f250c9ca2d387ef0f6527673a9e5d3f43f\",\"dweb:/ipfs/Qmc4jk9d8f53FQFTTcwuRYm9S7yiSMRwX5XFSYGHvEr1h8\"]},\"src/interfaces/ISwapCastNFT.sol\":{\"keccak256\":\"0x0d1a38fbbff8f4cd9f50844636b95a0b06d1bbae888eb1c4b23d49be92797ece\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fea12040f74e35df2f1153d297df6f11409599339af8d4f00f5afd7e717e6eaa\",\"dweb:/ipfs/QmXuSFGdKfqsr8XLPZfaewfDJxdoT8XKqKfKqwkFjB8cKL\"]},\"src/types/PredictionTypes.sol\":{\"keccak256\":\"0xa158d4fd16826cd55c7beac796e00d570bc7e779ba54134f88eafaf3adcad869\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70699e677b83dbd0c34ab544feedd13a7f79630f3d1a496a0c57ae537af6e43\",\"dweb:/ipfs/QmYDFn5au9Htjb289VBnJ34QWkEEvoz2fXj57kUsTcVGWt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_initialOwner","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"ERC721IncorrectOwner"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"type":"error","name":"ERC721InsufficientApproval"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"type":"error","name":"ERC721InvalidApprover"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"type":"error","name":"ERC721InvalidOperator"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"ERC721InvalidOwner"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"type":"error","name":"ERC721InvalidReceiver"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"ERC721InvalidSender"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"type":"error","name":"ERC721NonexistentToken"},{"inputs":[],"type":"error","name":"InvalidConvictionStake"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"type":"error","name":"NonExistentToken"},{"inputs":[],"type":"error","name":"NotPredictionManager"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"approved","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"operator","type":"address","indexed":true},{"internalType":"bool","name":"approved","type":"bool","indexed":false}],"type":"event","name":"ApprovalForAll","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"PositionNFTBurned","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true},{"internalType":"uint256","name":"marketId","type":"uint256","indexed":false},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8","indexed":false},{"internalType":"uint256","name":"convictionStake","type":"uint256","indexed":false}],"type":"event","name":"PositionNFTMinted","anonymous":false},{"inputs":[{"internalType":"address","name":"oldAddress","type":"address","indexed":true},{"internalType":"address","name":"newAddress","type":"address","indexed":true}],"type":"event","name":"PredictionManagerAddressSet","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":true}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getPredictionDetails","outputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8"},{"internalType":"uint256","name":"convictionStake","type":"uint256"},{"internalType":"address","name":"owner_","type":"address"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_marketId","type":"uint256"},{"internalType":"enum PredictionTypes.Outcome","name":"_outcome","type":"uint8"},{"internalType":"uint256","name":"_convictionStake","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"predictionManagerAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForAll"},{"inputs":[{"internalType":"address","name":"_newPredictionManagerAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setPredictionManagerAddress"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenPredictionMetadata","outputs":[{"internalType":"uint128","name":"marketId","type":"uint128"},{"internalType":"uint64","name":"mintedAt","type":"uint64"},{"internalType":"uint128","name":"convictionStake","type":"uint128"},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"burn(uint256)":{"custom:emits":"PositionNFTBurned When the NFT is successfully burned.","custom:reverts":"NonExistentToken If the token does not exist.NotPredictionManager If called by any address other than the authorized PredictionManager.","details":"This function permanently removes an NFT from circulation, following the Checks-Effects-Interactions (CEI) pattern      to prevent reentrancy vulnerabilities. The function performs the following operations in order:      1. Checks: Verifies the token exists by checking its owner      2. Effects: Deletes the associated prediction metadata from storage      3. Events: Emits the PositionNFTBurned event      4. Interactions: Calls the _burn function which modifies state and may trigger external calls      This sequence is critical for security as it ensures all state changes are complete before any external      interactions occur. The function also optimizes gas usage by checking token existence via _ownerOf      rather than using _exists, as this provides the owner address which would be needed anyway.","params":{"_tokenId":"The ID of the NFT to burn."}},"constructor":{"custom:reverts":"ZeroAddress If the initialOwner is the zero address.","details":"Sets up the ERC721 token with a name and symbol, and establishes the initial owner who will have      administrative privileges (such as setting the PredictionManager address). The owner address is validated      to ensure it's not the zero address, which would lock the contract's administrative functions permanently.      The constructor initializes the following:      1. The ERC721 name and symbol for the NFT collection      2. The Ownable contract with the initial owner address      3. Implicitly sets _nextTokenId to 0 (default value)","params":{"_initialOwner":"The initial owner of the contract, who can set the PredictionManager address.","_name":"The name of the ERC721 token collection (e.g., \"SwapCast Prediction NFT\").","_symbol":"The symbol of the ERC721 token collection (e.g., \"SCNFT\")."}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"getPredictionDetails(uint256)":{"custom:reverts":"NonExistentToken If the token does not exist.","details":"This function provides a convenient way to access all relevant prediction data for a specific NFT      in a single call. It performs the following operations:      1. Validates that the token exists      2. Retrieves the prediction metadata from storage      3. Converts compact storage types (uint128) to full-size return types (uint256)      4. Returns both the metadata and the current owner in a single operation      This function is particularly useful for off-chain services that need to display prediction      information, as well as for other contracts that need to verify prediction details.","params":{"_tokenId":"The ID of the NFT to query."},"returns":{"convictionStake":"The conviction stake amount.","marketId":"The market ID of the prediction.","outcome":"The predicted outcome (Bullish or Bearish).","owner_":"The current owner of the NFT."}},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"mint(address,uint256,uint8,uint256)":{"custom:emits":"PositionNFTMinted When the NFT is successfully minted.","custom:reverts":"ZeroAddress If the recipient address is the zero address.InvalidConvictionStake If the conviction stake is zero.NotPredictionManager If called by any address other than the authorized PredictionManager.","details":"This function creates a new NFT that represents a user's prediction on a specific market outcome.      It includes several key operations:      1. Input validation to ensure valid recipient and stake amount      2. Token ID generation using an incrementing counter      3. ERC721 token minting to the specified owner      4. Storage of prediction metadata with optimized data types      5. Event emission for off-chain tracking      The function uses unchecked arithmetic for the token ID increment since overflow is practically      impossible (would require 2^256 mints). It also performs type conversions to use compact storage      types (uint128, uint64) for gas efficiency while still supporting a wide range of values.","params":{"_convictionStake":"The conviction stake amount for this prediction.","_marketId":"The market ID for which the prediction is made.","_outcome":"The predicted outcome (Bullish or Bearish).","_to":"The address that will own the newly minted NFT."},"returns":{"_0":"tokenId The ID of the newly minted NFT."}},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"setPredictionManagerAddress(address)":{"custom:emits":"PredictionManagerAddressSet With the old and new addresses.","custom:reverts":"ZeroAddress If the new address is the zero address.","details":"This function is critical for the security of the contract as it determines which address has      permission to create and destroy NFTs. It includes the following security features:      1. Owner-only access control via the onlyOwner modifier      2. Validation to prevent setting the zero address      3. Event emission for transparency and off-chain tracking      The function caches the old address before updating to ensure accurate event emission.      This function would typically be called once after deployment to set the initial PredictionManager,      and potentially again if the PredictionManager contract is upgraded.","params":{"_newPredictionManagerAddress":"The new address for the PredictionManager contract."}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"custom:reverts":"NonExistentToken If the token does not exist.","details":"This function generates a complete on-chain JSON metadata structure for the NFT, which is then      Base64 encoded and returned as a data URI. The implementation follows these steps:      1. Validates token existence      2. Retrieves prediction metadata from storage      3. Converts the outcome enum to a human-readable string      4. Constructs a structured JSON object with name, description, and attributes      5. Base64 encodes the JSON and returns it as a data URI      The metadata includes important prediction details as attributes:      - Market ID: The identifier of the prediction market      - Predicted Outcome: Human-readable outcome (Bullish/Bearish)      - Conviction Stake: The amount staked on this prediction      - Minted At Timestamp: When the prediction was made      This on-chain metadata approach ensures that NFT data remains accessible even if off-chain      services are unavailable, enhancing the durability and decentralization of the protocol.","params":{"_tokenId":"The ID of the token to get the URI for."},"returns":{"_0":"A string URI containing Base64 encoded JSON metadata."}},"totalSupply()":{"details":"This function returns the current value of the token ID counter.","returns":{"_0":"The total supply of tokens minted (including burned tokens)."}},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"userdoc":{"kind":"user","methods":{"burn(uint256)":{"notice":"Burns (destroys) an existing NFT, typically after its prediction has been resolved and claimed."},"constructor":{"notice":"Contract constructor that initializes the SwapCastNFT with an owner and token metadata."},"getPredictionDetails(uint256)":{"notice":"Retrieves the core prediction details associated with a given NFT."},"mint(address,uint256,uint8,uint256)":{"notice":"Mints a new NFT representing a user's prediction position."},"predictionManagerAddress()":{"notice":"The address of the PredictionManager contract authorized to mint and burn these NFTs."},"setPredictionManagerAddress(address)":{"notice":"Sets or updates the address of the PredictionManager contract authorized to mint/burn NFTs."},"tokenPredictionMetadata(uint256)":{"notice":"Mapping from token ID to its prediction metadata."},"tokenURI(uint256)":{"notice":"Returns the Uniform Resource Identifier (URI) for a given token ID."},"totalSupply()":{"notice":"Returns the total number of tokens that have been minted."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/openzeppelin-contracts/","@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/SwapCastNFT.sol":"SwapCastNFT"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol":{"keccak256":"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b","urls":["bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b","dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol":{"keccak256":"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a","urls":["bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09","dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261","urls":["bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11","dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol":{"keccak256":"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d","urls":["bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34","dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1","urls":["bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02","dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Utils.sol":{"keccak256":"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac","urls":["bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24","dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Base64.sol":{"keccak256":"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2","urls":["bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389","dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2","urls":["bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12","dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae","urls":["bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6","dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol":{"keccak256":"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa","urls":["bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287","dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"},"src/SwapCastNFT.sol":{"keccak256":"0x9cc394297d7d783bc856d46fc00280e3bcc4dbd6644b113c0f215ebe1a6dc288","urls":["bzz-raw://75b02ab296f784d7ccbade20fe28c2f250c9ca2d387ef0f6527673a9e5d3f43f","dweb:/ipfs/Qmc4jk9d8f53FQFTTcwuRYm9S7yiSMRwX5XFSYGHvEr1h8"],"license":"MIT"},"src/interfaces/ISwapCastNFT.sol":{"keccak256":"0x0d1a38fbbff8f4cd9f50844636b95a0b06d1bbae888eb1c4b23d49be92797ece","urls":["bzz-raw://fea12040f74e35df2f1153d297df6f11409599339af8d4f00f5afd7e717e6eaa","dweb:/ipfs/QmXuSFGdKfqsr8XLPZfaewfDJxdoT8XKqKfKqwkFjB8cKL"],"license":"MIT"},"src/types/PredictionTypes.sol":{"keccak256":"0xa158d4fd16826cd55c7beac796e00d570bc7e779ba54134f88eafaf3adcad869","urls":["bzz-raw://b70699e677b83dbd0c34ab544feedd13a7f79630f3d1a496a0c57ae537af6e43","dweb:/ipfs/QmYDFn5au9Htjb289VBnJ34QWkEEvoz2fXj57kUsTcVGWt"],"license":"MIT"}},"version":1},"id":139}