{"abi":[{"type":"function","name":"convertToUint","inputs":[{"name":"price","type":"int64","internalType":"int64"},{"name":"expo","type":"int32","internalType":"int32"},{"name":"targetDecimals","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"}],"bytecode":{"object":"0x608080604052346019576101a2908161001e823930815050f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c63b55522b214610024575f80fd5b606036600319011261006c576004358060070b810361006c57602435908160030b820361006c5760443560ff8116810361006c57602092610064926100ac565b604051908152f35b5f80fd5b9060ff8091169116039060ff821161008457565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff16604d811161008457600a0a90565b905f8260070b128015610160575b8015610152575b61006c5760030b5f03808060030b036100845760ff16908160ff841610155f14610119576100ff6101059267ffffffffffffffff60ff931694610070565b16610098565b908181029181830414901517156100845790565b916100ff60ff9161012993610070565b90811561013e5767ffffffffffffffff160490565b634e487b7160e01b5f52601260045260245ffd5b5060fe198160030b126100c1565b505f8160030b136100ba56fea26469706673582212203607c4b4908216bcb35df1d5c4e9a5c6fb3b70b0478a53980d7ff38e6589e12764736f6c634300081a0033","sourceMap":"93:1161:132:-:0;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f3560e01c63b55522b214610024575f80fd5b606036600319011261006c576004358060070b810361006c57602435908160030b820361006c5760443560ff8116810361006c57602092610064926100ac565b604051908152f35b5f80fd5b9060ff8091169116039060ff821161008457565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff16604d811161008457600a0a90565b905f8260070b128015610160575b8015610152575b61006c5760030b5f03808060030b036100845760ff16908160ff841610155f14610119576100ff6101059267ffffffffffffffff60ff931694610070565b16610098565b908181029181830414901517156100845790565b916100ff60ff9161012993610070565b90811561013e5767ffffffffffffffff160490565b634e487b7160e01b5f52601260045260245ffd5b5060fe198160030b126100c1565b505f8160030b136100ba56fea26469706673582212203607c4b4908216bcb35df1d5c4e9a5c6fb3b70b0478a53980d7ff38e6589e12764736f6c634300081a0033","sourceMap":"93:1161:132:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;93:1161:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;661:591::-;;93:1161;;;;805:9;:21;;;;661:591;805:36;;;;661:591;801:75;;93:1161;;;;;;;;;;;;;;;;;;947:31;;943:303;93:1161;;;1068:30;1055:44;93:1161;;;;;1068:30;;:::i;:::-;93:1161;1055:44;:::i;:::-;93:1161;;;;;;;;;;;;;;;994:105;:::o;943:303::-;1204:30;;93:1161;1204:30;1191:44;1204:30;;:::i;1191:44::-;93:1161;;;;;;;;1130:105;:::o;93:1161::-;;;;;;;;;;;;805:36;837:4;;;93:1161;;;830:11;805:36;;:21;93:1161;;;;;818:8;805:21;","linkReferences":{}},"methodIdentifiers":{"convertToUint(int64,int32,uint8)":"b55522b2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint8\",\"name\":\"targetDecimals\",\"type\":\"uint8\"}],\"name\":\"convertToUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"convertToUint(int64,int32,uint8)\":{\"details\":\"Function will lose precision if targetDecimals is less than the Pyth price decimals. This method will truncate any digits that cannot be represented by the targetDecimals. e.g. If the price is 0.000123 and the targetDecimals is 2, the result will be 0\",\"params\":{\"expo\":\"The Pyth price exponent\",\"price\":\"The Pyth price\",\"targetDecimals\":\"The target number of decimals\"},\"returns\":{\"_0\":\"The price as a uint256\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"convertToUint(int64,int32,uint8)\":{\"notice\":\"Converts a Pyth price to a uint256 with a target number of decimals\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@pythnetwork/pyth-sdk-solidity/PythUtils.sol\":\"PythUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"node_modules/@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/PythUtils.sol\":{\"keccak256\":\"0x282cc0a7775baa8a0861220f29bef8420d58522322a142d40e3210b9f3014bcf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c41cc784f7926d16e9d7e7e2a69b9ec297cea215e7a0ec06a6b241fa300a38cd\",\"dweb:/ipfs/Qma8kyP6HDQp1wJk6ak2CWibtXpG3cCtnkh4VXVxX4ArXo\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint8","name":"targetDecimals","type":"uint8"}],"stateMutability":"pure","type":"function","name":"convertToUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"convertToUint(int64,int32,uint8)":{"details":"Function will lose precision if targetDecimals is less than the Pyth price decimals. This method will truncate any digits that cannot be represented by the targetDecimals. e.g. If the price is 0.000123 and the targetDecimals is 2, the result will be 0","params":{"expo":"The Pyth price exponent","price":"The Pyth price","targetDecimals":"The target number of decimals"},"returns":{"_0":"The price as a uint256"}}},"version":1},"userdoc":{"kind":"user","methods":{"convertToUint(int64,int32,uint8)":{"notice":"Converts a Pyth price to a uint256 with a target number of decimals"}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/openzeppelin-contracts/","@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@pythnetwork/pyth-sdk-solidity/PythUtils.sol":"PythUtils"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"node_modules/@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"keccak256":"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b","urls":["bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3","dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh"],"license":"Apache-2.0"},"node_modules/@pythnetwork/pyth-sdk-solidity/PythUtils.sol":{"keccak256":"0x282cc0a7775baa8a0861220f29bef8420d58522322a142d40e3210b9f3014bcf","urls":["bzz-raw://c41cc784f7926d16e9d7e7e2a69b9ec297cea215e7a0ec06a6b241fa300a38cd","dweb:/ipfs/Qma8kyP6HDQp1wJk6ak2CWibtXpG3cCtnkh4VXVxX4ArXo"],"license":"Apache-2.0"}},"version":1},"id":132}