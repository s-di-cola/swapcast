{"abi":[{"type":"function","name":"burn","inputs":[{"name":"_tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getPredictionDetails","inputs":[{"name":"_tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcome","type":"uint8","internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint256","internalType":"uint256"},{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_marketId","type":"uint256","internalType":"uint256"},{"name":"_outcome","type":"uint8","internalType":"enum PredictionTypes.Outcome"},{"name":"_convictionStake","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"burn(uint256)":"42966c68","getPredictionDetails(uint256)":"8f888338","mint(address,uint256,uint8,uint256)":"a7a6be96"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getPredictionDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"convictionStake\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_marketId\",\"type\":\"uint256\"},{\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"_outcome\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_convictionStake\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SwapCast Developers\",\"details\":\"This interface ensures that implementing contracts adhere to a specific set of functions      for minting, burning, and retrieving details of prediction NFTs.\",\"kind\":\"dev\",\"methods\":{\"burn(uint256)\":{\"details\":\"This function should be implemented by the SwapCastNFT contract and be callable      by an authorized PredictionPool contract. Burning typically occurs after a prediction      is resolved and any associated rewards are claimed, or if a position is otherwise invalidated.\",\"params\":{\"_tokenId\":\"The ID of the token to burn.\"}},\"getPredictionDetails(uint256)\":{\"details\":\"This function allows querying of the core attributes of a prediction NFT.      It should be implemented by the SwapCastNFT contract.\",\"params\":{\"_tokenId\":\"The ID of the token to query.\"},\"returns\":{\"convictionStake\":\"The conviction stake amount recorded for this prediction NFT.\",\"marketId\":\"The market ID associated with the NFT.\",\"outcome\":\"The predicted outcome stored in the NFT (Bearish or Bullish).\",\"owner\":\"The current owner of the NFT.\"}},\"mint(address,uint256,uint8,uint256)\":{\"details\":\"This function should be implemented by the SwapCastNFT contract and be callable      by an authorized PredictionPool contract. It is responsible for creating a new NFT      and associating it with the provided prediction details.\",\"params\":{\"_convictionStake\":\"The amount of conviction (e.g., in wei) staked on this prediction.\",\"_marketId\":\"The ID of the market the prediction is for.\",\"_outcome\":\"The predicted outcome (Bearish or Bullish).\",\"_to\":\"The address to mint the NFT to.\"},\"returns\":{\"tokenId\":\"The unique ID of the newly minted token.\"}}},\"title\":\"ISwapCastNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns an existing NFT.\"},\"getPredictionDetails(uint256)\":{\"notice\":\"Retrieves the details associated with a specific prediction NFT.\"},\"mint(address,uint256,uint8,uint256)\":{\"notice\":\"Mints a new NFT representing a prediction.\"}},\"notice\":\"Interface for the SwapCastNFT contract, defining the external functions         callable by other contracts, particularly the PredictionPool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISwapCastNFT.sol\":\"ISwapCastNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/ISwapCastNFT.sol\":{\"keccak256\":\"0x0d1a38fbbff8f4cd9f50844636b95a0b06d1bbae888eb1c4b23d49be92797ece\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fea12040f74e35df2f1153d297df6f11409599339af8d4f00f5afd7e717e6eaa\",\"dweb:/ipfs/QmXuSFGdKfqsr8XLPZfaewfDJxdoT8XKqKfKqwkFjB8cKL\"]},\"src/types/PredictionTypes.sol\":{\"keccak256\":\"0x19c19f67d8c7676eb898e78ea891b5a2f338a199a1d315f186aeca57299348d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f70b0346d4f10d95f148225a62ed83fcd60031ee9fa2989faf40380ab3db02\",\"dweb:/ipfs/QmXkomMx9yedCk6suAWtMPSq135g4NTzeuj1S83WHXE2eN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burn"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getPredictionDetails","outputs":[{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8"},{"internalType":"uint256","name":"convictionStake","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}]},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_marketId","type":"uint256"},{"internalType":"enum PredictionTypes.Outcome","name":"_outcome","type":"uint8"},{"internalType":"uint256","name":"_convictionStake","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"burn(uint256)":{"details":"This function should be implemented by the SwapCastNFT contract and be callable      by an authorized PredictionPool contract. Burning typically occurs after a prediction      is resolved and any associated rewards are claimed, or if a position is otherwise invalidated.","params":{"_tokenId":"The ID of the token to burn."}},"getPredictionDetails(uint256)":{"details":"This function allows querying of the core attributes of a prediction NFT.      It should be implemented by the SwapCastNFT contract.","params":{"_tokenId":"The ID of the token to query."},"returns":{"convictionStake":"The conviction stake amount recorded for this prediction NFT.","marketId":"The market ID associated with the NFT.","outcome":"The predicted outcome stored in the NFT (Bearish or Bullish).","owner":"The current owner of the NFT."}},"mint(address,uint256,uint8,uint256)":{"details":"This function should be implemented by the SwapCastNFT contract and be callable      by an authorized PredictionPool contract. It is responsible for creating a new NFT      and associating it with the provided prediction details.","params":{"_convictionStake":"The amount of conviction (e.g., in wei) staked on this prediction.","_marketId":"The ID of the market the prediction is for.","_outcome":"The predicted outcome (Bearish or Bullish).","_to":"The address to mint the NFT to."},"returns":{"tokenId":"The unique ID of the newly minted token."}}},"version":1},"userdoc":{"kind":"user","methods":{"burn(uint256)":{"notice":"Burns an existing NFT."},"getPredictionDetails(uint256)":{"notice":"Retrieves the details associated with a specific prediction NFT."},"mint(address,uint256,uint8,uint256)":{"notice":"Mints a new NFT representing a prediction."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ISwapCastNFT.sol":"ISwapCastNFT"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/interfaces/ISwapCastNFT.sol":{"keccak256":"0x0d1a38fbbff8f4cd9f50844636b95a0b06d1bbae888eb1c4b23d49be92797ece","urls":["bzz-raw://fea12040f74e35df2f1153d297df6f11409599339af8d4f00f5afd7e717e6eaa","dweb:/ipfs/QmXuSFGdKfqsr8XLPZfaewfDJxdoT8XKqKfKqwkFjB8cKL"],"license":"MIT"},"src/types/PredictionTypes.sol":{"keccak256":"0x19c19f67d8c7676eb898e78ea891b5a2f338a199a1d315f186aeca57299348d8","urls":["bzz-raw://d8f70b0346d4f10d95f148225a62ed83fcd60031ee9fa2989faf40380ab3db02","dweb:/ipfs/QmXkomMx9yedCk6suAWtMPSq135g4NTzeuj1S83WHXE2eN"],"license":"MIT"}},"version":1},"id":117}