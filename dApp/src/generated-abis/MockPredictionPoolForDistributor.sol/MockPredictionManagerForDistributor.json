{"abi":[{"type":"function","name":"callerOfClaimReward","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"claimReward","inputs":[{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardCalled","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"lastTokenIdClaimed","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"reset","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setShouldRevertOnClaim","inputs":[{"name":"_shouldRevert","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"shouldRevertOnClaim","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"event","name":"ClaimRewardAttempted","inputs":[{"name":"tokenId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"caller","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x60808060405234601557610271908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c90816319a74d481461021c575080632d0f3e78146101ff578063350df594146101cf5780634d775da4146101a3578063a6e63d7914610182578063ae169a501461009b5763d826f88f14610069575f80fd5b34610097575f366003190112610097575f805460ff19168155600155600280546001600160a81b0319169055005b5f80fd5b346100975760203660031901126100975760ff6004357f5fae1a5308d9a823d09de05838664aa209fb45a0e73744b4ac362ad139053131604060025492610100600160a81b033360081b16610100600160a81b0319851617600255600185195f5416175f55806001558151908152336020820152a11661011757005b60405162461bcd60e51b815260206004820152603960248201527f4d6f636b50726564696374696f6e4d616e616765723a20436c61696d5265776160448201527f726420726576657274656420617320696e7374727563746564000000000000006064820152608490fd5b34610097575f36600319011261009757602060ff5f54166040519015158152f35b34610097575f3660031901126100975760025460405160089190911c6001600160a01b03168152602090f35b34610097576020366003190112610097576004358015158091036100975760ff8019600254169116176002555f80f35b34610097575f366003190112610097576020600154604051908152f35b34610097575f3660031901126100975760209060ff6002541615158152f3fea26469706673582212201eb6a02f99e1f0f047876293d6cd070a1f864fc6584dcde18dce05a4fe9e56c064736f6c634300081a0033","sourceMap":"161:1154:128:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f3560e01c90816319a74d481461021c575080632d0f3e78146101ff578063350df594146101cf5780634d775da4146101a3578063a6e63d7914610182578063ae169a501461009b5763d826f88f14610069575f80fd5b34610097575f366003190112610097575f805460ff19168155600155600280546001600160a81b0319169055005b5f80fd5b346100975760203660031901126100975760ff6004357f5fae1a5308d9a823d09de05838664aa209fb45a0e73744b4ac362ad139053131604060025492610100600160a81b033360081b16610100600160a81b0319851617600255600185195f5416175f55806001558151908152336020820152a11661011757005b60405162461bcd60e51b815260206004820152603960248201527f4d6f636b50726564696374696f6e4d616e616765723a20436c61696d5265776160448201527f726420726576657274656420617320696e7374727563746564000000000000006064820152608490fd5b34610097575f36600319011261009757602060ff5f54166040519015158152f35b34610097575f3660031901126100975760025460405160089190911c6001600160a01b03168152602090f35b34610097576020366003190112610097576004358015158091036100975760ff8019600254169116176002555f80f35b34610097575f366003190112610097576020600154604051908152f35b34610097575f3660031901126100975760209060ff6002541615158152f3fea26469706673582212201eb6a02f99e1f0f047876293d6cd070a1f864fc6584dcde18dce05a4fe9e56c064736f6c634300081a0033","sourceMap":"161:1154:128:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:1154:128;;;;;;;-1:-1:-1;;161:1154:128;;;-1:-1:-1;161:1154:128;1237:27;161:1154;;-1:-1:-1;;;;;;161:1154:128;;;;;;;;;;;;;;-1:-1:-1;;161:1154:128;;;;;;;801:41;161:1154;651:32;161:1154;;;;;;;673:10;161:1154;;;;;;;;;;;;651:32;161:1154;;;;;;;;;;;;;;;;;;673:10;161:1154;;;;801:41;161:1154;852:117;;161:1154;852:117;161:1154;;-1:-1:-1;;;891:67:128;;161:1154;;891:67;;161:1154;;;;;;;;;;;;;;;;891:67;;;161:1154;;;;;;-1:-1:-1;;161:1154:128;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:1154:128;;;;359:34;161:1154;;;;;;;;-1:-1:-1;;;;;161:1154:128;;;;;;;;;;;;-1:-1:-1;;161:1154:128;;;;;;;;;;;;;;;;;537:35;161:1154;;;;;537:35;161:1154;;;;;;;;;;-1:-1:-1;;161:1154:128;;;;;283:33;161:1154;;;;;;;;;;;;;-1:-1:-1;;161:1154:128;;;;;;;322:31;161:1154;;;;;;","linkReferences":{}},"methodIdentifiers":{"callerOfClaimReward()":"4d775da4","claimReward(uint256)":"ae169a50","claimRewardCalled()":"a6e63d79","lastTokenIdClaimed()":"2d0f3e78","reset()":"d826f88f","setShouldRevertOnClaim(bool)":"350df594","shouldRevertOnClaim()":"19a74d48"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ClaimRewardAttempted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"callerOfClaimReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewardCalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTokenIdClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_shouldRevert\",\"type\":\"bool\"}],\"name\":\"setShouldRevertOnClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shouldRevertOnClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"claimReward(uint256)\":{\"details\":\"The implementation in PredictionManager needs to handle how the claimant is identified,      as msg.sender will be the RewardDistributor contract.\",\"params\":{\"tokenId\":\"The ID of the SwapCastNFT representing the user's position.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward(uint256)\":{\"notice\":\"Called by the RewardDistributor to process a reward claim for a given NFT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/MockPredictionPoolForDistributor.sol\":\"MockPredictionManagerForDistributor\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IPredictionManagerForDistributor.sol\":{\"keccak256\":\"0xa8564a1794431d51ca32a55436236e6d4cc924799c7463c3f3c94010afe82a0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5c65fb46406124ec74cd8be6b4617e6f841581c076f9f497f6e141ac4be843\",\"dweb:/ipfs/QmQBhk23ADLR6qZCyLoWpoHni2wt4a4XcQ3AFneeARHkwn\"]},\"test/mocks/MockPredictionPoolForDistributor.sol\":{\"keccak256\":\"0xcc9fc977e8e11813fa04042f4ffd4a3f2282093c0e35d1d1bbc5b625df99f6ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74911a866bb30907296e16ffe0d7528c7064528b19a5bcc858b19a8992c481c1\",\"dweb:/ipfs/QmUFkkNi8uS79tEXU7gG82C94PTJ31ExXBCoHsUs6GUwLs\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256","indexed":false},{"internalType":"address","name":"caller","type":"address","indexed":false}],"type":"event","name":"ClaimRewardAttempted","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"callerOfClaimReward","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claimReward"},{"inputs":[],"stateMutability":"view","type":"function","name":"claimRewardCalled","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"lastTokenIdClaimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"reset"},{"inputs":[{"internalType":"bool","name":"_shouldRevert","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setShouldRevertOnClaim"},{"inputs":[],"stateMutability":"view","type":"function","name":"shouldRevertOnClaim","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"claimReward(uint256)":{"details":"The implementation in PredictionManager needs to handle how the claimant is identified,      as msg.sender will be the RewardDistributor contract.","params":{"tokenId":"The ID of the SwapCastNFT representing the user's position."}}},"version":1},"userdoc":{"kind":"user","methods":{"claimReward(uint256)":{"notice":"Called by the RewardDistributor to process a reward claim for a given NFT."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/mocks/MockPredictionPoolForDistributor.sol":"MockPredictionManagerForDistributor"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/interfaces/IPredictionManagerForDistributor.sol":{"keccak256":"0xa8564a1794431d51ca32a55436236e6d4cc924799c7463c3f3c94010afe82a0d","urls":["bzz-raw://2c5c65fb46406124ec74cd8be6b4617e6f841581c076f9f497f6e141ac4be843","dweb:/ipfs/QmQBhk23ADLR6qZCyLoWpoHni2wt4a4XcQ3AFneeARHkwn"],"license":"MIT"},"test/mocks/MockPredictionPoolForDistributor.sol":{"keccak256":"0xcc9fc977e8e11813fa04042f4ffd4a3f2282093c0e35d1d1bbc5b625df99f6ae","urls":["bzz-raw://74911a866bb30907296e16ffe0d7528c7064528b19a5bcc858b19a8992c481c1","dweb:/ipfs/QmUFkkNi8uS79tEXU7gG82C94PTJ31ExXBCoHsUs6GUwLs"],"license":"MIT"}},"version":1},"id":128}