{"abi":[{"type":"function","name":"protocolFeeBasisPoints","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"recordPrediction","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"marketId","type":"uint256","internalType":"uint256"},{"name":"outcome","type":"uint8","internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStakeDeclared","type":"uint128","internalType":"uint128"}],"outputs":[],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"protocolFeeBasisPoints()":"b2b85d93","recordPrediction(address,uint256,uint8,uint128)":"e0a67c54"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"protocolFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"convictionStakeDeclared\",\"type\":\"uint128\"}],\"name\":\"recordPrediction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SwapCast Developers\",\"kind\":\"dev\",\"methods\":{\"protocolFeeBasisPoints()\":{\"returns\":{\"_0\":\"The protocol fee in basis points (e.g., 100 for 1%).\"}},\"recordPrediction(address,uint256,uint8,uint128)\":{\"details\":\"This function is called by the hook, which passes the stake amount declared in hookData.\",\"params\":{\"convictionStakeDeclared\":\"The amount of conviction (stake) declared for this prediction.\",\"marketId\":\"The ID of the market for which the prediction is made.\",\"outcome\":\"The predicted outcome (Bearish or Bullish).\",\"user\":\"The address of the user making the prediction.\"}}},\"title\":\"IPredictionManager Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"protocolFeeBasisPoints()\":{\"notice\":\"Returns the current protocol fee in basis points.\"},\"recordPrediction(address,uint256,uint8,uint128)\":{\"notice\":\"Records a user's prediction and associated stake.\"}},\"notice\":\"Defines the interface for the PredictionManager contract, primarily for interaction from the SwapCastHook.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IPredictionManager.sol\":\"IPredictionManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"src/interfaces/IPredictionManager.sol\":{\"keccak256\":\"0xad5e6b2548a456402524df1dc32d48edbcc8dd37045e88ca256679b6fe628e6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93f1c0ba6a593647b1a4cf38a75bc6ffad56e1283b62912d5bad6ec28b2d3e0c\",\"dweb:/ipfs/QmWazCBcfVngLYbvWxXjLVMU42kZ52FaDUwSksggFNr4wn\"]},\"src/types/PredictionTypes.sol\":{\"keccak256\":\"0x19c19f67d8c7676eb898e78ea891b5a2f338a199a1d315f186aeca57299348d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f70b0346d4f10d95f148225a62ed83fcd60031ee9fa2989faf40380ab3db02\",\"dweb:/ipfs/QmXkomMx9yedCk6suAWtMPSq135g4NTzeuj1S83WHXE2eN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"protocolFeeBasisPoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"marketId","type":"uint256"},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8"},{"internalType":"uint128","name":"convictionStakeDeclared","type":"uint128"}],"stateMutability":"payable","type":"function","name":"recordPrediction"}],"devdoc":{"kind":"dev","methods":{"protocolFeeBasisPoints()":{"returns":{"_0":"The protocol fee in basis points (e.g., 100 for 1%)."}},"recordPrediction(address,uint256,uint8,uint128)":{"details":"This function is called by the hook, which passes the stake amount declared in hookData.","params":{"convictionStakeDeclared":"The amount of conviction (stake) declared for this prediction.","marketId":"The ID of the market for which the prediction is made.","outcome":"The predicted outcome (Bearish or Bullish).","user":"The address of the user making the prediction."}}},"version":1},"userdoc":{"kind":"user","methods":{"protocolFeeBasisPoints()":{"notice":"Returns the current protocol fee in basis points."},"recordPrediction(address,uint256,uint8,uint128)":{"notice":"Records a user's prediction and associated stake."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IPredictionManager.sol":"IPredictionManager"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"src/interfaces/IPredictionManager.sol":{"keccak256":"0xad5e6b2548a456402524df1dc32d48edbcc8dd37045e88ca256679b6fe628e6f","urls":["bzz-raw://93f1c0ba6a593647b1a4cf38a75bc6ffad56e1283b62912d5bad6ec28b2d3e0c","dweb:/ipfs/QmWazCBcfVngLYbvWxXjLVMU42kZ52FaDUwSksggFNr4wn"],"license":"MIT"},"src/types/PredictionTypes.sol":{"keccak256":"0x19c19f67d8c7676eb898e78ea891b5a2f338a199a1d315f186aeca57299348d8","urls":["bzz-raw://d8f70b0346d4f10d95f148225a62ed83fcd60031ee9fa2989faf40380ab3db02","dweb:/ipfs/QmXkomMx9yedCk6suAWtMPSq135g4NTzeuj1S83WHXE2eN"],"license":"MIT"}},"version":1},"id":114}