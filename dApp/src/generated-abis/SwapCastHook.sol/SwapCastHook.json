{"abi":[{"type":"constructor","inputs":[{"name":"_poolManager","type":"address","internalType":"contract IPoolManager"},{"name":"_predictionManagerAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"afterAddLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterDonate","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterInitialize","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"},{"name":"tick","type":"int24","internalType":"int24"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterRemoveLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"feesAccrued","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BalanceDelta"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"delta","type":"int256","internalType":"BalanceDelta"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int128","internalType":"int128"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeAddLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeDonate","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"amount0","type":"uint256","internalType":"uint256"},{"name":"amount1","type":"uint256","internalType":"uint256"},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeInitialize","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"sqrtPriceX96","type":"uint160","internalType":"uint160"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeRemoveLiquidity","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct ModifyLiquidityParams","components":[{"name":"tickLower","type":"int24","internalType":"int24"},{"name":"tickUpper","type":"int24","internalType":"int24"},{"name":"liquidityDelta","type":"int256","internalType":"int256"},{"name":"salt","type":"bytes32","internalType":"bytes32"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"key","type":"tuple","internalType":"struct PoolKey","components":[{"name":"currency0","type":"address","internalType":"Currency"},{"name":"currency1","type":"address","internalType":"Currency"},{"name":"fee","type":"uint24","internalType":"uint24"},{"name":"tickSpacing","type":"int24","internalType":"int24"},{"name":"hooks","type":"address","internalType":"contract IHooks"}]},{"name":"params","type":"tuple","internalType":"struct SwapParams","components":[{"name":"zeroForOne","type":"bool","internalType":"bool"},{"name":"amountSpecified","type":"int256","internalType":"int256"},{"name":"sqrtPriceLimitX96","type":"uint160","internalType":"uint160"}]},{"name":"hookData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"},{"name":"","type":"int256","internalType":"BeforeSwapDelta"},{"name":"","type":"uint24","internalType":"uint24"}],"stateMutability":"nonpayable"},{"type":"function","name":"getHookPermissions","inputs":[],"outputs":[{"name":"permissions","type":"tuple","internalType":"struct Hooks.Permissions","components":[{"name":"beforeInitialize","type":"bool","internalType":"bool"},{"name":"afterInitialize","type":"bool","internalType":"bool"},{"name":"beforeAddLiquidity","type":"bool","internalType":"bool"},{"name":"afterAddLiquidity","type":"bool","internalType":"bool"},{"name":"beforeRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"afterRemoveLiquidity","type":"bool","internalType":"bool"},{"name":"beforeSwap","type":"bool","internalType":"bool"},{"name":"afterSwap","type":"bool","internalType":"bool"},{"name":"beforeDonate","type":"bool","internalType":"bool"},{"name":"afterDonate","type":"bool","internalType":"bool"},{"name":"beforeSwapReturnDelta","type":"bool","internalType":"bool"},{"name":"afterSwapReturnDelta","type":"bool","internalType":"bool"},{"name":"afterAddLiquidityReturnDelta","type":"bool","internalType":"bool"},{"name":"afterRemoveLiquidityReturnDelta","type":"bool","internalType":"bool"}]}],"stateMutability":"pure"},{"type":"function","name":"poolManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPoolManager"}],"stateMutability":"view"},{"type":"function","name":"predictionManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IPredictionManager"}],"stateMutability":"view"},{"type":"event","name":"PredictionAttempted","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"poolId","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"marketId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"outcome","type":"uint8","indexed":false,"internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint128","indexed":false,"internalType":"uint128"}],"anonymous":false},{"type":"event","name":"PredictionFailed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"poolId","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"marketId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"outcome","type":"uint8","indexed":false,"internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint128","indexed":false,"internalType":"uint128"},{"name":"errorSelector","type":"bytes4","indexed":false,"internalType":"bytes4"}],"anonymous":false},{"type":"event","name":"PredictionRecorded","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"poolId","type":"bytes32","indexed":true,"internalType":"PoolId"},{"name":"marketId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"outcome","type":"uint8","indexed":false,"internalType":"enum PredictionTypes.Outcome"},{"name":"convictionStake","type":"uint128","indexed":false,"internalType":"uint128"}],"anonymous":false},{"type":"error","name":"HookNotImplemented","inputs":[]},{"type":"error","name":"InvalidHookDataLength","inputs":[{"name":"actualLength","type":"uint256","internalType":"uint256"},{"name":"expectedLength","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NoConvictionStakeDeclaredInHookData","inputs":[]},{"type":"error","name":"NotPoolManager","inputs":[]},{"type":"error","name":"PredictionPoolZeroAddress","inputs":[]},{"type":"error","name":"PredictionRecordingFailed","inputs":[{"name":"reason","type":"string","internalType":"string"}]}],"bytecode":{"object":"0x60c0604052346102bc57604051601f61155e38819003918201601f19168301916001600160401b038311848410176102c05780849260409485528339810103126102bc578051906001600160a01b03821682036102bc57602001516001600160a01b03811691908290036102bc576080525f6101a061007c6102d4565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152826101608201528261018082015201525f6101a06100da6102d4565b8281528260208201528260408201528260608201528260808201528260a08201528260c0820152600160e0820152826101008201528261012082015282610140820152826101608201528261018082015201526120003016158015906102af575b80156102a2575b8015610295575b8015610288575b801561027b575b801561026f575b801561025f575b8015610253575b8015610247575b801561023b575b801561022f575b8015610223575b8015610217575b6102045780156101f55760a05260405161126990816102f582396080518181816101a30152818161025a0152818161030c015281816103aa0152818161043c015281816104fc015281816107010152610763015260a0518181816107b50152610e2b0152f35b630fc73f1f60e01b5f5260045ffd5b630732d7b560e51b5f523060045260245ffd5b5060013016151561018f565b50600230161515610188565b50600430161515610181565b5060083016151561017a565b50601030161515610173565b5060203016151561016c565b5060403016151560011415610165565b5060803016151561015e565b5061010030161515610157565b5061020030161515610150565b5061040030161515610149565b5061080030161515610142565b506110003016151561013b565b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051906101c082016001600160401b038111838210176102c05760405256fe6080604052600436101561001a575b3615610018575f80fd5b005b5f3560e01c806321d0ee70146100da578063259982e5146100da578063575e24b4146100d55780636c2bbe7e146100cb5780636fe7e6eb146100d05780639f063efc146100cb578063b47b2fb1146100c6578063b6a8b0fa146100b2578063c4e833ce146100c1578063dc4c90d3146100bc578063dc98354e146100b7578063e1b4af69146100b25763ee687a980361000e576107a0565b6104e9565b610730565b6106ec565b610605565b6103e7565b6102f9565b61036d565b610204565b610190565b6001600160a01b038116036100f057565b5f80fd5b60a09060231901126100f057602490565b9181601f840112156100f05782359167ffffffffffffffff83116100f057602083818601950101116100f057565b906101606003198301126100f05760043561014d816100df565b9160a06023198201126100f057602491608060c3198301126100f05760c491610144359067ffffffffffffffff82116100f05761018c91600401610105565b9091565b346100f05761019e36610133565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330391506101e4905057630a85dc2960e01b5f5260045ffd5b63570c108560e11b5f5260045ffd5b60609060c31901126100f05760c490565b346100f0576101403660031901126100f0576102216004356100df565b61022a366100f4565b50610234366101f3565b506101243567ffffffffffffffff81116100f057610256903690600401610105565b50507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e457630a85dc2960e01b5f5260045ffd5b906101a06003198301126100f0576004356102b1816100df565b9160a06023198201126100f057602491608060c48303126100f05760c49161014435916101643591610184359067ffffffffffffffff82116100f05761018c91600401610105565b346100f05761030736610297565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330393506101e49250505057630a85dc2960e01b5f5260045ffd5b60e435908160020b82036100f057565b35908160020b82036100f057565b346100f0576101003660031901126100f05761038a6004356100df565b610393366100f4565b5061039f60c4356100df565b6103a761034f565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e457630a85dc2960e01b5f5260045ffd5b346100f0576101603660031901126100f057600435610405816100df565b61040e366100f4565b610417366101f3565b506101443567ffffffffffffffff81116100f057610439903690600401610105565b917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e45761047393610d97565b604080516001600160e01b0319939093168352600f9190910b602083015290f35b0390f35b6101206003198201126100f0576004356104b1816100df565b9160a06023198301126100f05760249160c4359160e43591610104359067ffffffffffffffff82116100f05761018c91600401610105565b346100f0576104f736610498565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330392506101e491505057630a85dc2960e01b5f5260045ffd5b5f9103126100f057565b610603909291926101a0806101c083019561056584825115159052565b60208181015115159085015260408181015115159085015260608181015115159085015260808181015115159085015260a08181015115159085015260c08181015115159085015260e081810151151590850152610100818101511515908501526101208181015115159085015261014081810151151590850152610160818101511515908501526101808181015115159085015201511515910152565b565b346100f0575f3660031901126100f0575f6101a0604051610625816107f8565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152015261049461068261083c565b5f81525f60208201525f60408201525f60608201525f60808201525f60a08201525f60c08201526106b660e0820160019052565b5f6101008201525f6101208201525f6101408201525f6101608201525f6101808201525f6101a082015260405191829182610548565b346100f0575f3660031901126100f0576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100f05760e03660031901126100f05761074c6004356100df565b610755366100f4565b5061076160c4356100df565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e457630a85dc2960e01b5f5260045ffd5b346100f0575f3660031901126100f0576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b634e487b7160e01b5f52604160045260245ffd5b6101c0810190811067ffffffffffffffff82111761081557604052565b6107e4565b90601f8019910116810190811067ffffffffffffffff82111761081557604052565b604051906106036101c08361081a565b91908260a09103126100f05760405160a0810181811067ffffffffffffffff8211176108155760405280928035610882816100df565b82526020810135610892816100df565b6020830152604081013562ffffff811681036100f057608091829160408501526108be6060820161035f565b60608501520135916108cf836100df565b0152565b9060028210156108e05752565b634e487b7160e01b5f52602160045260245ffd5b9160409194936109176001600160801b03926060860197865260208601906108d3565b16910152565b908160209103126100f0575190565b6040513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b8181029291811591840414171561095e57565b610937565b906004820180921161095e57565b9190820180921161095e57565b67ffffffffffffffff811161081557601f01601f191660200190565b604051906109a960608361081a565b60248252633731b29d60e11b6040837f5377617043617374486f6f6b3a20616464726573732874686973292e62616c6160208201520152565b604051906109f160408361081a565b601d82527f5377617043617374486f6f6b3a20746f74616c457468546f53656e643a0000006020830152565b60405190610a2c60a08361081a565b6062825261149d60f11b6080837f5377617043617374486f6f6b3a206d73672e76616c756520726563656976656460208201527f206279205f616674657253776170202873686f756c6420626520746869732e6260408201527f616c616e636520696620686f6f6b20737461727473207769746820302045544860608201520152565b92936109176001600160801b03929695606094608087019860018060a01b03168752602087015260408601906108d3565b3d15610b0a573d90610af18261097e565b91610aff604051938461081a565b82523d5f602084013e565b606090565b60405190610b1e60408361081a565b601082526f2ab735b737bbb72837b7b622b93937b960811b6020830152565b60405190610b4c60608361081a565b603582527430b7103ab739b832b1b4b334b2b21032b93937b91760591b6040837f50726564696374696f6e4d616e6167657220726576657274656420776974682060208201520152565b60405190610ba560608361081a565b603882527f6e6f6e2d7374616e64617264206572726f7220646174612e00000000000000006040837f50726564696374696f6e4d616e6167657220726576657274656420776974682060208201520152565b60405190610c0660608361081a565b602f82526e309031bab9ba37b69032b93937b91760891b6040837f50726564696374696f6e4d616e6167657220726576657274656420776974682060208201520152565b60031981019190821161095e57565b90610c638261097e565b610c70604051918261081a565b8281528092610c81601f199161097e565b0190602036910137565b908151811015610c9c570160200190565b634e487b7160e01b5f52603260045260245ffd5b6020818303126100f05780519067ffffffffffffffff82116100f0570181601f820112156100f057805190610ce48261097e565b92610cf2604051948561081a565b828452602083830101116100f057815f9260208093018386015e8301015290565b805191908290602001825e015f815290565b926001600160801b0390610d4a606094979693976080870198875260208701906108d3565b1660408401526001600160e01b031916910152565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b906020610d94928181520190610d5f565b90565b909293919380156111ab57603181036111945750833593602160208201355f1a91013560801c92610dd2610dcb368761084c565b60a0902090565b6040516001600160a01b03851694919085907f4b0bf870a72b904fa9cd8c35eec73cdb739e4f6e2ea5b57d6076e2ddf492ded89080610e138a898e846108f4565b0390a384156111855760405163b2b85d9360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169190602081600481865afa801561118057610e7d610e8591610e8b935f91611151575b508961094b565b612710900490565b87610971565b610e9c47610e9761099a565b6111bc565b610ea881610e976109e2565b610eb434610e97610a1d565b823b156100f05786928986925f94610ee2604051978896879586946338299f1560e21b865260048601610aaf565b03925af19081611137575b506110e55750610efb610ae0565b94610f1a610f07610b0f565b6020815191012063ffffffff60e01b1690565b610f22610b3d565b8751909190600481106110855750505060208601516001600160e01b0319811662461bcd60e51b0361105857610f588751610c4a565b610f6181610c59565b905f5b81811061101f57505061101b97505f80516020611214833981519152939291610ff2610dcb610fdb610fe9610fa586602080610fff99518301019101610cb0565b6040517f50726564696374696f6e4d616e61676572204572726f723a200000000000000060208201529283916039830190610d13565b03601f19810183528261081a565b995b369061084c565b9660405194859485610d25565b0390a3604051639b964ca960e01b815291829160048301610d83565b0390fd5b80611045611037611031600194610963565b8d610c8b565b516001600160f81b03191690565b5f1a6110518286610c8b565b5301610f64565b61101b965090610fff5f805160206112148339815191529392610ff2610dcb61107f610bf7565b99610feb565b61101b9850969091966110b3575b5f80516020611214833981519152939291610ff2610dcb610fff93610feb565b955090610fff5f805160206112148339815191529392610ff2610dcb6110d7610b96565b999350505091929350611093565b9461112761111a610dcb7feaac43659a7f96f8a96efe670b9d0262f89f36e25d246fce7a8b4128a2bd0075959697369061084c565b95604051938493846108f4565b0390a363b47b2fb160e01b905f90565b806111455f61114b9361081a565b8061053e565b5f610eed565b611173915060203d602011611179575b61116b818361081a565b81019061091d565b5f610e76565b503d611161565b61092c565b638c10cabd60e01b5f5260045ffd5b636569eeb760e01b5f52600452603160245260445ffd5b5063b47b2fb160e01b93505f925050565b5f9190829161120060405180926111ec6020830195632d839cb360e21b8752604060248501526064840190610d5f565b90604483015203601f19810183528261081a565b51906a636f6e736f6c652e6c6f675afa5056feb05fa7d8d55f2201119132f3d6a144c7acdf9a731eb8975d5aefedb3a8d1735ca2646970667358221220dc07e2a5a09a5dfe383be55757e1788af2f5b72daffa9876a12d77b3d08e07ea64736f6c634300081a0033","sourceMap":"1462:14170:110:-:0;;;;;;;;;;;;;;;;;-1:-1:-1;;1462:14170:110;;;;-1:-1:-1;;;;;1462:14170:110;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1462:14170:110;;;;;;;;;-1:-1:-1;;;;;1462:14170:110;;;;;;;;;782:26:102;;-1:-1:-1;1462:14170:110;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;782:26:102;1462:14170:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1462:14170:110;;;:::i;:::-;;;;7689:597;1462:14170;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;7689:597;782:26:102;7689:597:110;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;;;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;1462:14170;7689:597;1462:14170;;899:4:104;16467:29:63;:34;;;3729:166;;;-1:-1:-1;3729:265:63;;;;-1:-1:-1;3729:362:63;;;;-1:-1:-1;3729:467:63;;;;-1:-1:-1;3729:570:63;;;;-1:-1:-1;3729:652:63;;;;-1:-1:-1;3729:732:63;;;;-1:-1:-1;3729:818:63;;;;-1:-1:-1;3729:902:63;;;;-1:-1:-1;3729:1009:63;;;;-1:-1:-1;3729:1114:63;;;;-1:-1:-1;3729:1236:63;;;;-1:-1:-1;3729:1384:63;;;;-1:-1:-1;3712:1491:63;;6306:39:110;;6302:79;;1462:14170;6391:65;1462:14170;;;;;;;;782:26:102;1462:14170:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6302:79;6354:27;;;-1:-1:-1;6354:27:110;;-1:-1:-1;6354:27:110;3712:1491:63;5138:28;;;-1:-1:-1;1084:176:59;899:4:104;1084:176:59;;;-1:-1:-1;1084:176:59;3729:1384:63;5052:61;1462:14170:110;899:4:104;16467:29:63;:34;;3729:1384;;:1236;4907:58;1462:14170:110;899:4:104;16467:29:63;:34;;3729:1236;;:1114;4794:49;1462:14170:110;899:4:104;16467:29:63;:34;;3729:1114;;:1009;4688:50;1462:14170:110;899:4:104;16467:29:63;:34;;3729:1009;;:902;4594:37;1462:14170:110;899:4:104;16467:29:63;:34;;3729:902;;:818;4509:38;1462:14170:110;899:4:104;16467:29:63;:34;;3729:818;;:732;4426:35;1462:14170:110;899:4:104;16467:29:63;:34;;1462:14170:110;4401:60:63;;3729:732;;:652;4345:36;782:26:102;899:4:104;16467:29:63;:34;;3729:652;;:570;4252:47;1462:14170:110;899:4:104;16467:29:63;:34;;3729:570;;:467;4148:48;1462:14170:110;899:4:104;16467:29:63;:34;;3729:467;;:362;4047:44;1462:14170:110;899:4:104;16467:29:63;:34;;3729:362;;:265;3949:45;1462:14170:110;899:4:104;16467:29:63;:34;;3729:265;;:166;3854:41;1462:14170:110;899:4:104;16467:29:63;:34;;3729:166;;1462:14170:110;-1:-1:-1;1462:14170:110;;;;;;-1:-1:-1;1462:14170:110;;;;;-1:-1:-1;1462:14170:110;;;;;;;;-1:-1:-1;;;;;1462:14170:110;;;;;;;;;;:::o","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001a575b3615610018575f80fd5b005b5f3560e01c806321d0ee70146100da578063259982e5146100da578063575e24b4146100d55780636c2bbe7e146100cb5780636fe7e6eb146100d05780639f063efc146100cb578063b47b2fb1146100c6578063b6a8b0fa146100b2578063c4e833ce146100c1578063dc4c90d3146100bc578063dc98354e146100b7578063e1b4af69146100b25763ee687a980361000e576107a0565b6104e9565b610730565b6106ec565b610605565b6103e7565b6102f9565b61036d565b610204565b610190565b6001600160a01b038116036100f057565b5f80fd5b60a09060231901126100f057602490565b9181601f840112156100f05782359167ffffffffffffffff83116100f057602083818601950101116100f057565b906101606003198301126100f05760043561014d816100df565b9160a06023198201126100f057602491608060c3198301126100f05760c491610144359067ffffffffffffffff82116100f05761018c91600401610105565b9091565b346100f05761019e36610133565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330391506101e4905057630a85dc2960e01b5f5260045ffd5b63570c108560e11b5f5260045ffd5b60609060c31901126100f05760c490565b346100f0576101403660031901126100f0576102216004356100df565b61022a366100f4565b50610234366101f3565b506101243567ffffffffffffffff81116100f057610256903690600401610105565b50507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e457630a85dc2960e01b5f5260045ffd5b906101a06003198301126100f0576004356102b1816100df565b9160a06023198201126100f057602491608060c48303126100f05760c49161014435916101643591610184359067ffffffffffffffff82116100f05761018c91600401610105565b346100f05761030736610297565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330393506101e49250505057630a85dc2960e01b5f5260045ffd5b60e435908160020b82036100f057565b35908160020b82036100f057565b346100f0576101003660031901126100f05761038a6004356100df565b610393366100f4565b5061039f60c4356100df565b6103a761034f565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e457630a85dc2960e01b5f5260045ffd5b346100f0576101603660031901126100f057600435610405816100df565b61040e366100f4565b610417366101f3565b506101443567ffffffffffffffff81116100f057610439903690600401610105565b917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e45761047393610d97565b604080516001600160e01b0319939093168352600f9190910b602083015290f35b0390f35b6101206003198201126100f0576004356104b1816100df565b9160a06023198301126100f05760249160c4359160e43591610104359067ffffffffffffffff82116100f05761018c91600401610105565b346100f0576104f736610498565b5050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330392506101e491505057630a85dc2960e01b5f5260045ffd5b5f9103126100f057565b610603909291926101a0806101c083019561056584825115159052565b60208181015115159085015260408181015115159085015260608181015115159085015260808181015115159085015260a08181015115159085015260c08181015115159085015260e081810151151590850152610100818101511515908501526101208181015115159085015261014081810151151590850152610160818101511515908501526101808181015115159085015201511515910152565b565b346100f0575f3660031901126100f0575f6101a0604051610625816107f8565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152826101408201528261016082015282610180820152015261049461068261083c565b5f81525f60208201525f60408201525f60608201525f60808201525f60a08201525f60c08201526106b660e0820160019052565b5f6101008201525f6101208201525f6101408201525f6101608201525f6101808201525f6101a082015260405191829182610548565b346100f0575f3660031901126100f0576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346100f05760e03660031901126100f05761074c6004356100df565b610755366100f4565b5061076160c4356100df565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036101e457630a85dc2960e01b5f5260045ffd5b346100f0575f3660031901126100f0576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b634e487b7160e01b5f52604160045260245ffd5b6101c0810190811067ffffffffffffffff82111761081557604052565b6107e4565b90601f8019910116810190811067ffffffffffffffff82111761081557604052565b604051906106036101c08361081a565b91908260a09103126100f05760405160a0810181811067ffffffffffffffff8211176108155760405280928035610882816100df565b82526020810135610892816100df565b6020830152604081013562ffffff811681036100f057608091829160408501526108be6060820161035f565b60608501520135916108cf836100df565b0152565b9060028210156108e05752565b634e487b7160e01b5f52602160045260245ffd5b9160409194936109176001600160801b03926060860197865260208601906108d3565b16910152565b908160209103126100f0575190565b6040513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b8181029291811591840414171561095e57565b610937565b906004820180921161095e57565b9190820180921161095e57565b67ffffffffffffffff811161081557601f01601f191660200190565b604051906109a960608361081a565b60248252633731b29d60e11b6040837f5377617043617374486f6f6b3a20616464726573732874686973292e62616c6160208201520152565b604051906109f160408361081a565b601d82527f5377617043617374486f6f6b3a20746f74616c457468546f53656e643a0000006020830152565b60405190610a2c60a08361081a565b6062825261149d60f11b6080837f5377617043617374486f6f6b3a206d73672e76616c756520726563656976656460208201527f206279205f616674657253776170202873686f756c6420626520746869732e6260408201527f616c616e636520696620686f6f6b20737461727473207769746820302045544860608201520152565b92936109176001600160801b03929695606094608087019860018060a01b03168752602087015260408601906108d3565b3d15610b0a573d90610af18261097e565b91610aff604051938461081a565b82523d5f602084013e565b606090565b60405190610b1e60408361081a565b601082526f2ab735b737bbb72837b7b622b93937b960811b6020830152565b60405190610b4c60608361081a565b603582527430b7103ab739b832b1b4b334b2b21032b93937b91760591b6040837f50726564696374696f6e4d616e6167657220726576657274656420776974682060208201520152565b60405190610ba560608361081a565b603882527f6e6f6e2d7374616e64617264206572726f7220646174612e00000000000000006040837f50726564696374696f6e4d616e6167657220726576657274656420776974682060208201520152565b60405190610c0660608361081a565b602f82526e309031bab9ba37b69032b93937b91760891b6040837f50726564696374696f6e4d616e6167657220726576657274656420776974682060208201520152565b60031981019190821161095e57565b90610c638261097e565b610c70604051918261081a565b8281528092610c81601f199161097e565b0190602036910137565b908151811015610c9c570160200190565b634e487b7160e01b5f52603260045260245ffd5b6020818303126100f05780519067ffffffffffffffff82116100f0570181601f820112156100f057805190610ce48261097e565b92610cf2604051948561081a565b828452602083830101116100f057815f9260208093018386015e8301015290565b805191908290602001825e015f815290565b926001600160801b0390610d4a606094979693976080870198875260208701906108d3565b1660408401526001600160e01b031916910152565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b906020610d94928181520190610d5f565b90565b909293919380156111ab57603181036111945750833593602160208201355f1a91013560801c92610dd2610dcb368761084c565b60a0902090565b6040516001600160a01b03851694919085907f4b0bf870a72b904fa9cd8c35eec73cdb739e4f6e2ea5b57d6076e2ddf492ded89080610e138a898e846108f4565b0390a384156111855760405163b2b85d9360e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169190602081600481865afa801561118057610e7d610e8591610e8b935f91611151575b508961094b565b612710900490565b87610971565b610e9c47610e9761099a565b6111bc565b610ea881610e976109e2565b610eb434610e97610a1d565b823b156100f05786928986925f94610ee2604051978896879586946338299f1560e21b865260048601610aaf565b03925af19081611137575b506110e55750610efb610ae0565b94610f1a610f07610b0f565b6020815191012063ffffffff60e01b1690565b610f22610b3d565b8751909190600481106110855750505060208601516001600160e01b0319811662461bcd60e51b0361105857610f588751610c4a565b610f6181610c59565b905f5b81811061101f57505061101b97505f80516020611214833981519152939291610ff2610dcb610fdb610fe9610fa586602080610fff99518301019101610cb0565b6040517f50726564696374696f6e4d616e61676572204572726f723a200000000000000060208201529283916039830190610d13565b03601f19810183528261081a565b995b369061084c565b9660405194859485610d25565b0390a3604051639b964ca960e01b815291829160048301610d83565b0390fd5b80611045611037611031600194610963565b8d610c8b565b516001600160f81b03191690565b5f1a6110518286610c8b565b5301610f64565b61101b965090610fff5f805160206112148339815191529392610ff2610dcb61107f610bf7565b99610feb565b61101b9850969091966110b3575b5f80516020611214833981519152939291610ff2610dcb610fff93610feb565b955090610fff5f805160206112148339815191529392610ff2610dcb6110d7610b96565b999350505091929350611093565b9461112761111a610dcb7feaac43659a7f96f8a96efe670b9d0262f89f36e25d246fce7a8b4128a2bd0075959697369061084c565b95604051938493846108f4565b0390a363b47b2fb160e01b905f90565b806111455f61114b9361081a565b8061053e565b5f610eed565b611173915060203d602011611179575b61116b818361081a565b81019061091d565b5f610e76565b503d611161565b61092c565b638c10cabd60e01b5f5260045ffd5b636569eeb760e01b5f52600452603160245260445ffd5b5063b47b2fb160e01b93505f925050565b5f9190829161120060405180926111ec6020830195632d839cb360e21b8752604060248501526064840190610d5f565b90604483015203601f19810183528261081a565b51906a636f6e736f6c652e6c6f675afa5056feb05fa7d8d55f2201119132f3d6a144c7acdf9a731eb8975d5aefedb3a8d1735ca2646970667358221220dc07e2a5a09a5dfe383be55757e1788af2f5b72daffa9876a12d77b3d08e07ea64736f6c634300081a0033","sourceMap":"1462:14170:110:-:0;;;;;;;;;-1:-1:-1;1462:14170:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;1462:14170:110;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;1462:14170:110;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1462:14170:110;;;;;;;;-1:-1:-1;;1462:14170:110;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;672:11:102;-1:-1:-1;;;;;1462:14170:110;650:10:102;:34;;-1:-1:-1;646:63:102;;-1:-1:-1;646:63:102;3575:20:104;;;-1:-1:-1;3575:20:104;1462:14170:110;-1:-1:-1;3575:20:104;646:63:102;693:16;;;-1:-1:-1;693:16:102;1462:14170:110;-1:-1:-1;693:16:102;1462:14170:110;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1462:14170:110;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;672:11:102;-1:-1:-1;;;;;1462:14170:110;650:10:102;:34;646:63;;3575:20:104;;;-1:-1:-1;3575:20:104;1462:14170:110;-1:-1:-1;3575:20:104;1462:14170:110;;;-1:-1:-1;;1462:14170:110;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1462:14170:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;672:11:102;-1:-1:-1;;;;;1462:14170:110;650:10:102;:34;;-1:-1:-1;646:63:102;;-1:-1:-1;;;646:63:102;3575:20:104;;;-1:-1:-1;3575:20:104;1462:14170:110;-1:-1:-1;3575:20:104;1462:14170:110;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1462:14170:110;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;672:11:102;-1:-1:-1;;;;;1462:14170:110;650:10:102;:34;646:63;;3575:20:104;;;-1:-1:-1;3575:20:104;1462:14170:110;-1:-1:-1;3575:20:104;1462:14170:110;;;;;;-1:-1:-1;;1462:14170:110;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;672:11:102;-1:-1:-1;;;;;1462:14170:110;650:10:102;:34;646:63;;9372:5896:110;;;:::i;:::-;1462:14170;;;-1:-1:-1;;;;;;1462:14170:110;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1462:14170:110;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1462:14170:110;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;;;672:11:102;-1:-1:-1;;;;;1462:14170:110;650:10:102;:34;;-1:-1:-1;646:63:102;;-1:-1:-1;;646:63:102;3575:20:104;;;-1:-1:-1;3575:20:104;1462:14170:110;-1:-1:-1;3575:20:104;1462:14170:110;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;1462:14170:110;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;7689:597;;1462:14170;7689:597;1462:14170;7689:597;;8022:4;1462:14170;;;7689:597;1462:14170;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;7689:597;;1462:14170;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1462:14170:110;;;;;;411:41:102;-1:-1:-1;;;;;1462:14170:110;;;;;;;;;;;;-1:-1:-1;;1462:14170:110;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;672:11:102;-1:-1:-1;;;;;1462:14170:110;650:10:102;:34;646:63;;3575:20:104;;;-1:-1:-1;3575:20:104;1462:14170:110;-1:-1:-1;3575:20:104;1462:14170:110;;;;;;-1:-1:-1;;1462:14170:110;;;;;;1760:53;-1:-1:-1;;;;;1462:14170:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;2406:2::-;;;;;;;;;;1462:14170;;2406:2;1462:14170;;;;;;;;;;;;;2406:2;1462:14170;;;;;;:::i;:::-;2406:2;;;;;1462:14170;;;;:::i;:::-;2406:2;;;;1462:14170;2406:2;;;1462:14170;;;2406:2;;;;;;;;1462:14170;2406:2;;;1462:14170;2406:2;;;1462:14170;:::i;:::-;2406:2;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;1462:14170;;;-1:-1:-1;2406:2:110;;;;;-1:-1:-1;2406:2:110;;;;;;;;-1:-1:-1;;;;;2406:2:110;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;1462:14170;;2406:2;;;;;;;;1462:14170;;;2406:2;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;11972:42;2406:2;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;1462:14170;;-1:-1:-1;;1462:14170:110;2406:2;;;:::o;:::-;1462:14170;;;;2406:2;1462:14170;;:::i;:::-;2406:2;;;-1:-1:-1;;;1462:14170:110;2406:2;;;;;;;;:::o;:::-;;1462:14170;;;2406:2;1462:14170;;:::i;:::-;2406:2;;;;1462:14170;2406:2;;;:::o;:::-;1462:14170;;;;2406:2;1462:14170;;:::i;:::-;2406:2;;;-1:-1:-1;;;1462:14170:110;2406:2;;;;;;;1462:14170;2406:2;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2406:2:110;;;;;;;;1462:14170;;;;;;;2406:2;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;1462:14170;;;;;;;:::i;:::-;2406:2;;;-1:-1:-1;2406:2:110;;;;:::o;:::-;;;:::o;:::-;;1462:14170;;;2406:2;1462:14170;;:::i;:::-;2406:2;;;-1:-1:-1;;;1462:14170:110;2406:2;;;:::o;:::-;1462:14170;;;;2406:2;1462:14170;;:::i;:::-;2406:2;;;-1:-1:-1;;;1462:14170:110;2406:2;;;;;;;;:::o;:::-;1462:14170;;;;2406:2;1462:14170;;:::i;:::-;2406:2;;;;1462:14170;2406:2;;;;;;;;:::o;:::-;1462:14170;;;;2406:2;1462:14170;;:::i;:::-;2406:2;;;-1:-1:-1;;;1462:14170:110;2406:2;;;;;;;;:::o;:::-;-1:-1:-1;;2406:2:110;;;;;;;;:::o;:::-;;;;;:::i;:::-;1462:14170;;;;;;:::i;:::-;2406:2;;;;1462:14170;2406:2;1462:14170;;2406:2;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;1462:14170;;;2406:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1462:14170;;;;;;;:::i;:::-;2406:2;;;;;;;;;;;;-1:-1:-1;2406:2:110;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;2406:2:110;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;;1462:14170:110;2406:2;;1462:14170;2406:2::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;2406:2:110;;;;;;1462:14170;;-1:-1:-1;;1462:14170:110;2406:2;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;9372:5896::-;;;;;;9643:20;;9639:168;;2406:2;9904:46;;9900:151;;10576:1087;;;;;;;;;9662:1;10576:1087;;;;;;2406:2;11706:10;2406:2;;;;:::i;:::-;357:173:93;271:265;357:173;271:265;;11706:10:110;1462:14170;;-1:-1:-1;;;;;1462:14170:110;;;;;;;11678:83;;1462:14170;11678:83;1462:14170;;;;11678:83;:::i;:::-;;;;11776:28;;11772:103;;1462:14170;;-1:-1:-1;;;11972:42:110;;:17;-1:-1:-1;;;;;1462:14170:110;;;10576:1087;1462:14170;11972:42;1462:14170;;11972:42;;;;;;12045:41;12044:51;11972:42;12130:44;11972:42;9662:1;11972:42;;;9372:5896;12045:41;;;:::i;:::-;12090:5;2406:2;;;;12044:51;12130:44;;:::i;:::-;12185:74;12237:21;2406:2;;:::i;:::-;12185:74;:::i;:::-;12269:60;2406:2;;;:::i;12269:60::-;12339:158;12478:9;2406:2;;:::i;12339:158::-;12867:131;;;;;1462:14170;;;;;9662:1;1462:14170;12867:131;1462:14170;;2406:2;;;;;;;;;;12867:131;;11972:42;12867:131;;;:::i;:::-;;;;;;;;;9372:5896;-1:-1:-1;12863:2399:110;;13176:2086;;;:::i;:::-;2406:2;13257:44;2406:2;;:::i;:::-;10576:1087;2406:2;;;;13264:36;1462:14170;;;;2406:2;;13257:44;2406:2;;:::i;:::-;;;;;;11972:42;13437:24;;11972:42;;-1:-1:-1;;;10576:1087:110;13481:106;;;-1:-1:-1;;;;;;1462:14170:110;;-1:-1:-1;;;13666:61:110;1462:14170;;13988:23;2406:2;;13988:23;:::i;:::-;14067:30;;;:::i;:::-;14124:13;9662:1;14139:23;;;;;;2406:2;;15204:47;2406:2;;-1:-1:-1;;;;;;;;;;;2406:2:110;;;15090:10;2406:2;;14397:53;14305:40;2406:2;10576:1087;2406:2;15048:135;2406:2;;14305:40;;;;;;:::i;:::-;1462:14170;;2406:2;10576:1087;14397:53;;2406:2;1462:14170;;;2406:2;;;;;:::i;:::-;14397:53;1462:14170;;14397:53;;;;;;:::i;:::-;13662:1111;;2406:2;;;:::i;15090:10::-;1462:14170;;;15048:135;;;;;:::i;:::-;;;;1462:14170;;-1:-1:-1;;;15204:47:110;;1462:14170;;;11972:42;15204:47;;;:::i;:::-;;;;14164:3;14232:5;14219:19;;14232:5;2406:2;14232:5;;:::i;:::-;14219:19;;:::i;:::-;2406:2;-1:-1:-1;;;;;;2406:2:110;;;14219:19;9662:1;14195:43;;;;;:::i;:::-;;2406:2;14124:13;;13662:1111;15204:47;2406:2;;;15048:135;-1:-1:-1;;;;;;;;;;;2406:2:110;;15090:10;2406:2;;;:::i;:::-;13662:1111;;;13433:1503;15204:47;14797:23;;;;;;14793:143;;13433:1503;-1:-1:-1;;;;;;;;;;;13433:1503:110;;;15090:10;2406:2;15048:135;13433:1503;;;14793:143;2406:2;;;15048:135;-1:-1:-1;;;;;;;;;;;2406:2:110;;15090:10;2406:2;;;:::i;:::-;14793:143;;;;;;;;;;;12863:2399;2406:2;13018:82;13045:10;2406:2;13018:82;2406:2;;;;;;:::i;13045:10::-;1462:14170;;;13018:82;;;;;:::i;:::-;;;;-1:-1:-1;;;9687:27:110;9662:1;;13114:39::o;12867:131::-;;;9662:1;12867:131;;;:::i;:::-;;;:::i;:::-;;;;11972:42;;;;10576:1087;11972:42;10576:1087;11972:42;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;11772:103::-;11827:37;;;9662:1;11827:37;;9662:1;11827:37;9900:151;-1:-1:-1;;;9662:1:110;9973:67;;2406:2;;;;;9662:1;9973:67;9639:168;-1:-1:-1;;;;9687:27:110;-1:-1:-1;9662:1:110;;-1:-1:-1;;9679:39:110:o;7139:145:16:-;-1:-1:-1;7139:145:16;;;;7222:54;1462:14170:110;;7222:54:16;;1462:14170:110;7222:54:16;;;;;;;;;1462:14170:110;7222:54:16;;;1462:14170:110;;;;;;:::i;:::-;;;;;2406:2;7222:54:16;1462:14170:110;;7222:54:16;;;;;;:::i;:::-;358:279;;131:42;358:279;;;7139:145::o","linkReferences":{},"immutableReferences":{"58387":[{"start":419,"length":32},{"start":602,"length":32},{"start":780,"length":32},{"start":938,"length":32},{"start":1084,"length":32},{"start":1276,"length":32},{"start":1793,"length":32},{"start":1891,"length":32}],"61831":[{"start":1973,"length":32},{"start":3627,"length":32}]}},"methodIdentifiers":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":"9f063efc","afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":"e1b4af69","afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":"6fe7e6eb","afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":"6c2bbe7e","afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":"b47b2fb1","beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"259982e5","beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":"b6a8b0fa","beforeInitialize(address,(address,address,uint24,int24,address),uint160)":"dc98354e","beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":"21d0ee70","beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":"575e24b4","getHookPermissions()":"c4e833ce","poolManager()":"dc4c90d3","predictionManager()":"ee687a98"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"_poolManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_predictionManagerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedLength\",\"type\":\"uint256\"}],\"name\":\"InvalidHookDataLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoConvictionStakeDeclaredInHookData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PredictionPoolZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PredictionRecordingFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"convictionStake\",\"type\":\"uint128\"}],\"name\":\"PredictionAttempted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"convictionStake\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"errorSelector\",\"type\":\"bytes4\"}],\"name\":\"PredictionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"PoolId\",\"name\":\"poolId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum PredictionTypes.Outcome\",\"name\":\"outcome\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"convictionStake\",\"type\":\"uint128\"}],\"name\":\"PredictionRecorded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"BalanceDelta\",\"name\":\"feesAccrued\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeAddLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"internalType\":\"struct ModifyLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeRemoveLiquidity\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"key\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct SwapParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"hookData\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"BeforeSwapDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHookPermissions\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidity\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwapReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterAddLiquidityReturnDelta\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterRemoveLiquidityReturnDelta\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Permissions\",\"name\":\"permissions\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"predictionManager\",\"outputs\":[{\"internalType\":\"contract IPredictionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Simone Di Cola\",\"details\":\"This hook integrates with the SwapCast `PredictionManager`. When a user performs a swap via the `PoolManager`      and includes specific `hookData` (market ID and predicted outcome), this hook's `_afterSwap` logic is triggered.      The user's conviction (stake) is passed as `msg.value` with the swap call, which the `PoolManager` forwards to this hook.      The hook then attempts to record this prediction in the `PredictionManager`.      It inherits from `BaseHook` and primarily utilizes the `afterSwap` permission.\",\"errors\":{\"InvalidHookDataLength(uint256,uint256)\":[{\"details\":\"Currently, this error is defined but not explicitly used to validate against `PREDICTION_HOOK_DATA_LENGTH`.      It could be used if stricter `hookData` length validation is implemented.\",\"params\":{\"actualLength\":\"The actual length of the `hookData` received.\",\"expectedLength\":\"The expected length for valid prediction `hookData`.\"}}],\"PredictionRecordingFailed(string)\":[{\"params\":{\"reason\":\"A string describing the reason for the failure, forwarded from the `PredictionPool` or a general message.\"}}]},\"events\":{\"PredictionAttempted(address,bytes32,uint256,uint8,uint128)\":{\"params\":{\"convictionStake\":\"The amount of conviction (stake) declared for this prediction.\",\"marketId\":\"The ID of the prediction market.\",\"outcome\":\"The predicted outcome (Bearish or Bullish).\",\"poolId\":\"The ID of the pool where the swap occurred.\",\"user\":\"The address of the user making the prediction.\"}},\"PredictionFailed(address,bytes32,uint256,uint8,uint128,bytes4)\":{\"params\":{\"convictionStake\":\"The amount of conviction (stake) declared for this prediction.\",\"errorSelector\":\"The error selector from the PredictionPool's revert, if available.\",\"marketId\":\"The ID of the prediction market.\",\"outcome\":\"The predicted outcome (Bearish or Bullish).\",\"poolId\":\"The ID of the pool where the swap occurred.\",\"user\":\"The address of the user making the prediction.\"}},\"PredictionRecorded(address,bytes32,uint256,uint8,uint128)\":{\"params\":{\"convictionStake\":\"The amount of conviction (stake) declared for this prediction.\",\"marketId\":\"The ID of the prediction market.\",\"outcome\":\"The predicted outcome (Bearish or Bullish).\",\"poolId\":\"The ID of the pool where the swap occurred.\",\"user\":\"The address of the user making the prediction.\"}}},\"kind\":\"dev\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\",\"tick\":\"The current tick after the state of a pool is initialized\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"params\":{\"delta\":\"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta\",\"feesAccrued\":\"The fees accrued since the last time fees were collected from this position\",\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"params\":{\"delta\":\"The amount owed to the caller (positive) or owed to the pool (negative)\",\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\"}},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for adding liquidity\",\"sender\":\"The initial msg.sender for the add liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"params\":{\"amount0\":\"The amount of token0 being donated\",\"amount1\":\"The amount of token1 being donated\",\"hookData\":\"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook\",\"key\":\"The key for the pool\",\"sender\":\"The initial msg.sender for the donate call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"params\":{\"key\":\"The key for the pool being initialized\",\"sender\":\"The initial msg.sender for the initialize call\",\"sqrtPriceX96\":\"The sqrt(price) of the pool as a Q64.96\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for removing liquidity\",\"sender\":\"The initial msg.sender for the remove liquidity call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\"}},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"params\":{\"hookData\":\"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook\",\"key\":\"The key for the pool\",\"params\":\"The parameters for the swap\",\"sender\":\"The initial msg.sender for the swap call\"},\"returns\":{\"_0\":\"bytes4 The function selector for the hook\",\"_1\":\"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency\",\"_2\":\"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)\"}},\"constructor\":{\"params\":{\"_poolManager\":\"The address of the Uniswap V4 PoolManager this hook will be registered with.                     Passed to the `BaseHook` constructor.\",\"_predictionManagerAddress\":\"The address of the `PredictionManager` contract where predictions will be recorded.                               Cannot be the zero address.\"}},\"getHookPermissions()\":{\"details\":\"Overrides `BaseHook.getHookPermissions`.      This implementation enables only the `afterSwap` hook point, meaning the hook logic      in `_afterSwap` will be executed by the `PoolManager` after a swap transaction is processed.\",\"returns\":{\"permissions\":\"A `Hooks.Permissions` struct with `afterSwap` set to true and all others false.\"}}},\"stateVariables\":{\"PREDICTION_HOOK_DATA_LENGTH\":{\"details\":\"This constant represents 32 bytes for `marketId` (uint256) + 1 byte for `outcome` (uint8) + 16 bytes for `convictionStake` (uint128).      Currently, `_afterSwap` checks if `hookData.length == 0` but does not strictly enforce this length for non-empty data.      Consider adding validation: `if (hookData.length != 0 && hookData.length != PREDICTION_HOOK_DATA_LENGTH) revert InvalidHookDataLength(...)`.\"},\"predictionManager\":{\"details\":\"This address is set immutably during deployment via the constructor.      It must conform to the {IPredictionManager} interface.\"}},\"title\":\"SwapCastHook\",\"version\":1},\"userdoc\":{\"errors\":{\"InvalidHookDataLength(uint256,uint256)\":[{\"notice\":\"Reverts if the provided `hookData` has an unexpected length.\"}],\"NoConvictionStakeDeclaredInHookData()\":[{\"notice\":\"Reverts if a user attempts to make a prediction (`hookData` is provided) but the conviction stake declared in `hookData` is zero.\"}],\"NotPoolManager()\":[{\"notice\":\"Thrown when the caller is not PoolManager\"}],\"PredictionPoolZeroAddress()\":[{\"notice\":\"Reverts during construction if the provided `_predictionManagerAddress` is the zero address.\"}],\"PredictionRecordingFailed(string)\":[{\"notice\":\"Reverts if the call to `predictionManager.recordPrediction` fails for any reason.\"}]},\"events\":{\"PredictionAttempted(address,bytes32,uint256,uint8,uint128)\":{\"notice\":\"Emitted when a user attempts to make a prediction during a swap.\"},\"PredictionFailed(address,bytes32,uint256,uint8,uint128,bytes4)\":{\"notice\":\"Emitted when a prediction attempt fails to be recorded in the PredictionPool.\"},\"PredictionRecorded(address,bytes32,uint256,uint8,uint128)\":{\"notice\":\"Emitted when a prediction is successfully recorded in the PredictionPool.\"}},\"kind\":\"user\",\"methods\":{\"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is added\"},\"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called after donate\"},\"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)\":{\"notice\":\"The hook called after the state of a pool is initialized\"},\"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)\":{\"notice\":\"The hook called after liquidity is removed\"},\"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)\":{\"notice\":\"The hook called after a swap\"},\"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is added\"},\"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)\":{\"notice\":\"The hook called before donate\"},\"beforeInitialize(address,(address,address,uint24,int24,address),uint160)\":{\"notice\":\"The hook called before the state of a pool is initialized\"},\"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)\":{\"notice\":\"The hook called before liquidity is removed\"},\"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)\":{\"notice\":\"The hook called before a swap\"},\"constructor\":{\"notice\":\"Contract constructor.\"},\"getHookPermissions()\":{\"notice\":\"Defines the permissions for this hook, indicating which hook points it will implement.\"},\"poolManager()\":{\"notice\":\"The Uniswap v4 PoolManager contract\"},\"predictionManager()\":{\"notice\":\"The instance of the PredictionManager contract where predictions are recorded.\"}},\"notice\":\"A Uniswap V4 hook designed to enable users to make predictions on market outcomes         concurrently with their swap transactions on a Uniswap V4 pool.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapCastHook.sol\":\"SwapCastHook\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":permit2/=lib/v4-periphery/lib/permit2/\",\":solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/\",\":v4-core/=lib/v4-periphery/lib/v4-core/src/\",\":v4-periphery/=lib/v4-periphery/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57\",\"dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol\":{\"keccak256\":\"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1\",\"dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol\":{\"keccak256\":\"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8\",\"dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol\":{\"keccak256\":\"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec\",\"dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol\":{\"keccak256\":\"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4\",\"dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol\":{\"keccak256\":\"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d\",\"dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de\",\"dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d\"]},\"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol\":{\"keccak256\":\"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f\",\"dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol\":{\"keccak256\":\"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd\",\"dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol\":{\"keccak256\":\"0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb\",\"dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol\":{\"keccak256\":\"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475\",\"dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol\":{\"keccak256\":\"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17\",\"dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa\"]},\"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol\":{\"keccak256\":\"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59\",\"dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj\"]},\"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol\":{\"keccak256\":\"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9\",\"dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H\"]},\"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol\":{\"keccak256\":\"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782\",\"dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K\"]},\"lib/v4-periphery/lib/v4-core/src/types/Currency.sol\":{\"keccak256\":\"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01\",\"dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol\":{\"keccak256\":\"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918\",\"dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol\":{\"keccak256\":\"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639\",\"dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi\"]},\"lib/v4-periphery/lib/v4-core/src/types/PoolOperation.sol\":{\"keccak256\":\"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07\",\"dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c\"]},\"lib/v4-periphery/src/base/ImmutableState.sol\":{\"keccak256\":\"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337\",\"dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU\"]},\"lib/v4-periphery/src/interfaces/IImmutableState.sol\":{\"keccak256\":\"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341\",\"dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq\"]},\"lib/v4-periphery/src/utils/BaseHook.sol\":{\"keccak256\":\"0x6268607345149d912996d1c2bac693b2102304cc97c19ec4fef184d6fa390e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6c0dddffa6c5eb3c10bc45d56d58bc3f4773778322fa10a4acf46e2292b61b3\",\"dweb:/ipfs/Qmc1Srhh6ne5Lsi2Y5BBz8pgPLmJdg8uN1UCeJzKnr6Kra\"]},\"src/SwapCastHook.sol\":{\"keccak256\":\"0x0d36b5b1ed1beba19478546d59b6630eb56d42dee8ac48146ce0365f04e79a0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db6aad02724172a71bb86601b22a6cde6abb42d416afab1a97f6c0b5c9001f58\",\"dweb:/ipfs/QmPSc66cgLvybsZbq95RZANfR74BLNkPLW2C48xJKVrBwX\"]},\"src/interfaces/IPredictionManager.sol\":{\"keccak256\":\"0xad5e6b2548a456402524df1dc32d48edbcc8dd37045e88ca256679b6fe628e6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93f1c0ba6a593647b1a4cf38a75bc6ffad56e1283b62912d5bad6ec28b2d3e0c\",\"dweb:/ipfs/QmWazCBcfVngLYbvWxXjLVMU42kZ52FaDUwSksggFNr4wn\"]},\"src/types/PredictionTypes.sol\":{\"keccak256\":\"0x19c19f67d8c7676eb898e78ea891b5a2f338a199a1d315f186aeca57299348d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8f70b0346d4f10d95f148225a62ed83fcd60031ee9fa2989faf40380ab3db02\",\"dweb:/ipfs/QmXkomMx9yedCk6suAWtMPSq135g4NTzeuj1S83WHXE2eN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IPoolManager","name":"_poolManager","type":"address"},{"internalType":"address","name":"_predictionManagerAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"HookNotImplemented"},{"inputs":[{"internalType":"uint256","name":"actualLength","type":"uint256"},{"internalType":"uint256","name":"expectedLength","type":"uint256"}],"type":"error","name":"InvalidHookDataLength"},{"inputs":[],"type":"error","name":"NoConvictionStakeDeclaredInHookData"},{"inputs":[],"type":"error","name":"NotPoolManager"},{"inputs":[],"type":"error","name":"PredictionPoolZeroAddress"},{"inputs":[{"internalType":"string","name":"reason","type":"string"}],"type":"error","name":"PredictionRecordingFailed"},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"PoolId","name":"poolId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"marketId","type":"uint256","indexed":false},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8","indexed":false},{"internalType":"uint128","name":"convictionStake","type":"uint128","indexed":false}],"type":"event","name":"PredictionAttempted","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"PoolId","name":"poolId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"marketId","type":"uint256","indexed":false},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8","indexed":false},{"internalType":"uint128","name":"convictionStake","type":"uint128","indexed":false},{"internalType":"bytes4","name":"errorSelector","type":"bytes4","indexed":false}],"type":"event","name":"PredictionFailed","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"PoolId","name":"poolId","type":"bytes32","indexed":true},{"internalType":"uint256","name":"marketId","type":"uint256","indexed":false},{"internalType":"enum PredictionTypes.Outcome","name":"outcome","type":"uint8","indexed":false},{"internalType":"uint128","name":"convictionStake","type":"uint128","indexed":false}],"type":"event","name":"PredictionRecorded","anonymous":false},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterAddLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterDonate","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"}],"stateMutability":"nonpayable","type":"function","name":"afterInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"BalanceDelta","name":"feesAccrued","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterRemoveLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BalanceDelta","name":"","type":"int256"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"BalanceDelta","name":"delta","type":"int256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"afterSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"int128","name":"","type":"int128"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeAddLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeDonate","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"stateMutability":"nonpayable","type":"function","name":"beforeInitialize","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct ModifyLiquidityParams","name":"params","type":"tuple","components":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"int256","name":"liquidityDelta","type":"int256"},{"internalType":"bytes32","name":"salt","type":"bytes32"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeRemoveLiquidity","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"struct PoolKey","name":"key","type":"tuple","components":[{"internalType":"Currency","name":"currency0","type":"address"},{"internalType":"Currency","name":"currency1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"},{"internalType":"contract IHooks","name":"hooks","type":"address"}]},{"internalType":"struct SwapParams","name":"params","type":"tuple","components":[{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}]},{"internalType":"bytes","name":"hookData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"beforeSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"},{"internalType":"BeforeSwapDelta","name":"","type":"int256"},{"internalType":"uint24","name":"","type":"uint24"}]},{"inputs":[],"stateMutability":"pure","type":"function","name":"getHookPermissions","outputs":[{"internalType":"struct Hooks.Permissions","name":"permissions","type":"tuple","components":[{"internalType":"bool","name":"beforeInitialize","type":"bool"},{"internalType":"bool","name":"afterInitialize","type":"bool"},{"internalType":"bool","name":"beforeAddLiquidity","type":"bool"},{"internalType":"bool","name":"afterAddLiquidity","type":"bool"},{"internalType":"bool","name":"beforeRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"afterRemoveLiquidity","type":"bool"},{"internalType":"bool","name":"beforeSwap","type":"bool"},{"internalType":"bool","name":"afterSwap","type":"bool"},{"internalType":"bool","name":"beforeDonate","type":"bool"},{"internalType":"bool","name":"afterDonate","type":"bool"},{"internalType":"bool","name":"beforeSwapReturnDelta","type":"bool"},{"internalType":"bool","name":"afterSwapReturnDelta","type":"bool"},{"internalType":"bool","name":"afterAddLiquidityReturnDelta","type":"bool"},{"internalType":"bool","name":"afterRemoveLiquidityReturnDelta","type":"bool"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"poolManager","outputs":[{"internalType":"contract IPoolManager","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"predictionManager","outputs":[{"internalType":"contract IPredictionManager","name":"","type":"address"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"params":{"delta":"The caller's balance delta after adding liquidity; the sum of principal delta, fees accrued, and hook delta","feesAccrued":"The fees accrued since the last time fees were collected from this position","hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook","key":"The key for the pool","params":"The parameters for adding liquidity","sender":"The initial msg.sender for the add liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being donated","amount1":"The amount of token1 being donated","hookData":"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook","key":"The key for the pool","sender":"The initial msg.sender for the donate call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":{"params":{"key":"The key for the pool being initialized","sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96","tick":"The current tick after the state of a pool is initialized"},"returns":{"_0":"bytes4 The function selector for the hook"}},"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"params":{"delta":"The caller's balance delta after removing liquidity; the sum of principal delta, fees accrued, and hook delta","feesAccrued":"The fees accrued since the last time fees were collected from this position","hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook","key":"The key for the pool","params":"The parameters for removing liquidity","sender":"The initial msg.sender for the remove liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BalanceDelta The hook's delta in token0 and token1. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":{"params":{"delta":"The amount owed to the caller (positive) or owed to the pool (negative)","hookData":"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook","key":"The key for the pool","params":"The parameters for the swap","sender":"The initial msg.sender for the swap call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"int128 The hook's delta in unspecified currency. Positive: the hook is owed/took currency, negative: the hook owes/sent currency"}},"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be passed on to the hook","key":"The key for the pool","params":"The parameters for adding liquidity","sender":"The initial msg.sender for the add liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"params":{"amount0":"The amount of token0 being donated","amount1":"The amount of token1 being donated","hookData":"Arbitrary data handed into the PoolManager by the donor to be be passed on to the hook","key":"The key for the pool","sender":"The initial msg.sender for the donate call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeInitialize(address,(address,address,uint24,int24,address),uint160)":{"params":{"key":"The key for the pool being initialized","sender":"The initial msg.sender for the initialize call","sqrtPriceX96":"The sqrt(price) of the pool as a Q64.96"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the liquidity provider to be be passed on to the hook","key":"The key for the pool","params":"The parameters for removing liquidity","sender":"The initial msg.sender for the remove liquidity call"},"returns":{"_0":"bytes4 The function selector for the hook"}},"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"params":{"hookData":"Arbitrary data handed into the PoolManager by the swapper to be be passed on to the hook","key":"The key for the pool","params":"The parameters for the swap","sender":"The initial msg.sender for the swap call"},"returns":{"_0":"bytes4 The function selector for the hook","_1":"BeforeSwapDelta The hook's delta in specified and unspecified currencies. Positive: the hook is owed/took currency, negative: the hook owes/sent currency","_2":"uint24 Optionally override the lp fee, only used if three conditions are met: 1. the Pool has a dynamic fee, 2. the value's 2nd highest bit is set (23rd bit, 0x400000), and 3. the value is less than or equal to the maximum fee (1 million)"}},"constructor":{"params":{"_poolManager":"The address of the Uniswap V4 PoolManager this hook will be registered with.                     Passed to the `BaseHook` constructor.","_predictionManagerAddress":"The address of the `PredictionManager` contract where predictions will be recorded.                               Cannot be the zero address."}},"getHookPermissions()":{"details":"Overrides `BaseHook.getHookPermissions`.      This implementation enables only the `afterSwap` hook point, meaning the hook logic      in `_afterSwap` will be executed by the `PoolManager` after a swap transaction is processed.","returns":{"permissions":"A `Hooks.Permissions` struct with `afterSwap` set to true and all others false."}}},"version":1},"userdoc":{"kind":"user","methods":{"afterAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"notice":"The hook called after liquidity is added"},"afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"The hook called after donate"},"afterInitialize(address,(address,address,uint24,int24,address),uint160,int24)":{"notice":"The hook called after the state of a pool is initialized"},"afterRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),int256,int256,bytes)":{"notice":"The hook called after liquidity is removed"},"afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)":{"notice":"The hook called after a swap"},"beforeAddLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"The hook called before liquidity is added"},"beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)":{"notice":"The hook called before donate"},"beforeInitialize(address,(address,address,uint24,int24,address),uint160)":{"notice":"The hook called before the state of a pool is initialized"},"beforeRemoveLiquidity(address,(address,address,uint24,int24,address),(int24,int24,int256,bytes32),bytes)":{"notice":"The hook called before liquidity is removed"},"beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)":{"notice":"The hook called before a swap"},"constructor":{"notice":"Contract constructor."},"getHookPermissions()":{"notice":"Defines the permissions for this hook, indicating which hook points it will implement."},"poolManager()":{"notice":"The Uniswap v4 PoolManager contract"},"predictionManager()":{"notice":"The instance of the PredictionManager contract where predictions are recorded."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/","@ensdomains/=lib/v4-periphery/lib/v4-core/node_modules/@ensdomains/","@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","@uniswap/v4-core/=lib/v4-periphery/lib/v4-core/","chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/","ds-test/=lib/foundry-chainlink-toolkit/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/v4-periphery/lib/v4-core/lib/openzeppelin-contracts/lib/erc4626-tests/","forge-gas-snapshot/=lib/v4-periphery/lib/permit2/lib/forge-gas-snapshot/src/","forge-std/=lib/forge-std/src/","foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/","hardhat/=lib/v4-periphery/lib/v4-core/node_modules/hardhat/","openzeppelin-contracts/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/","permit2/=lib/v4-periphery/lib/permit2/","solmate/=lib/v4-periphery/lib/v4-core/lib/solmate/","v4-core/=lib/v4-periphery/lib/v4-core/src/","v4-periphery/=lib/v4-periphery/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/SwapCastHook.sol":"SwapCastHook"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/forge-std/src/console.sol":{"keccak256":"0x4bbf47eb762cef93729d6ef15e78789957147039b113e5d4df48e3d3fd16d0f5","urls":["bzz-raw://af9e3a7c3d82fb5b10b57ca4d1a82f2acbef80c077f6f6ef0cc0187c7bfd9f57","dweb:/ipfs/QmR9VzmnBDJpgiDP6CHT6truehukF9HpYvuP6kRiJbDwPP"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IExtsload.sol":{"keccak256":"0x80b53ca4907d6f0088c3b931f2b72cad1dc4615a95094d96bd0fb8dff8d5ba43","urls":["bzz-raw://375c69148622aab7a3537d5fd37d373a8e9731022c8d87bdaee46233b0a99fe1","dweb:/ipfs/QmXFjdoYRxsA5B1kyuxEXgNf3FBoL1zPvy26Qy8EtpdFRN"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IExttload.sol":{"keccak256":"0xc6b68283ebd8d1c789df536756726eed51c589134bb20821b236a0d22a135937","urls":["bzz-raw://294394f72dfc219689209f4130d85601dfd0d63c8d47578050d312db70f9b6c8","dweb:/ipfs/QmTDMQ3oxCGHgEBU48a3Lp4S1rRjc8vVCxkhE5ZNej1bsY"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IHooks.sol":{"keccak256":"0xc131ffa2d04c10a012fe715fe2c115811526b7ea34285cf0a04ce7ce8320da8d","urls":["bzz-raw://3b212358897db5d99c21244d88f97b2e788527552cb430629b472a8cc6289aec","dweb:/ipfs/QmQtwV4dDe2RYk2ErLpaAX7U82jWh1L6Lw2HRuKDvBi84G"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IPoolManager.sol":{"keccak256":"0xbdab3544da3d32dfdf7457baa94e17d5a3012952428559e013ffac45d067038e","urls":["bzz-raw://ce95ff864468e37c76adf71df061d4f3d6f3a5ec1f9bc3aea090463bc72798f4","dweb:/ipfs/QmSbWh1pLbz51yQF4HEu5NRhr8XVv9JYGEw1hq1HudAnCi"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/IProtocolFees.sol":{"keccak256":"0x32a666e588a2f66334430357bb1e2424fe7eebeb98a3364b1dd16eb6ccca9848","urls":["bzz-raw://85751d302125881f72e5f8af051c2d5d9b1f606ebaea8ca7d04fccdd27cc252d","dweb:/ipfs/QmeRwomeh9NWm6A6fgNA4KZPQZHPpdKsPQyYsHSFmvud7J"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC20Minimal.sol":{"keccak256":"0xeccadf1bf69ba2eb51f2fe4fa511bc7bb05bbd6b9f9a3cb8e5d83d9582613e0f","urls":["bzz-raw://118757369892687b99ef46ce28d6861f62c098285bd7687a4f17f7e44e5f81de","dweb:/ipfs/QmUxqbYqQtcEwwFbb9e6BBMePEaSgN8C45v6RKubD4ib8d"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/interfaces/external/IERC6909Claims.sol":{"keccak256":"0xa586f345739e52b0488a0fe40b6e375cce67fdd25758408b0efcb5133ad96a48","urls":["bzz-raw://e8c557b7e52abdbbd82e415a1acc27921446a7fd090b7d4877e52be72619547f","dweb:/ipfs/QmXE2KNPbXmGX8BQF3ei6zhzRTnhoTQg39XmqMnkhbr6QK"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/CustomRevert.sol":{"keccak256":"0x111ed3031b6990c80a93ae35dde6b6ac0b7e6af471388fdd7461e91edda9b7de","urls":["bzz-raw://c9ea883c98d6ae1829160d0977bb5195761cfd5bc81692d0a941f45717f594cd","dweb:/ipfs/QmZPwxzaeMNv536wzrAMrMswu7vMHuqPVpjcqL3YvCMoxt"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/Hooks.sol":{"keccak256":"0xd679b4b2d429689bc44f136050ebc958fb2d7d0d3a3c7b3e48c08ab4fba09aaa","urls":["bzz-raw://287190cb72840e5eb63cc7a8a1d0b9150af17d8e4ea0323f47c7e7928f2033cb","dweb:/ipfs/QmVfqWBnAQM2jUcuREDdvjcP21gNuLU35CoL3NG5CEhNcx"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/LPFeeLibrary.sol":{"keccak256":"0xbf6914e01014e7c1044111feb7df7a3d96bb503b3da827ad8464b1955580d13b","urls":["bzz-raw://33823c20a91882c9aacdcbb02f0558c05209f4d5954aa6dd4fa17c95664db475","dweb:/ipfs/QmR7owkFgpfztpp1QUg3ut3nw9iPVQqLGP4hzgmZtRUQ2J"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/ParseBytes.sol":{"keccak256":"0x7533b13f53ee2c2c55500100b22ffd6e37e7523c27874edc98663d53a8672b15","urls":["bzz-raw://82449058634fde28a085f3c59a6a5f412550c02181590593fd84c3e8b329aa17","dweb:/ipfs/Qmev4E9Au6SsE4wsArChCwfg94KhHc5gYsEsZUnjF5sRLa"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/libraries/SafeCast.sol":{"keccak256":"0x42c4a24f996a14d358be397b71f7ec9d7daf666aaec78002c63315a6ee67aa86","urls":["bzz-raw://c3db86e2ba3679105fc32edec656c70282e1fede6cab11217702443f6c26fa59","dweb:/ipfs/QmX4yaaSPdKQzYNRsezjTvZKsubzS8JRTEGFD3fPpTTCcj"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/BalanceDelta.sol":{"keccak256":"0xa719c8fe51e0a9524280178f19f6851bcc3b3b60e73618f3d60905d35ae5569f","urls":["bzz-raw://7436928dc9de35c6c7c5c636cb51adaf295cfd590da83b19a004ae33cbec9ef9","dweb:/ipfs/QmRJ9yZkUpzk4433GX3LgVVL8jwpbSYSUwXcucKisf3v4H"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/BeforeSwapDelta.sol":{"keccak256":"0x2a774312d91285313d569da1a718c909655da5432310417692097a1d4dc83a78","urls":["bzz-raw://a2c7a0379955cff9c17ab9e61f95e42909aa5947c22740f86ce940d09856f782","dweb:/ipfs/QmaAuo8UBYXsGrVuKh8iRoAAdqwtg1jDq515cW1ZRP5m9K"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/Currency.sol":{"keccak256":"0x4a0b84b282577ff6f8acf13ec9f4d32dbb9348748b49611d00e68bee96609c93","urls":["bzz-raw://45f9d62ab3d51b52957279e353853ba1547c3182c9a1e3d1846ada4a90263b01","dweb:/ipfs/QmS8NG84ccQS1yXVD8cv3eKX7J1UKxuJhbUfHTQR2opKF5"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/PoolId.sol":{"keccak256":"0x308311916ea0f5c2fd878b6a2751eb223d170a69e33f601fae56dfe3c5d392af","urls":["bzz-raw://669c2cd7ac17690b5d8831e0bda72822376c3a04b36afed6d31df4d75fe60918","dweb:/ipfs/QmT6EpkxqU8VF3WsgrZ66F3s1cCQRffR95z1HDYZz7ph6y"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/PoolKey.sol":{"keccak256":"0xf89856e0580d7a4856d3187a76858377ccee9d59702d230c338d84388221b786","urls":["bzz-raw://6f3118fa189025695c37fdf0bdd1190f085ad097484d3c88cf4c56d1db65f639","dweb:/ipfs/QmamXpgtB8GV1CaFLvqefPWSoikLDhMk1yU4heBnVzU8gi"],"license":"MIT"},"lib/v4-periphery/lib/v4-core/src/types/PoolOperation.sol":{"keccak256":"0x7a1a107fc1f2208abb2c9364c8c54e56e98dca27673e9441bed2b949b6382162","urls":["bzz-raw://4ad2470383bc5595d5af17840c64971f457adac68895a4db41ba5c71a4478e07","dweb:/ipfs/QmdwKhBHDZFuqXrR2BfDBD9r7rB2ULGQBznsajRTkTmL4c"],"license":"MIT"},"lib/v4-periphery/src/base/ImmutableState.sol":{"keccak256":"0x1867c9fa2f9b4fa73bab0fcdc9d19ccef4eeac552273d8b84a170cd1cc90350a","urls":["bzz-raw://af2d699b439e13b599632fddfe82718aebd41055fba7c075f186675c588d1337","dweb:/ipfs/Qmc111gckSKb9aESn3wRFLeLiS4KGujaUcaYJgRnCRfwQU"],"license":"MIT"},"lib/v4-periphery/src/interfaces/IImmutableState.sol":{"keccak256":"0x36ab3100e87457ecf04887f4f540e34fd7f21d8e3b83880cb679239e60b7b06b","urls":["bzz-raw://7f290c7ce8e4832608d637a51b13dff95abecf6549485448e647a11c8ed01341","dweb:/ipfs/QmfD1R6mTp8j4EjQXmQZW3vCh11EYFjnvoaw8rXRP27mMq"],"license":"MIT"},"lib/v4-periphery/src/utils/BaseHook.sol":{"keccak256":"0x6268607345149d912996d1c2bac693b2102304cc97c19ec4fef184d6fa390e89","urls":["bzz-raw://d6c0dddffa6c5eb3c10bc45d56d58bc3f4773778322fa10a4acf46e2292b61b3","dweb:/ipfs/Qmc1Srhh6ne5Lsi2Y5BBz8pgPLmJdg8uN1UCeJzKnr6Kra"],"license":"MIT"},"src/SwapCastHook.sol":{"keccak256":"0x0d36b5b1ed1beba19478546d59b6630eb56d42dee8ac48146ce0365f04e79a0c","urls":["bzz-raw://db6aad02724172a71bb86601b22a6cde6abb42d416afab1a97f6c0b5c9001f58","dweb:/ipfs/QmPSc66cgLvybsZbq95RZANfR74BLNkPLW2C48xJKVrBwX"],"license":"MIT"},"src/interfaces/IPredictionManager.sol":{"keccak256":"0xad5e6b2548a456402524df1dc32d48edbcc8dd37045e88ca256679b6fe628e6f","urls":["bzz-raw://93f1c0ba6a593647b1a4cf38a75bc6ffad56e1283b62912d5bad6ec28b2d3e0c","dweb:/ipfs/QmWazCBcfVngLYbvWxXjLVMU42kZ52FaDUwSksggFNr4wn"],"license":"MIT"},"src/types/PredictionTypes.sol":{"keccak256":"0x19c19f67d8c7676eb898e78ea891b5a2f338a199a1d315f186aeca57299348d8","urls":["bzz-raw://d8f70b0346d4f10d95f148225a62ed83fcd60031ee9fa2989faf40380ab3db02","dweb:/ipfs/QmXkomMx9yedCk6suAWtMPSq135g4NTzeuj1S83WHXE2eN"],"license":"MIT"}},"version":1},"id":110}